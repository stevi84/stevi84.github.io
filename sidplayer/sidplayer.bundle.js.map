{"version":3,"file":"sidplayer.bundle.js","mappings":"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AM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,OACN,IAAM,MACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,SACN,IAAM,QACN,IAAM,MACN,IAAM,KACN,IAAM,SACN,IAAM,MACN,IAAM,OACN,IAAM,MACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,MACN,IAAM,OACN,IAAM,MACN,IAAM,MACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IA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","sources":["webpack://sid-player/webpack/runtime/async module","webpack://sid-player/./src/C64Sid.ts","webpack://sid-player/./src/SidPlayer.ts","webpack://sid-player/./src/SidLoad.ts","webpack://sid-player/./src/SidParse.ts","webpack://sid-player/webpack/bootstrap","webpack://sid-player/webpack/runtime/define property getters","webpack://sid-player/webpack/runtime/hasOwnProperty shorthand","webpack://sid-player/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","export const FREQUENCY_FACTOR = 17734472 / 18 / 16777216; // 0.0587253835466173\n\nconst nearestPowerOf2 = (n: number) => 1 << (31 - Math.clz32(n));\n\ntype CustomAudioParamValue =\n  | { startTime: number; value: number; interpolation: 'const' }\n  | { startTime: number; startValue: number; endTime: number; endValue: number; interpolation: 'lin' }\n  | { startTime: number; startValue: number; endValue: number; timeConstant: number; interpolation: 'exp' };\nexport class CustomAudioParam {\n  private _audioContext: AudioContext;\n  private _values: Array<CustomAudioParamValue> = [];\n  private _defaultValue: number;\n\n  constructor(audioContext: AudioContext, defaultValue: number) {\n    this._audioContext = audioContext;\n    this._values.push({ startTime: audioContext.currentTime, value: defaultValue, interpolation: 'const' });\n    this._defaultValue = defaultValue;\n  }\n\n  setValueAtTime(value: number, startTime: number): CustomAudioParam {\n    if (startTime < this._values[0].startTime) {\n      this._values.unshift({ startTime, value, interpolation: 'const' });\n    } else if (startTime >= this._values[this._values.length - 1].startTime) {\n      this._values.push({ startTime, value, interpolation: 'const' });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (startTime >= this._values[i].startTime && startTime < this._values[i + 1].startTime) {\n          this._values.splice(i + 1, 0, { startTime, value, interpolation: 'const' });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  getValueAtTime(time: number): number {\n    if (time < this._values[0].startTime) return this._defaultValue;\n\n    let value: CustomAudioParamValue | undefined;\n    if (this._values.length === 1) {\n      value = this._values[0];\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (time >= this._values[i].startTime && time < this._values[i + 1].startTime) {\n          value = this._values[i];\n          break;\n        }\n      }\n      if (!value) value = this._values[this._values.length - 1];\n    }\n\n    if (value.interpolation === 'const') {\n      return value.value;\n    } else if (value.interpolation === 'lin') {\n      if (time < value.endTime) {\n        return (\n          value.startValue +\n          ((time - value.startTime) / (value.endTime - value.startTime)) * (value.endValue - value.startValue)\n        );\n      } else {\n        return value.endValue;\n      }\n    } else {\n      return (\n        value.endValue + (value.startValue - value.endValue) * Math.exp(-(time - value.startTime) / value.timeConstant)\n      );\n    }\n  }\n\n  get value(): number {\n    return this.getValueAtTime(this._audioContext.currentTime);\n  }\n\n  set value(value: number) {\n    this.setValueAtTime(value, this._audioContext.currentTime);\n  }\n\n  cancelScheduledValues(startTime: number) {\n    const deleteIndex = this._values.findIndex((value) => startTime < value.startTime);\n    if (deleteIndex >= 0) this._values.splice(deleteIndex);\n    if (this._values.length === 0)\n      this._values.push({\n        startTime: this._audioContext.currentTime,\n        value: this._defaultValue,\n        interpolation: 'const',\n      });\n  }\n\n  linearRampToValueAtTime(value: number, endTime: number): CustomAudioParam {\n    if (endTime < this._values[0].startTime) {\n      // nichts tun\n    } else if (endTime >= this._values[this._values.length - 1].startTime) {\n      const startEntry = this._values.pop()!;\n      this._values.push({\n        startTime: startEntry.startTime,\n        startValue: startEntry.interpolation === 'const' ? startEntry.value : startEntry.startValue,\n        endTime,\n        endValue: value,\n        interpolation: 'lin',\n      });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (endTime >= this._values[i].startTime && endTime < this._values[i + 1].startTime) {\n          const startEntry = this._values.splice(i, 1)[0];\n          this._values.splice(i, 0, {\n            startTime: startEntry.startTime,\n            startValue: startEntry.interpolation === 'const' ? startEntry.value : startEntry.startValue,\n            endTime,\n            endValue: value,\n            interpolation: 'lin',\n          });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  setTargetAtTime(value: number, startTime: number, timeConstant: number): CustomAudioParam {\n    if (startTime < this._values[0].startTime) {\n      this._values.unshift({\n        startTime,\n        startValue: this._defaultValue,\n        endValue: value,\n        timeConstant,\n        interpolation: 'exp',\n      });\n    } else if (startTime >= this._values[this._values.length - 1].startTime) {\n      this._values.push({\n        startTime,\n        startValue: this.getValueAtTime(startTime),\n        endValue: value,\n        timeConstant,\n        interpolation: 'exp',\n      });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (startTime >= this._values[i].startTime && startTime < this._values[i + 1].startTime) {\n          this._values.splice(i + 1, 0, {\n            startTime,\n            startValue: this.getValueAtTime(startTime),\n            endValue: value,\n            timeConstant,\n            interpolation: 'exp',\n          });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n}\n\ntype CustomGenericAudioParamValue<T> = { startTime: number; value: T };\nexport class CustomGenericAudioParam<T> {\n  private _audioContext: AudioContext;\n  private _values: Array<CustomGenericAudioParamValue<T>> = [];\n  private _defaultValue: T;\n\n  constructor(audioContext: AudioContext, defaultValue: T) {\n    this._audioContext = audioContext;\n    this._values.push({ startTime: audioContext.currentTime, value: defaultValue });\n    this._defaultValue = defaultValue;\n  }\n\n  setValueAtTime(value: T, startTime: number): CustomGenericAudioParam<T> {\n    if (startTime < this._values[0].startTime) {\n      this._values.unshift({ startTime, value });\n    } else if (startTime >= this._values[this._values.length - 1].startTime) {\n      this._values.push({ startTime, value });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (startTime >= this._values[i].startTime && startTime < this._values[i + 1].startTime) {\n          this._values.splice(i + 1, 0, { startTime, value });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  getValueAtTime(time: number): T {\n    if (time < this._values[0].startTime) return this._defaultValue;\n\n    let value: CustomGenericAudioParamValue<T> | undefined;\n    if (this._values.length === 1) {\n      value = this._values[0];\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (time >= this._values[i].startTime && time < this._values[i + 1].startTime) {\n          value = this._values[i];\n          break;\n        }\n      }\n      if (!value) value = this._values[this._values.length - 1];\n    }\n    return value.value;\n  }\n\n  get value(): T {\n    return this.getValueAtTime(this._audioContext.currentTime);\n  }\n\n  set value(value: T) {\n    this.setValueAtTime(value, this._audioContext.currentTime);\n  }\n\n  cancelScheduledValues(startTime: number) {\n    const deleteIndex = this._values.findIndex((value) => startTime < value.startTime);\n    if (deleteIndex >= 0) this._values.splice(deleteIndex);\n    if (this._values.length === 0)\n      this._values.push({ startTime: this._audioContext.currentTime, value: this._defaultValue });\n  }\n}\n\ntype AudioProcessor = (phase: number, pulseWidth: number) => number;\nconst triangleProcessor: AudioProcessor = (phase: number) => (phase < 0.5 ? 4 * phase - 1 : 3 - 4 * phase);\nconst sawToothProcessor: AudioProcessor = (phase: number) => 2 * phase - 1;\nconst pulseProcessor: AudioProcessor = (phase: number, pulseWidth: number) => (phase < pulseWidth ? -1 : 1);\n\ntype GetSyncParameters = () => { frequency: number; offset: number };\n\nexport class CommonOscillator {\n  private _audioContext: AudioContext;\n  private _gain: GainNode;\n  private _frequencyParameter: CustomAudioParam;\n  private _widthParameter: CustomAudioParam;\n  private _syncParameter: CustomGenericAudioParam<boolean>;\n  private _rngParameter: CustomGenericAudioParam<boolean>;\n  private _syncOffset: number;\n  private _oscillator: ScriptProcessorNode;\n\n  constructor(audioContext: AudioContext, audioProcessor: AudioProcessor, getSyncParameters: GetSyncParameters) {\n    this._audioContext = audioContext;\n    this._gain = new GainNode(audioContext, { gain: 0 });\n    this._frequencyParameter = new CustomAudioParam(audioContext, 0);\n    this._widthParameter = new CustomAudioParam(audioContext, 0.5);\n    this._syncParameter = new CustomGenericAudioParam(audioContext, false);\n    this._rngParameter = new CustomGenericAudioParam(audioContext, false);\n    this._syncOffset = 0;\n\n    const bufferSize = nearestPowerOf2(Math.floor(audioContext.sampleRate / 60));\n    let phase = 0;\n    let syncPhase = 0;\n    let sample = 0;\n\n    this._oscillator = audioContext.createScriptProcessor(bufferSize, 1, 1);\n    this._oscillator.onaudioprocess = (e) => {\n      const values = new Float32Array(bufferSize);\n      const phasePerSample = this._frequencyParameter.value / audioContext.sampleRate;\n      const pulseWidth = this._widthParameter.value;\n      const sync = this._syncParameter.value;\n      const rng = this._rngParameter.value && audioProcessor === triangleProcessor;\n\n      const { frequency: syncFrequency, offset: syncOffset } = getSyncParameters();\n      const syncPhasePerSample = syncFrequency / audioContext.sampleRate;\n      syncPhase = (sample - syncOffset) * syncPhasePerSample;\n      syncPhase -= Math.floor(syncPhase);\n\n      if (phasePerSample !== 0) {\n        for (let i = 0; i < bufferSize; i++) {\n          sample++;\n\n          syncPhase += syncPhasePerSample;\n          // ring modulation\n          let value = rng && syncPhase >= 0.5 ? -1 : 1;\n          // synchronization\n          if (syncPhase >= 1) {\n            if (sync) {\n              this._syncOffset = sample - (syncPhase - 1) / syncPhasePerSample;\n              phase = ((syncPhase - 1) / syncPhasePerSample) * phasePerSample;\n            }\n            syncPhase -= Math.floor(syncPhase);\n          }\n\n          value *= audioProcessor(phase, pulseWidth);\n          values[i] = value;\n\n          phase += phasePerSample;\n          if (phase >= 1) {\n            this._syncOffset = sample - (phase - 1) / phasePerSample;\n            phase -= Math.floor(phase);\n          }\n        }\n      } else {\n        values.fill(0);\n      }\n\n      for (let channel = 0; channel < e.outputBuffer.numberOfChannels; channel++) {\n        const output = e.outputBuffer.getChannelData(channel);\n        for (let i = 0; i < bufferSize; i++) {\n          output[i] = values[i];\n        }\n      }\n    };\n\n    this._oscillator.connect(this._gain);\n  }\n\n  get frequency(): CustomAudioParam {\n    return this._frequencyParameter;\n  }\n\n  get width(): CustomAudioParam {\n    return this._widthParameter;\n  }\n\n  get sync(): CustomGenericAudioParam<boolean> {\n    return this._syncParameter;\n  }\n\n  get rng(): CustomGenericAudioParam<boolean> {\n    return this._rngParameter;\n  }\n\n  get syncOffset(): number {\n    return this._syncOffset;\n  }\n\n  start(startTime: number = this._audioContext.currentTime) {\n    this._gain.gain.cancelScheduledValues(startTime);\n    this._gain.gain.setValueAtTime(1, startTime);\n  }\n\n  stop(startTime: number = this._audioContext.currentTime) {\n    this._gain.gain.cancelScheduledValues(startTime);\n    this._gain.gain.setValueAtTime(0, startTime);\n  }\n\n  connect(destination: AudioNode) {\n    this._gain.connect(destination);\n  }\n\n  disconnect() {\n    this._gain.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._frequencyParameter.cancelScheduledValues(startTime);\n    this._frequencyParameter.setValueAtTime(0, startTime);\n    this._widthParameter.cancelScheduledValues(startTime);\n    this._widthParameter.setValueAtTime(0.5, startTime);\n    this._syncParameter.cancelScheduledValues(startTime);\n    this._syncParameter.setValueAtTime(false, startTime);\n    this._rngParameter.cancelScheduledValues(startTime);\n    this._rngParameter.setValueAtTime(false, startTime);\n    this._syncOffset = 0;\n    this._gain.gain.cancelScheduledValues(startTime);\n    this._gain.gain.setValueAtTime(0, startTime);\n  }\n}\n\nexport class NoiseOscillator {\n  private _audioContext: AudioContext;\n  private _gain: GainNode;\n  private _frequencyParameter: CustomAudioParam;\n  private _syncOffset: number;\n  private _oscillator: ScriptProcessorNode;\n\n  constructor(audioContext: AudioContext) {\n    this._audioContext = audioContext;\n    this._gain = new GainNode(audioContext, { gain: 0 });\n    this._frequencyParameter = new CustomAudioParam(audioContext, 0);\n    this._syncOffset = 0;\n\n    const bufferSize = nearestPowerOf2(Math.floor(audioContext.sampleRate / 60));\n    let phase = 0;\n    let phase2 = 0;\n    let sample = 0;\n    let value = 0;\n\n    this._oscillator = audioContext.createScriptProcessor(bufferSize, 1, 1);\n    this._oscillator.onaudioprocess = (e) => {\n      const values = new Float32Array(bufferSize);\n      const phasePerSample = this._frequencyParameter.value / audioContext.sampleRate;\n\n      for (let i = 0; i < bufferSize; i++) {\n        values[i] = value;\n        // http://www.sidmusic.org/sid/sidtech5.html\n        // phasePerSample*985248.6/0x100000/FREQUENCY_FACTOR\n        phase2 += 16 * phasePerSample;\n        if (phase2 >= 1) {\n          phase2 -= Math.floor(phase2);\n          value = 2 * Math.random() - 1;\n        }\n        phase += phasePerSample;\n        if (phase >= 1) {\n          this._syncOffset = sample + (phase - 1) / phasePerSample;\n          phase -= Math.floor(phase);\n        }\n        sample++;\n      }\n\n      for (let channel = 0; channel < e.outputBuffer.numberOfChannels; channel++) {\n        const output = e.outputBuffer.getChannelData(channel);\n        for (let i = 0; i < bufferSize; i++) {\n          output[i] = values[i];\n        }\n      }\n    };\n\n    this._oscillator.connect(this._gain);\n  }\n\n  get frequency(): CustomAudioParam {\n    return this._frequencyParameter;\n  }\n\n  get syncOffset(): number {\n    return this._syncOffset;\n  }\n\n  start(startTime: number = this._audioContext.currentTime) {\n    this._gain.gain.cancelScheduledValues(startTime);\n    this._gain.gain.setValueAtTime(1, startTime);\n  }\n\n  stop(startTime: number = this._audioContext.currentTime) {\n    this._gain.gain.cancelScheduledValues(startTime);\n    this._gain.gain.setValueAtTime(0, startTime);\n  }\n\n  connect(destination: AudioNode) {\n    this._gain.connect(destination);\n  }\n\n  disconnect() {\n    this._gain.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._frequencyParameter.cancelScheduledValues(startTime);\n    this._frequencyParameter.setValueAtTime(0, startTime);\n    this._syncOffset = 0;\n    this._gain.gain.cancelScheduledValues(startTime);\n    this._gain.gain.setValueAtTime(0, startTime);\n  }\n}\n\nexport type Waveform = 'triangle' | 'sawtooth' | 'pulse' | 'noise';\n\nexport class SidVoice {\n  private _audioContext: AudioContext;\n  private _adsrGain: GainNode;\n  private _triangleOsc: CommonOscillator;\n  private _sawtoothOsc: CommonOscillator;\n  private _pulseOsc: CommonOscillator;\n  private _noiseOsc: NoiseOscillator;\n  private _activeWaveforms: CustomGenericAudioParam<Waveform[]>;\n  private _attackDurationParameter: CustomAudioParam;\n  private _decayDurationParameter: CustomAudioParam;\n  private _sustainLevelParameter: CustomAudioParam;\n  private _releaseDurationParameter: CustomAudioParam;\n  private _adsrGainParameter: CustomAudioParam;\n\n  constructor(audioContext: AudioContext, getSyncParameters: GetSyncParameters) {\n    this._audioContext = audioContext;\n    this._adsrGain = new GainNode(audioContext, { gain: 0 });\n    this._triangleOsc = new CommonOscillator(audioContext, triangleProcessor, getSyncParameters);\n    this._sawtoothOsc = new CommonOscillator(audioContext, sawToothProcessor, getSyncParameters);\n    this._pulseOsc = new CommonOscillator(audioContext, pulseProcessor, getSyncParameters);\n    this._noiseOsc = new NoiseOscillator(audioContext);\n    this._activeWaveforms = new CustomGenericAudioParam<Waveform[]>(audioContext, []);\n    this._attackDurationParameter = new CustomAudioParam(audioContext, 0.002);\n    this._decayDurationParameter = new CustomAudioParam(audioContext, 0.006);\n    this._sustainLevelParameter = new CustomAudioParam(audioContext, 0);\n    this._releaseDurationParameter = new CustomAudioParam(audioContext, 0.006);\n    this._adsrGainParameter = new CustomAudioParam(audioContext, 0);\n\n    this._triangleOsc.connect(this._adsrGain);\n    this._sawtoothOsc.connect(this._adsrGain);\n    this._pulseOsc.connect(this._adsrGain);\n    this._noiseOsc.connect(this._adsrGain);\n  }\n\n  get triangleOscillator(): CommonOscillator {\n    return this._triangleOsc;\n  }\n\n  get sawtoothOscillator(): CommonOscillator {\n    return this._sawtoothOsc;\n  }\n\n  get pulseOscillator(): CommonOscillator {\n    return this._pulseOsc;\n  }\n\n  get noiseOscillator(): NoiseOscillator {\n    return this._noiseOsc;\n  }\n\n  get syncFrequency(): number {\n    if (this._activeWaveforms.value.length === 0) return 0;\n    switch (this._activeWaveforms.value[0]) {\n      case 'triangle':\n        return this._triangleOsc.frequency.value;\n      case 'sawtooth':\n        return this._sawtoothOsc.frequency.value;\n      case 'pulse':\n        return this._pulseOsc.frequency.value;\n      case 'noise':\n        return this._noiseOsc.frequency.value;\n    }\n  }\n\n  get syncOffset(): number {\n    if (this._activeWaveforms.value.length === 0) return 0;\n    switch (this._activeWaveforms.value[0]) {\n      case 'triangle':\n        return this._triangleOsc.syncOffset;\n      case 'sawtooth':\n        return this._sawtoothOsc.syncOffset;\n      case 'pulse':\n        return this._pulseOsc.syncOffset;\n      case 'noise':\n        return this._noiseOsc.syncOffset;\n    }\n  }\n\n  /**\n   *\n   * @param value 0-65535\n   * @param startTime\n   */\n  c64Frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this.frequency(value * FREQUENCY_FACTOR, startTime);\n  }\n  /**\n   *\n   * @param value [Hz]\n   * @param startTime\n   */\n  frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this._triangleOsc.frequency.setValueAtTime(value, startTime);\n    this._sawtoothOsc.frequency.setValueAtTime(value, startTime);\n    this._pulseOsc.frequency.setValueAtTime(value, startTime);\n    this._noiseOsc.frequency.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64Waveform(value: number, startTime: number = this._audioContext.currentTime) {\n    const waveforms: Waveform[] = [];\n    if ((value & 8) !== 0) {\n      waveforms.push('noise');\n    }\n    if ((value & 4) !== 0) {\n      waveforms.push('pulse');\n    }\n    if ((value & 2) !== 0) {\n      waveforms.push('sawtooth');\n    }\n    if ((value & 1) !== 0) {\n      waveforms.push('triangle');\n    }\n    this.waveform(waveforms, startTime);\n  }\n  waveform(value: Waveform[], startTime: number = this._audioContext.currentTime) {\n    if (value.includes('triangle')) {\n      this._triangleOsc.start(startTime);\n    } else {\n      this._triangleOsc.stop(startTime);\n    }\n    if (value.includes('sawtooth')) {\n      this._sawtoothOsc.start(startTime);\n    } else {\n      this._sawtoothOsc.stop(startTime);\n    }\n    if (value.includes('pulse')) {\n      this._pulseOsc.start(startTime);\n    } else {\n      this._pulseOsc.stop(startTime);\n    }\n    if (value.includes('noise')) {\n      this._noiseOsc.start(startTime);\n    } else {\n      this._noiseOsc.stop(startTime);\n    }\n    this._activeWaveforms.setValueAtTime(value.slice(), startTime);\n  }\n\n  private static timeTable: number[] = [\n    0.002, 0.008, 0.016, 0.024, 0.038, 0.056, 0.068, 0.08, 0.1, 0.25, 0.5, 0.8, 1, 3, 5, 8,\n  ];\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64AttackDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this.attackDuration(SidVoice.timeTable[value], startTime);\n  }\n  /**\n   *\n   * @param value [s]\n   * @param startTime\n   */\n  attackDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this._attackDurationParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64DecayDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this.decayDuration(SidVoice.timeTable[value] * 3, startTime);\n  }\n  /**\n   *\n   * @param value [s]\n   * @param startTime\n   */\n  decayDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this._decayDurationParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64SustainLevel(value: number, startTime: number = this._audioContext.currentTime) {\n    this.sustainLevel(value / 15, startTime);\n  }\n  /**\n   *\n   * @param value [%] 0-1\n   * @param startTime\n   */\n  sustainLevel(value: number, startTime: number = this._audioContext.currentTime) {\n    this._sustainLevelParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64ReleaseDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this.releaseDuration(SidVoice.timeTable[value] * 3, startTime);\n  }\n  /**\n   *\n   * @param value [s]\n   * @param startTime\n   */\n  releaseDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this._releaseDurationParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-4095\n   * @param startTime\n   */\n  c64PulseWidth(value: number, startTime: number = this._audioContext.currentTime) {\n    this.pulseWidth(value / 4095, startTime);\n  }\n  /**\n   *\n   * @param value [%] 0-1, 0 (only low) ... 1 (only high)\n   * @param startTime\n   */\n  pulseWidth(value: number, startTime: number = this._audioContext.currentTime) {\n    this._pulseOsc.width.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-1\n   * @param startTime\n   */\n  c64Sync(value: number, startTime: number = this._audioContext.currentTime) {\n    this.sync(Boolean(value), startTime);\n  }\n  /**\n   *\n   * @param value on/off\n   * @param startTime\n   */\n  sync(value: boolean, startTime: number = this._audioContext.currentTime) {\n    this._triangleOsc.sync.setValueAtTime(value, startTime);\n    this._sawtoothOsc.sync.setValueAtTime(value, startTime);\n    this._pulseOsc.sync.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-1\n   * @param startTime\n   */\n  c64Rng(value: number, startTime: number = this._audioContext.currentTime) {\n    this.rng(Boolean(value), startTime);\n  }\n  /**\n   *\n   * @param value on/off\n   * @param startTime\n   */\n  rng(value: boolean, startTime: number = this._audioContext.currentTime) {\n    this._triangleOsc.rng.setValueAtTime(value, startTime);\n    this._sawtoothOsc.rng.setValueAtTime(value, startTime);\n    this._pulseOsc.rng.setValueAtTime(value, startTime);\n  }\n\n  start(startTime: number = this._audioContext.currentTime) {\n    // ADSR-Envelope\n    // https://www.leafwindow.com/en/digital-piano-with-web-audio-api-5-en/\n    const attackDuration = this._attackDurationParameter.value;\n    const decayDuration = this._decayDurationParameter.value;\n    const timeConstant = 0.2452 * decayDuration;\n    const sustainLevel = this._sustainLevelParameter.value;\n    const startValue = this._adsrGainParameter.getValueAtTime(startTime);\n    // cancelScheduledValues instead of cancelAndHoldAtTime during attack phase removes the whole linearRamp\n    // cancelAndHoldAtTime without setValueAtTime during decay/release phase -> linearRamp starts at 0\n    this._adsrGain.gain.cancelAndHoldAtTime(startTime);\n    this._adsrGain.gain.setValueAtTime(startValue, startTime);\n    this._adsrGain.gain.linearRampToValueAtTime(1, startTime + attackDuration);\n    this._adsrGain.gain.setTargetAtTime(sustainLevel, startTime + attackDuration, timeConstant);\n    this._adsrGainParameter.cancelScheduledValues(startTime);\n    this._adsrGainParameter.setValueAtTime(startValue, startTime);\n    this._adsrGainParameter.linearRampToValueAtTime(1, startTime + attackDuration);\n    this._adsrGainParameter.setTargetAtTime(sustainLevel, startTime + attackDuration, timeConstant);\n  }\n\n  stop(startTime: number = this._audioContext.currentTime) {\n    const releaseDuration = this._releaseDurationParameter.value;\n    const timeConstant = 0.2452 * releaseDuration;\n    const startValue = this._adsrGainParameter.getValueAtTime(startTime);\n    this._adsrGain.gain.cancelAndHoldAtTime(startTime);\n    this._adsrGain.gain.setValueAtTime(startValue, startTime);\n    this._adsrGain.gain.setTargetAtTime(0, startTime, timeConstant);\n    this._adsrGainParameter.cancelScheduledValues(startTime);\n    this._adsrGainParameter.setValueAtTime(startValue, startTime);\n    this._adsrGainParameter.setTargetAtTime(0, startTime, timeConstant);\n  }\n\n  connect(destination: AudioNode) {\n    this._adsrGain.connect(destination);\n  }\n\n  disconnect() {\n    this._adsrGain.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._attackDurationParameter.cancelScheduledValues(startTime);\n    this._attackDurationParameter.setValueAtTime(0.002, startTime);\n    this._decayDurationParameter.cancelScheduledValues(startTime);\n    this._decayDurationParameter.setValueAtTime(0.006, startTime);\n    this._sustainLevelParameter.cancelScheduledValues(startTime);\n    this._sustainLevelParameter.setValueAtTime(0, startTime);\n    this._releaseDurationParameter.cancelScheduledValues(startTime);\n    this._releaseDurationParameter.setValueAtTime(0.006, startTime);\n    this._adsrGainParameter.cancelScheduledValues(startTime);\n    this._adsrGainParameter.setValueAtTime(0, startTime);\n    this._triangleOsc.reset(startTime);\n    this._sawtoothOsc.reset(startTime);\n    this._pulseOsc.reset(startTime);\n    this._noiseOsc.reset(startTime);\n    this._activeWaveforms.cancelScheduledValues(startTime);\n    this._activeWaveforms.setValueAtTime([], startTime);\n    this._adsrGain.gain.cancelScheduledValues(startTime);\n    this._adsrGain.gain.setValueAtTime(0, startTime);\n  }\n}\n\nexport const getFilterFrequency = (value: number, y0: number, ymax: number, x0: number, mu: number) =>\n  y0 + (ymax - y0) / (1 + Math.exp(-mu * (value - x0)));\n// lowpass ccs64\nexport const getLowPassFrequency = (value: number) => getFilterFrequency(value, 253.7, 1786, 776.6, 0.01395);\n// highpass ccs64\nexport const getHighPassFrequency = (value: number) => getFilterFrequency(value, 406, 6032, 979.5, 0.0108);\n// bandpass ccs64\nexport const getBandPassFrequency = (value: number) => getFilterFrequency(value, 317.2, 2447, 838.8, 0.01555);\n\nexport const getFilterValue = (frequency: number, y0: number, ymax: number, x0: number, mu: number) => {\n  if (frequency <= y0) return 0;\n  if (frequency >= ymax) return 2047;\n  const value = x0 - Math.log((ymax - frequency) / (frequency - y0)) / mu;\n  return Math.max(Math.min(value, 2047), 0);\n};\n\n// lowpass ccs64\nexport const getLowPassValue = (frequency: number) => getFilterValue(frequency, 253.7, 1786, 776.6, 0.01395);\n// highpass ccs64\nexport const getHighPassValue = (frequency: number) => getFilterValue(frequency, 406, 6032, 979.5, 0.0108);\n// bandpass ccs64\nexport const getBandPassValue = (frequency: number) => getFilterValue(frequency, 317.2, 2447, 838.8, 0.01555);\n\nexport const getFilterResonance = (value: number, a: number, b: number, c: number, m: number, n: number) =>\n  (a * value ** 2 + b * value + c - n) / m;\n// lowpass ccs64\nexport const getLowPassResonance = (value: number) =>\n  getFilterResonance(value, -0.0142, 0.6892, -0.0047, 1.0014, -0.0762);\n// highpass ccs64\nexport const getHighPassResonance = (value: number) =>\n  getFilterResonance(value, -0.0148, 0.6794, 0.1406, 0.9393, 0.0526);\n// bandpass ccs64\nexport const getBandPassResonance = (value: number) =>\n  getFilterResonance(value, -0.0125, 0.6889, 0.0649, 1.0167, 0.2444);\n\nexport type FilterMode = 'highpass' | 'lowpass' | 'bandpass';\n\nexport class SidFilter {\n  private _audioContext: AudioContext;\n  private _inNode: GainNode;\n  private _lowPass: BiquadFilterNode;\n  private _highPass: BiquadFilterNode;\n  private _bandPass: BiquadFilterNode;\n  private _bandPassPeak: BiquadFilterNode;\n  private _outNode: GainNode;\n\n  private _in_out: GainNode;\n  private _in_low: GainNode;\n  private _in_band: GainNode;\n  private _in_high: GainNode;\n  private _low_band: GainNode;\n  private _low_high: GainNode;\n  private _band_high: GainNode;\n  private _low_out: GainNode;\n  private _band_out: GainNode;\n  private _high_out: GainNode;\n\n  constructor(audioContext: AudioContext) {\n    this._audioContext = audioContext;\n    this._inNode = new GainNode(audioContext, { gain: 1 });\n    this._lowPass = new BiquadFilterNode(audioContext, { type: 'lowpass' });\n    this._highPass = new BiquadFilterNode(audioContext, { type: 'highpass' });\n    this._bandPass = new BiquadFilterNode(audioContext, { type: 'bandpass', Q: 1 });\n    this._bandPassPeak = new BiquadFilterNode(audioContext, { type: 'peaking', Q: 1 });\n    this._outNode = new GainNode(audioContext, { gain: 1 });\n\n    this._in_out = new GainNode(audioContext, { gain: 1 });\n    this._in_low = new GainNode(audioContext, { gain: 0 });\n    this._in_band = new GainNode(audioContext, { gain: 0 });\n    this._in_high = new GainNode(audioContext, { gain: 0 });\n    this._low_band = new GainNode(audioContext, { gain: 0 });\n    this._low_high = new GainNode(audioContext, { gain: 0 });\n    this._band_high = new GainNode(audioContext, { gain: 0 });\n    this._low_out = new GainNode(audioContext, { gain: 0 });\n    this._band_out = new GainNode(audioContext, { gain: 0 });\n    this._high_out = new GainNode(audioContext, { gain: 0 });\n\n    this._inNode.connect(this._in_out);\n    this._in_out.connect(this._outNode);\n    this._inNode.connect(this._in_low);\n    this._in_low.connect(this._lowPass);\n    this._inNode.connect(this._in_band);\n    this._in_band.connect(this._bandPass);\n    this._bandPass.connect(this._bandPassPeak);\n    this._inNode.connect(this._in_high);\n    this._in_high.connect(this._highPass);\n    this._lowPass.connect(this._low_band);\n    this._low_band.connect(this._bandPass);\n    this._lowPass.connect(this._low_high);\n    this._low_high.connect(this._highPass);\n    this._bandPassPeak.connect(this._band_high);\n    this._band_high.connect(this._highPass);\n    this._lowPass.connect(this._low_out);\n    this._low_out.connect(this._outNode);\n    this._bandPassPeak.connect(this._band_out);\n    this._band_out.connect(this._outNode);\n    this._highPass.connect(this._high_out);\n    this._high_out.connect(this._outNode);\n  }\n\n  get inNode(): GainNode {\n    return this._inNode;\n  }\n\n  get lowPassFilter(): BiquadFilterNode {\n    return this._lowPass;\n  }\n\n  get highPassFilter(): BiquadFilterNode {\n    return this._highPass;\n  }\n\n  get bandPassFilter(): BiquadFilterNode {\n    return this._bandPass;\n  }\n\n  get bandPassPeakFilter(): BiquadFilterNode {\n    return this._bandPassPeak;\n  }\n\n  /**\n   *\n   * @param value 0-2047\n   * @param startTime\n   */\n  c64Frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.frequency.setValueAtTime(getHighPassFrequency(value), startTime);\n    this._lowPass.frequency.setValueAtTime(getLowPassFrequency(value), startTime);\n    const bandPassFrequency = getBandPassFrequency(value);\n    this._bandPass.frequency.setValueAtTime(bandPassFrequency, startTime);\n    this._bandPassPeak.frequency.setValueAtTime(bandPassFrequency, startTime);\n  }\n  frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.frequency.setValueAtTime(value, startTime);\n    this._lowPass.frequency.setValueAtTime(value, startTime);\n    this._bandPass.frequency.setValueAtTime(value, startTime);\n    this._bandPassPeak.frequency.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64Resonance(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.Q.setValueAtTime(getHighPassResonance(value), startTime);\n    this._lowPass.Q.setValueAtTime(getLowPassResonance(value), startTime);\n    this._bandPassPeak.gain.setValueAtTime(getBandPassResonance(value), startTime);\n  }\n  resonance(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.Q.setValueAtTime(value, startTime);\n    this._lowPass.Q.setValueAtTime(value, startTime);\n    this._bandPassPeak.gain.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-7\n   * @param startTime\n   */\n  c64FilterType(value: number, startTime: number = this._audioContext.currentTime) {\n    const filterTypes: FilterMode[] = [];\n    if ((value & 1) !== 0) {\n      filterTypes.push('lowpass');\n    }\n    if ((value & 2) !== 0) {\n      filterTypes.push('bandpass');\n    }\n    if ((value & 4) !== 0) {\n      filterTypes.push('highpass');\n    }\n    this.filterType(filterTypes, startTime);\n  }\n  filterType(value: FilterMode[], startTime: number = this._audioContext.currentTime) {\n    if (value.includes('lowpass') && value.includes('bandpass') && value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(1, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(1, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else if (value.includes('lowpass') && value.includes('bandpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(1, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(1, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    } else if (value.includes('lowpass') && value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(1, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else if (value.includes('bandpass') && value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(1, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(1, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else if (value.includes('lowpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(1, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    } else if (value.includes('bandpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(1, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(1, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    } else if (value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(1, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else {\n      this._in_out.gain.setValueAtTime(1, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    }\n  }\n\n  connect(destination: AudioNode) {\n    this._outNode.connect(destination);\n  }\n\n  disconnect() {\n    this._outNode.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._highPass.frequency.cancelScheduledValues(startTime);\n    this._highPass.frequency.setValueAtTime(0, startTime);\n    this._highPass.Q.cancelScheduledValues(startTime);\n    this._highPass.Q.setValueAtTime(1, startTime);\n    this._lowPass.frequency.cancelScheduledValues(startTime);\n    this._lowPass.frequency.setValueAtTime(0, startTime);\n    this._lowPass.Q.cancelScheduledValues(startTime);\n    this._lowPass.Q.setValueAtTime(1, startTime);\n    this._bandPass.frequency.cancelScheduledValues(startTime);\n    this._bandPass.frequency.setValueAtTime(0, startTime);\n    this._bandPassPeak.frequency.cancelScheduledValues(startTime);\n    this._bandPassPeak.frequency.setValueAtTime(0, startTime);\n    this._bandPassPeak.gain.cancelScheduledValues(startTime);\n    this._bandPassPeak.gain.setValueAtTime(1, startTime);\n    this._in_out.gain.cancelScheduledValues(startTime);\n    this._in_out.gain.setValueAtTime(1, startTime);\n    this._in_low.gain.cancelScheduledValues(startTime);\n    this._in_low.gain.setValueAtTime(0, startTime);\n    this._in_band.gain.cancelScheduledValues(startTime);\n    this._in_band.gain.setValueAtTime(0, startTime);\n    this._in_high.gain.cancelScheduledValues(startTime);\n    this._in_high.gain.setValueAtTime(0, startTime);\n    this._low_band.gain.cancelScheduledValues(startTime);\n    this._low_band.gain.setValueAtTime(0, startTime);\n    this._low_high.gain.cancelScheduledValues(startTime);\n    this._low_high.gain.setValueAtTime(0, startTime);\n    this._band_high.gain.cancelScheduledValues(startTime);\n    this._band_high.gain.setValueAtTime(0, startTime);\n    this._low_out.gain.cancelScheduledValues(startTime);\n    this._low_out.gain.setValueAtTime(0, startTime);\n    this._band_out.gain.cancelScheduledValues(startTime);\n    this._band_out.gain.setValueAtTime(0, startTime);\n    this._high_out.gain.cancelScheduledValues(startTime);\n    this._high_out.gain.setValueAtTime(0, startTime);\n  }\n}\n\nexport class Sid {\n  private _audioContext: AudioContext;\n  private _mainGain: GainNode;\n  private _voice1: SidVoice;\n  private _voice2: SidVoice;\n  private _voice3: SidVoice;\n  private _filter: SidFilter;\n\n  private _v1_gain: GainNode;\n  private _v1_filter: GainNode;\n  private _v1_main: GainNode;\n  private _v2_gain: GainNode;\n  private _v2_filter: GainNode;\n  private _v2_main: GainNode;\n  private _v3_gain: GainNode;\n  private _v3_switch: GainNode;\n  private _v3_filter: GainNode;\n  private _v3_main: GainNode;\n\n  constructor(audioContext: AudioContext = new AudioContext()) {\n    this._audioContext = audioContext;\n    this._mainGain = new GainNode(audioContext, { gain: 1 });\n    this._voice1 = new SidVoice(audioContext, () => ({\n      frequency: this._voice3.syncFrequency,\n      offset: this._voice3.syncOffset,\n    }));\n    this._voice2 = new SidVoice(audioContext, () => ({\n      frequency: this._voice1.syncFrequency,\n      offset: this._voice1.syncOffset,\n    }));\n    this._voice3 = new SidVoice(audioContext, () => ({\n      frequency: this._voice2.syncFrequency,\n      offset: this._voice2.syncOffset,\n    }));\n    this._filter = new SidFilter(audioContext);\n\n    this._v1_gain = new GainNode(audioContext, { gain: 1 / 3 });\n    this._v1_filter = new GainNode(audioContext, { gain: 0 });\n    this._v1_main = new GainNode(audioContext, { gain: 1 });\n    this._v2_gain = new GainNode(audioContext, { gain: 1 / 3 });\n    this._v2_filter = new GainNode(audioContext, { gain: 0 });\n    this._v2_main = new GainNode(audioContext, { gain: 1 });\n    this._v3_gain = new GainNode(audioContext, { gain: 1 / 3 });\n    this._v3_switch = new GainNode(audioContext, { gain: 1 });\n    this._v3_filter = new GainNode(audioContext, { gain: 0 });\n    this._v3_main = new GainNode(audioContext, { gain: 1 });\n\n    this._voice1.connect(this._v1_gain);\n    this._v1_gain.connect(this._v1_filter);\n    this._v1_filter.connect(this._filter.inNode);\n    this._v1_gain.connect(this._v1_main);\n    this._v1_main.connect(this._mainGain);\n    this._voice2.connect(this._v2_gain);\n    this._v2_gain.connect(this._v2_filter);\n    this._v2_filter.connect(this._filter.inNode);\n    this._v2_gain.connect(this._v2_main);\n    this._v2_main.connect(this._mainGain);\n    this._voice3.connect(this._v3_switch);\n    this._v3_switch.connect(this._v3_gain);\n    this._v3_gain.connect(this._v3_filter);\n    this._v3_filter.connect(this._filter.inNode);\n    this._v3_gain.connect(this._v3_main);\n    this._v3_main.connect(this._mainGain);\n    this._filter.connect(this._mainGain);\n    this._mainGain.connect(audioContext.destination);\n  }\n\n  start(): Promise<void> {\n    return this._audioContext.resume();\n  }\n\n  get voice1(): SidVoice {\n    return this._voice1;\n  }\n\n  get voice2(): SidVoice {\n    return this._voice2;\n  }\n\n  get voice3(): SidVoice {\n    return this._voice3;\n  }\n\n  get voices(): SidVoice[] {\n    return [this._voice1, this._voice2, this._voice3];\n  }\n\n  get filter(): SidFilter {\n    return this._filter;\n  }\n\n  /**\n   *\n   * @param value 0-7\n   * @param startTime\n   */\n  c64FilterVoice(value: number, startTime: number = this._audioContext.currentTime) {\n    this.filterVoice(0, (value & 1) !== 0 ? 1 : 0, startTime);\n    this.filterVoice(1, (value & 2) !== 0 ? 1 : 0, startTime);\n    this.filterVoice(2, (value & 4) !== 0 ? 1 : 0, startTime);\n  }\n  filterVoice(voiceIndex: number, value: 0 | 1, startTime: number = this._audioContext.currentTime) {\n    switch (voiceIndex) {\n      case 0:\n        this._v1_filter.gain.setValueAtTime(value, startTime);\n        this._v1_main.gain.setValueAtTime(1 - value, startTime);\n        break;\n      case 1:\n        this._v2_filter.gain.setValueAtTime(value, startTime);\n        this._v2_main.gain.setValueAtTime(1 - value, startTime);\n        break;\n      case 2:\n        this._v3_filter.gain.setValueAtTime(value, startTime);\n        this._v3_main.gain.setValueAtTime(1 - value, startTime);\n        break;\n    }\n  }\n\n  /**\n   *\n   * @param value 0-1\n   * @param startTime\n   */\n  c64Voice3Off(value: number, startTime: number = this._audioContext.currentTime) {\n    this.voice3Off(Boolean(value), startTime);\n  }\n  voice3Off(value: boolean, startTime: number = this._audioContext.currentTime) {\n    this._v3_switch.gain.setValueAtTime(value ? 0 : 1, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64Volume(value: number, startTime: number = this._audioContext.currentTime) {\n    this.volume(value / 15, startTime);\n  }\n  volume(value: number, startTime: number = this._audioContext.currentTime) {\n    this._mainGain.gain.setValueAtTime(value, startTime);\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._mainGain.gain.cancelScheduledValues(startTime);\n    this._mainGain.gain.setValueAtTime(1, startTime);\n    this._voice1.reset(startTime);\n    this._voice2.reset(startTime);\n    this._voice3.reset(startTime);\n    this._filter.reset(startTime);\n    this._v1_gain.gain.cancelScheduledValues(startTime);\n    this._v1_gain.gain.setValueAtTime(1 / 3, startTime);\n    this._v1_filter.gain.cancelScheduledValues(startTime);\n    this._v1_filter.gain.setValueAtTime(0, startTime);\n    this._v1_main.gain.cancelScheduledValues(startTime);\n    this._v1_main.gain.setValueAtTime(1, startTime);\n    this._v2_gain.gain.cancelScheduledValues(startTime);\n    this._v2_gain.gain.setValueAtTime(1 / 3, startTime);\n    this._v2_filter.gain.cancelScheduledValues(startTime);\n    this._v2_filter.gain.setValueAtTime(0, startTime);\n    this._v2_main.gain.cancelScheduledValues(startTime);\n    this._v2_main.gain.setValueAtTime(1, startTime);\n    this._v3_gain.gain.cancelScheduledValues(startTime);\n    this._v3_gain.gain.setValueAtTime(1 / 3, startTime);\n    this._v3_switch.gain.cancelScheduledValues(startTime);\n    this._v3_switch.gain.setValueAtTime(1, startTime);\n    this._v3_filter.gain.cancelScheduledValues(startTime);\n    this._v3_filter.gain.setValueAtTime(0, startTime);\n    this._v3_main.gain.cancelScheduledValues(startTime);\n    this._v3_main.gain.setValueAtTime(1, startTime);\n  }\n}\n","import { audioContext, loadFile, reloadVoices } from './SidLoad';\n\nconst keyDivs: HTMLDivElement[] = [];\nfor (let i = 0; i < 96; i++) keyDivs[i] = document.getElementById(`k${i}`) as HTMLDivElement;\nconst textLines: HTMLParagraphElement[] = [];\nfor (let i = 0; i < 5; i++) textLines[i] = document.getElementById(`line${i}`) as HTMLParagraphElement;\nconst fileSelect = document.getElementById('fileSelect') as HTMLSelectElement;\nconst openFileInput = document.getElementById('openFile') as HTMLInputElement;\nconst playPauseButton = document.getElementById('playPause') as HTMLButtonElement;\nconst currentSpan = document.getElementById('current') as HTMLSpanElement;\nconst timeSlider = document.getElementById('timeslider') as HTMLInputElement;\nconst durationSpan = document.getElementById('duration') as HTMLSpanElement;\n\nexport const notes: { start: number; stop: number; index: number }[][] = [[], [], []];\nexport const currentNotes: number[] = [-1, -1, -1];\nexport const lastNotes: number[] = [-1, -1, -1];\n\nlet duration = 0;\nlet startTime = 0;\nlet audioContextStartTime = audioContext.currentTime;\n\nconst getTimeString = (value: number): string => {\n  const mins = Math.floor(value / 60);\n  const secs = Math.floor(value - 60 * mins);\n  return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n};\n\nconst loadSidFile = async (file: Blob) => {\n  playPauseButton.disabled = true;\n  timeSlider.disabled = true;\n  startTime = 0;\n  audioContextStartTime = audioContext.currentTime;\n  const { duration: loadedDuration, text } = await loadFile(file);\n  duration = loadedDuration;\n  currentSpan.textContent = getTimeString(0);\n  durationSpan.textContent = getTimeString(duration);\n  timeSlider.max = String(duration);\n  timeSlider.value = String(startTime);\n  playPauseButton.disabled = false;\n  timeSlider.disabled = false;\n  for (let i = 0; i < text.length; i++) textLines[i].textContent = text[i];\n  for (let i = text.length; i < 5; i++) textLines[i].textContent = '';\n};\n\nopenFileInput.onchange = (e: Event) => {\n  stop();\n  statePlaying = false;\n  playPauseButton.classList.remove('paused');\n\n  // @ts-ignore\n  const file: File = e.target.files[0];\n  if (!file) return;\n  loadSidFile(file);\n};\nfileSelect.onchange = async (e: Event) => {\n  stop();\n  statePlaying = false;\n  playPauseButton.classList.remove('paused');\n\n  // @ts-ignore\n  const value: string = e.target.value;\n  if (value) {\n    const response = await fetch(`sids/${value}.MUS.prg`);\n    const file = await response.blob();\n    loadSidFile(file);\n  } else {\n    // Reset\n    playPauseButton.disabled = true;\n    timeSlider.disabled = true;\n    startTime = 0;\n    audioContextStartTime = audioContext.currentTime;\n    duration = 0;\n    currentSpan.textContent = '';\n    durationSpan.textContent = '';\n    timeSlider.max = String(1);\n    timeSlider.value = String(0);\n    for (let i = 0; i < 5; i++) textLines[i].textContent = '';\n  }\n};\n\nconst clearKeyColor = (index: number) => {\n  const color = [0, 2, 4, 5, 7, 9, 11].includes(index % 12)\n    ? 'linear-gradient(to bottom, #fff, #e0e0e0)'\n    : 'linear-gradient(to bottom, #222, #000)';\n  keyDivs[index].style.background = color;\n};\nconst colorMap: { [key: number]: string } = { 0: '#EEEE77', 1: '#664400', 2: '#CC44CC' };\nconst setKeyColor = (index: number, voice: number) => {\n  keyDivs[index].style.background = colorMap[voice];\n};\n\nlet statePlaying = false;\nconst playPause = () => {\n  if (statePlaying) {\n    pause();\n    statePlaying = false;\n    playPauseButton.classList.remove('paused');\n  } else {\n    play();\n    statePlaying = true;\n    playPauseButton.classList.add('paused');\n  }\n};\nconst play = () => {\n  // @ts-ignore\n  if (!updateKeyboardInterval) updateKeyboardInterval = setInterval(updateKeyboard, 100);\n  audioContext.resume();\n};\nconst pause = () => {\n  if (updateKeyboardInterval) {\n    clearInterval(updateKeyboardInterval);\n    updateKeyboardInterval = undefined;\n  }\n  audioContext.suspend();\n};\nconst stop = () => {\n  pause();\n  for (let i = 0; i < 3; i++) {\n    if (lastNotes[i] >= 0) {\n      clearKeyColor(notes[i][lastNotes[i]].index);\n      lastNotes[i] = -1;\n    }\n  }\n};\nconst move = (e: MouseEvent | TouchEvent) => {\n  playPauseButton.disabled = true;\n  timeSlider.disabled = true;\n  // @ts-ignore\n  startTime = Number(e.target.value);\n  audioContextStartTime = audioContext.currentTime;\n  reloadVoices(startTime);\n  if (statePlaying) play();\n  playPauseButton.disabled = false;\n  timeSlider.disabled = false;\n}\n\nplayPauseButton.onclick = playPause;\ntimeSlider.oninput = (e: Event) => {\n  stop();\n  // @ts-ignore\n  currentSpan.textContent = getTimeString(e.target.value);\n};\ntimeSlider.onmouseup = (e: MouseEvent) => move(e);\ntimeSlider.ontouchend = (e: TouchEvent) => move(e);\n\nlet updateKeyboardInterval: number | undefined;\nconst updateKeyboard = () => {\n  const currentTime = audioContext.currentTime;\n  for (let i = 0; i < 3; i++) {\n    if (notes[i].length === 0) continue;\n    if (lastNotes[i] >= 0 && currentTime > notes[i][lastNotes[i]].stop) {\n      clearKeyColor(notes[i][lastNotes[i]].index);\n      lastNotes[i] = -1;\n    }\n    if (currentNotes[i] < notes[i].length - 1 && currentTime >= notes[i][currentNotes[i] + 1].start) {\n      while (currentNotes[i] < notes[i].length - 1 && notes[i][currentNotes[i] + 1].start <= currentTime)\n        currentNotes[i]++;\n      setKeyColor(notes[i][currentNotes[i]].index, i);\n      lastNotes[i] = currentNotes[i];\n    }\n  }\n  timeSlider.value = String(currentTime - audioContextStartTime + startTime);\n  currentSpan.textContent = getTimeString(Math.min(currentTime - audioContextStartTime + startTime, duration));\n  if (currentTime - audioContextStartTime + startTime > duration) {\n    stop();\n    statePlaying = false;\n    playPauseButton.classList.remove('paused');\n  }\n};\n","import {\n  FilterMode,\n  FREQUENCY_FACTOR,\n  getBandPassFrequency,\n  getBandPassValue,\n  getHighPassFrequency,\n  getHighPassValue,\n  getLowPassFrequency,\n  getLowPassValue,\n  Sid as SidClass,\n  SidVoice,\n} from './C64Sid';\nimport { Command, Dotted, Duration, Modifier, Note, Octave, parseSid } from './SidParse';\nimport { currentNotes, lastNotes, notes } from './SidPlayer';\n\nexport const audioContext = new AudioContext();\nawait audioContext.suspend();\n\n// check for cancelAndHoldAtTime, not implemented in Mozilla Firefox\ntry {\n  const testGain = audioContext.createGain();\n  if (typeof testGain.gain.cancelAndHoldAtTime !== 'function')\n    throw new Error('Unsupported browser: cancelAndHoldAtTime not available.');\n} catch (e) {\n  console.error('Error during feature detection:', e);\n  document.getElementById('main-content')!.style.display = 'none';\n  document.getElementById('unsupported-message')!.style.display = 'block';\n  throw e;\n}\n\nconst Sid = new SidClass(audioContext);\n\nconst calcFrequency = (\n  note: Note,\n  modifier: Modifier,\n  octave: Octave,\n  detune: number,\n  transpose: number\n): { index: number; frequency: number } => {\n  if (note === 'rst') return { index: -1, frequency: 0 };\n  const noteMap: { [key in Note]: number } = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11, rst: NaN };\n  let index: number = noteMap[note];\n  switch (modifier) {\n    case 'flt':\n      index--;\n      break;\n    case 'nat':\n    default:\n      break;\n    case 'shp':\n      index++;\n      break;\n    case 'dbl':\n      if (['g', 'f', 'd', 'c'].includes(note)) {\n        index += 2;\n      } else if (['a', 'b', 'e'].includes(note)) {\n        index -= 2;\n      }\n  }\n  index += 12 * octave;\n  index += transpose;\n  const frequency = 440 * 2 ** ((index - 57) / 12) + detune * FREQUENCY_FACTOR;\n  return { index, frequency };\n};\n\nconst calcDuration = (duration: Duration, dotted: Dotted, tempo: number, utilityDuration: number): number => {\n  let mod: number;\n  switch (duration) {\n    case 'whl':\n      mod = 4;\n      break;\n    case 'hlf':\n      mod = 2;\n      break;\n    case 'qtr':\n    default:\n      mod = 1;\n      break;\n    case '8th':\n      mod = 1 / 2;\n      break;\n    case '16th':\n      mod = 1 / 4;\n      break;\n    case '32nd':\n      mod = 1 / 8;\n      break;\n    case '64th':\n      mod = 1 / 16;\n      break;\n    case 'utl':\n      return utilityDuration / 60;\n  }\n  switch (dotted) {\n    case 'non':\n    default:\n      break;\n    case 'sgl':\n      mod *= 1.5;\n      break;\n    case 'dbl':\n      mod *= 1.75;\n      break;\n  }\n  return (60 / tempo) * mod;\n};\n\nconst setFrequencyPortamentoVibrato = (\n  voice: SidVoice,\n  startTime: number,\n  frequency: number,\n  duration: number,\n  portamento: { startFrequency: number; rate: number },\n  vibrato: { depth: number; rate: number }\n) => {\n  if (portamento.rate === 0 && vibrato.depth === 0) {\n    voice.frequency(frequency, startTime);\n  } else if (portamento.rate !== 0) {\n    const porRate = Math.sign(frequency - portamento.startFrequency) * portamento.rate * 60 * FREQUENCY_FACTOR;\n    if (Math.abs(frequency - portamento.startFrequency) >= Math.abs(porRate * duration)) {\n      const targetValue = portamento.startFrequency + porRate * duration;\n      voice.frequency(portamento.startFrequency, startTime);\n      voice.triangleOscillator.frequency.linearRampToValueAtTime(targetValue, startTime + duration);\n      voice.sawtoothOscillator.frequency.linearRampToValueAtTime(targetValue, startTime + duration);\n      voice.pulseOscillator.frequency.linearRampToValueAtTime(targetValue, startTime + duration);\n      voice.noiseOscillator.frequency.linearRampToValueAtTime(targetValue, startTime + duration);\n    } else {\n      const porDuration = (frequency - portamento.startFrequency) / porRate;\n      voice.frequency(portamento.startFrequency, startTime);\n      voice.triangleOscillator.frequency.linearRampToValueAtTime(frequency, startTime + porDuration);\n      voice.sawtoothOscillator.frequency.linearRampToValueAtTime(frequency, startTime + porDuration);\n      voice.pulseOscillator.frequency.linearRampToValueAtTime(frequency, startTime + porDuration);\n      voice.noiseOscillator.frequency.linearRampToValueAtTime(frequency, startTime + porDuration);\n      if (vibrato.depth !== 0)\n        setFrequencyPortamentoVibrato(\n          voice,\n          startTime + porDuration,\n          frequency,\n          duration - porDuration,\n          { ...portamento, rate: 0 },\n          vibrato\n        );\n    }\n  } else {\n    const vibRate = vibrato.depth * 60 * FREQUENCY_FACTOR;\n    const upperFreq = frequency + vibrato.depth * FREQUENCY_FACTOR * vibrato.rate;\n    let time = 0;\n    let up = true;\n    voice.frequency(frequency, startTime);\n    do {\n      if (time + vibrato.rate / 60 < duration) {\n        time += vibrato.rate / 60;\n        if (up) {\n          voice.triangleOscillator.frequency.linearRampToValueAtTime(upperFreq, startTime + time);\n          voice.sawtoothOscillator.frequency.linearRampToValueAtTime(upperFreq, startTime + time);\n          voice.pulseOscillator.frequency.linearRampToValueAtTime(upperFreq, startTime + time);\n          voice.noiseOscillator.frequency.linearRampToValueAtTime(upperFreq, startTime + time);\n          voice.frequency(upperFreq, startTime + time);\n        } else {\n          voice.triangleOscillator.frequency.linearRampToValueAtTime(frequency, startTime + time);\n          voice.sawtoothOscillator.frequency.linearRampToValueAtTime(frequency, startTime + time);\n          voice.pulseOscillator.frequency.linearRampToValueAtTime(frequency, startTime + time);\n          voice.noiseOscillator.frequency.linearRampToValueAtTime(frequency, startTime + time);\n          voice.frequency(frequency, startTime + time);\n        }\n      } else {\n        if (up) {\n          voice.triangleOscillator.frequency.linearRampToValueAtTime(\n            frequency + vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.sawtoothOscillator.frequency.linearRampToValueAtTime(\n            frequency + vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.pulseOscillator.frequency.linearRampToValueAtTime(\n            frequency + vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.noiseOscillator.frequency.linearRampToValueAtTime(\n            frequency + vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.frequency(frequency + vibRate * (duration - time), startTime + time);\n        } else {\n          voice.triangleOscillator.frequency.linearRampToValueAtTime(\n            upperFreq - vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.sawtoothOscillator.frequency.linearRampToValueAtTime(\n            upperFreq - vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.pulseOscillator.frequency.linearRampToValueAtTime(\n            upperFreq - vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.noiseOscillator.frequency.linearRampToValueAtTime(\n            upperFreq - vibRate * (duration - time),\n            startTime + duration\n          );\n          voice.frequency(upperFreq - vibRate * (duration - time), startTime + time);\n        }\n        time = duration;\n      }\n      up = !up;\n    } while (time < duration);\n  }\n};\n\nconst setPulseWidthSweep = (\n  voice: SidVoice,\n  startTime: number,\n  startValue: number,\n  sweepRate: number,\n  duration: number\n) => {\n  const rate = sweepRate * 60;\n  let time = 0;\n  let value = startValue;\n  voice.pulseOscillator.width.setValueAtTime(startValue / 4095, startTime);\n  do {\n    if (rate > 0 && time + (4095 - value) / rate < duration) {\n      time += (4095 - value) / rate;\n      value = 0;\n      voice.pulseOscillator.width.linearRampToValueAtTime(1, startTime + time);\n      voice.pulseOscillator.width.setValueAtTime(0, startTime + time);\n    } else if (rate < 0 && time - value / rate < duration) {\n      time -= value / rate;\n      value = 4095;\n      voice.pulseOscillator.width.linearRampToValueAtTime(0, startTime + time);\n      voice.pulseOscillator.width.setValueAtTime(1, startTime + time);\n    } else {\n      voice.pulseOscillator.width.linearRampToValueAtTime(\n        (value + rate * (duration - time)) / 4095,\n        startTime + duration\n      );\n      time = duration;\n    }\n  } while (time < duration);\n  voice.pulseOscillator.width.setValueAtTime(startValue / 4095, startTime + duration);\n};\n\nconst getFilterSweepValues = (\n  startValue: number,\n  sweepRate: number,\n  duration: number,\n  calc: (value: number) => number\n): number[] => {\n  const endValue = startValue + sweepRate * duration;\n  const count = Math.max(Math.floor(duration * 60), 2);\n  const step = (endValue - startValue) / (count - 1);\n  const values: number[] = [];\n  let value = startValue;\n  for (let i = 0; i < count; i++) {\n    values.push(calc(value));\n    value += step;\n  }\n  return values;\n};\n\nconst setFilterFrequencyWidthSweep = (startTime: number, startValue: number, sweepRate: number, duration: number) => {\n  const rate = sweepRate * 60;\n  let time = 0;\n  let value = startValue;\n  Sid.filter.c64Frequency(startValue, startTime);\n  do {\n    if (rate > 0 && time + (2047 - value) / rate < duration) {\n      const dur = (2047 - value) / rate;\n      Sid.filter.lowPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getLowPassFrequency),\n        startTime + time,\n        dur\n      );\n      Sid.filter.highPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getHighPassFrequency),\n        startTime + time,\n        dur\n      );\n      const bandPassValues = getFilterSweepValues(value, rate, dur, getBandPassFrequency);\n      Sid.filter.bandPassFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      Sid.filter.bandPassPeakFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      time += dur;\n      value = 0;\n    } else if (rate < 0 && time - value / rate < duration) {\n      const dur = -value / rate;\n      Sid.filter.lowPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getLowPassFrequency),\n        startTime + time,\n        dur\n      );\n      Sid.filter.highPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getHighPassFrequency),\n        startTime + time,\n        dur\n      );\n      const bandPassValues = getFilterSweepValues(value, rate, dur, getBandPassFrequency);\n      Sid.filter.bandPassFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      Sid.filter.bandPassPeakFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      time += dur;\n      value = 2047;\n    } else {\n      // -0.000001 otherwise Failed to execute 'setValueAtTime' on 'AudioParam': setValueAtTime(730.956, 1.8) overlaps setValueCurveAtTime(..., 1.476253236565001, 0.3237467634349995)\n      const dur = duration - time - 0.000001;\n      Sid.filter.lowPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getLowPassFrequency),\n        startTime + time,\n        dur\n      );\n      Sid.filter.highPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getHighPassFrequency),\n        startTime + time,\n        dur\n      );\n      const bandPassValues = getFilterSweepValues(value, rate, dur, getBandPassFrequency);\n      Sid.filter.bandPassFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      Sid.filter.bandPassPeakFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      time = duration;\n    }\n  } while (time < duration);\n  Sid.filter.c64Frequency(startValue, startTime + duration);\n};\n\nconst setAutoFilterFrequency = (\n  startTime: number,\n  noteFrequency: number,\n  autoFilter: number,\n  filter: FilterMode[]\n): number => {\n  // TODO that's probably incorrect, but difficult to determine\n  const filterFrequency = 2 * noteFrequency;\n  let filterValue = filter.includes('lowpass')\n    ? getLowPassValue(filterFrequency)\n    : filter.includes('highpass')\n    ? getHighPassValue(filterFrequency)\n    : getBandPassValue(filterFrequency);\n  filterValue = Math.max(Math.min(filterValue + autoFilter, 2047), 0);\n  Sid.filter.c64Frequency(filterValue, startTime);\n  return filterValue;\n};\n\nconst initVoices = (voices: SidVoice[]) => {\n  for (let i = 0; i < voices.length; i++) {\n    notes[i] = [];\n    currentNotes[i] = -1;\n    lastNotes[i] = -1;\n\n    voices[i].c64Waveform(4);\n    voices[i].c64AttackDuration(2);\n    voices[i].c64DecayDuration(0);\n    voices[i].c64SustainLevel(15);\n    voices[i].c64ReleaseDuration(5);\n    voices[i].c64PulseWidth(2048);\n  }\n  Sid.c64Volume(8);\n};\n\nconst logVoices = (voicesData: Command[][]) => {\n  for (let i = 0; i < voicesData.length; i++) {\n    for (let j = 0; j < voicesData[i].length; j++) {\n      const cmd = voicesData[i][j];\n      console.log(JSON.stringify({ voice: i, index: j }), JSON.stringify(cmd));\n    }\n  }\n};\n\ntype CommandPointer = { voice: number; index: number };\ntype PhraseDefinition = { index: number; pointer: CommandPointer };\n\nconst loadVoices = (voices: SidVoice[], voicesData: Command[][], startTime: number): number => {\n  initVoices(voices);\n\n  const currentTime = audioContext.currentTime;\n  let globalTime = currentTime;\n  let tempo = 100;\n  let volume = 8;\n  let utilityDuration = 12;\n\n  const voicesVars: Array<{\n    cmdPointer: CommandPointer;\n    callStack: { pointer: CommandPointer; cmd: 'def' | 'cal' }[];\n    hed: { pointer: CommandPointer; count: number };\n    time: number;\n    releasePoint: number;\n    detune: number;\n    transpose: number;\n    tie: boolean;\n    portamentoRate: number;\n    portamentoStartFrequency: number;\n    pulseWidth: number;\n    pulseWidthSweepRate: number;\n    vibratoRate: number;\n    vibratoDepth: number;\n    filter: FilterMode[];\n    filterFrequency: number;\n    filterFrequencySweepRate: number;\n    autoFilter: number;\n    halt: boolean;\n  }> = [];\n  for (let i = 0; i < voices.length; i++) {\n    voicesVars.push({\n      cmdPointer: { voice: i, index: 0 },\n      callStack: [],\n      hed: { pointer: { voice: i, index: 0 }, count: 1 },\n      time: currentTime,\n      releasePoint: 4,\n      detune: 0,\n      transpose: 0,\n      tie: false,\n      portamentoRate: 0,\n      portamentoStartFrequency: 0,\n      pulseWidth: 2048,\n      pulseWidthSweepRate: 0,\n      vibratoRate: 0,\n      vibratoDepth: 0,\n      filter: [],\n      filterFrequency: 0,\n      filterFrequencySweepRate: 0,\n      autoFilter: 0,\n      halt: false,\n    });\n  }\n\n  let voiceIndex = 0;\n\n  const phrases: PhraseDefinition[] = [];\n  for (let i = 0; i < voicesData.length; i++) {\n    for (let j = 0; j < voicesData[i].length; j++) {\n      const cmd = voicesData[i][j];\n      if (cmd.type === 'def') phrases.push({ index: cmd.data.value, pointer: { voice: i, index: j } });\n    }\n  }\n\n  do {\n    let {\n      cmdPointer,\n      callStack,\n      hed,\n      time,\n      releasePoint,\n      detune,\n      transpose,\n      tie,\n      portamentoRate,\n      portamentoStartFrequency,\n      pulseWidth,\n      pulseWidthSweepRate,\n      vibratoRate,\n      vibratoDepth,\n      filter,\n      filterFrequency,\n      filterFrequencySweepRate,\n      autoFilter,\n      halt,\n    } = voicesVars[voiceIndex];\n    while (!halt && cmdPointer.index < voicesData[cmdPointer.voice].length && time <= globalTime) {\n      const cmd = voicesData[cmdPointer.voice][cmdPointer.index];\n      // console.log(JSON.stringify(voiceIndex), JSON.stringify(cmdPointer), JSON.stringify(cmd));\n      switch (cmd.type) {\n        case 'tem':\n          tempo = cmd.data.value;\n          break;\n        case 'utl':\n          utilityDuration = cmd.data.value;\n          break;\n        case 'vol':\n          volume = cmd.data.value;\n          Sid.c64Volume(volume, Math.max(time - startTime, currentTime));\n          break;\n        case 'bmp':\n          if (cmd.data.value === 'up' && volume < 15) volume++;\n          if (cmd.data.value === 'down' && volume > 0) volume--;\n          Sid.c64Volume(volume, Math.max(time - startTime, currentTime));\n          break;\n        case 'hed':\n          hed = { pointer: { ...cmdPointer }, count: cmd.data.value - 1 };\n          break;\n        case 'tal':\n          if (hed.count > 0) {\n            cmdPointer = { ...hed.pointer };\n            hed.count--;\n          }\n          break;\n        case 'cal':\n          const phrase = phrases.find((phr) => phr.index === cmd.data.value);\n          if (!phrase) throw new Error(`UNDEFINED PHRASE CALL: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          callStack.push({ pointer: { ...cmdPointer }, cmd: 'cal' });\n          if (callStack.length > 255)\n            throw new Error(`STACK OVERFLOW: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          cmdPointer = { ...phrase.pointer };\n          break;\n        case 'def':\n          callStack.push({ pointer: { ...cmdPointer }, cmd: 'def' });\n          if (callStack.length > 255)\n            throw new Error(`STACK OVERFLOW: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          break;\n        case 'end':\n          if (callStack.length === 0)\n            throw new Error(`STACK UNDERFLOW: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          const pointer = callStack.pop()!;\n          if (pointer.cmd === 'cal') cmdPointer = { ...pointer.pointer };\n          break;\n        case 'f-m':\n          filter = cmd.data.value.slice();\n          Sid.filter.filterType(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'aut':\n          autoFilter = cmd.data.value;\n          break;\n        case 'res':\n          Sid.filter.c64Resonance(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'flt':\n          Sid.filterVoice(voiceIndex, cmd.data.value === 'yes' ? 1 : 0, Math.max(time - startTime, currentTime));\n          break;\n        case 'f-s':\n          filterFrequencySweepRate = cmd.data.value;\n          break;\n        case 'f-c':\n          filterFrequency = cmd.data.value * 8;\n          Sid.filter.c64Frequency(filterFrequency, Math.max(time - startTime, currentTime));\n          break;\n        case 'f-x':\n          // If you want to pass the external audio signal through the filter, use the F-X command.\n          break;\n        case 'atk':\n          voices[voiceIndex].c64AttackDuration(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'dcy':\n          voices[voiceIndex].c64DecayDuration(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'sus':\n          voices[voiceIndex].c64SustainLevel(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'rls':\n          voices[voiceIndex].c64ReleaseDuration(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'pnt':\n          releasePoint = cmd.data.value;\n          break;\n        case 'wav':\n          voices[voiceIndex].waveform(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'p-w':\n          pulseWidth = cmd.data.value;\n          voices[voiceIndex].c64PulseWidth(pulseWidth, Math.max(time - startTime, currentTime));\n          break;\n        case 'p-s':\n          pulseWidthSweepRate = cmd.data.value;\n          break;\n        case 'snc':\n          voices[voiceIndex].sync(cmd.data.value === 'yes', Math.max(time - startTime, currentTime));\n          break;\n        case 'rng':\n          voices[voiceIndex].rng(cmd.data.value === 'yes', Math.max(time - startTime, currentTime));\n          break;\n        case 'vdp':\n          vibratoDepth = cmd.data.value;\n          break;\n        case 'vrt':\n          vibratoRate = cmd.data.value;\n          break;\n        case 'por':\n          portamentoRate = cmd.data.value;\n          break;\n        case 'dtn':\n          detune = cmd.data.value;\n          break;\n        case 'tps':\n          transpose = cmd.data.value;\n          break;\n        case 'ms#':\n          // Measure markers have no effect when a voice is played and are used strictly for editing purposes.\n          break;\n        case '3-O':\n          Sid.voice3Off(cmd.data.value === 'yes', Math.max(time - startTime, currentTime));\n          break;\n        case 'flg':\n          // For communication from Sidplayer to the BASIC program, the FLG command is available.\n          break;\n        case 'hlt':\n          halt = true;\n          break;\n        case 'aux':\n          // The AUX command is reserved for possible future expansion. At present, this command is ignored by Sidplayer.\n          break;\n        case 'note':\n          const { index: noteIndex, frequency: noteFrequency } = calcFrequency(\n            cmd.data.note,\n            cmd.data.modifier,\n            cmd.data.octave,\n            detune,\n            transpose\n          );\n          const duration = calcDuration(cmd.data.duration, cmd.data.dotted, tempo, utilityDuration);\n          if (time >= currentTime + startTime && noteFrequency !== 0) {\n            setFrequencyPortamentoVibrato(\n              voices[voiceIndex],\n              time - startTime,\n              noteFrequency,\n              duration,\n              { startFrequency: portamentoStartFrequency, rate: portamentoRate },\n              { depth: vibratoDepth, rate: vibratoRate }\n            );\n            if (pulseWidthSweepRate !== 0)\n              setPulseWidthSweep(voices[voiceIndex], time - startTime, pulseWidth, pulseWidthSweepRate, duration);\n            if (autoFilter !== 0)\n              filterFrequency = setAutoFilterFrequency(time - startTime, noteFrequency, autoFilter, filter);\n            if (filterFrequencySweepRate !== 0)\n              setFilterFrequencyWidthSweep(time - startTime, filterFrequency, filterFrequencySweepRate, duration);\n            if (!tie) voices[voiceIndex].start(time - startTime);\n            tie = cmd.data.tie;\n            if (!tie) voices[voiceIndex].stop(time - startTime + Math.max(duration - releasePoint / 60, 0));\n            // fill notes for display during playback\n            if (noteIndex >= 0 && noteIndex <= 95)\n              notes[voiceIndex].push({\n                start: time - startTime,\n                stop: time - startTime + Math.max(duration - Math.max(releasePoint - 2, 0) / 60, 0),\n                index: noteIndex,\n              });\n          }\n          time += duration;\n          portamentoStartFrequency = noteFrequency;\n          break;\n        case 'abs':\n          const { frequency: absFrequency } = calcFrequency(\n            cmd.data.note,\n            cmd.data.modifier,\n            cmd.data.octave,\n            detune,\n            transpose\n          );\n          portamentoStartFrequency = absFrequency;\n          break;\n        default:\n          console.error(`${cmd.type} not implemented`);\n          break;\n      }\n      cmdPointer.index++;\n    }\n    voicesVars[voiceIndex] = {\n      cmdPointer,\n      callStack,\n      hed,\n      time,\n      releasePoint,\n      detune,\n      transpose,\n      tie,\n      portamentoRate,\n      portamentoStartFrequency,\n      pulseWidth,\n      pulseWidthSweepRate,\n      vibratoRate,\n      vibratoDepth,\n      filter,\n      filterFrequency,\n      filterFrequencySweepRate,\n      autoFilter,\n      halt,\n    };\n    if (time > globalTime) globalTime = time;\n    voiceIndex++;\n    if (voiceIndex >= voices.length) voiceIndex = 0;\n  } while (voicesVars.some((v) => !v.halt && v.cmdPointer.index < voicesData[v.cmdPointer.voice].length));\n\n  return Math.floor(Math.max(...voicesVars.map((v) => v.time - currentTime)) * 10) / 10;\n};\n\nlet voicesData: Command[][];\n\nexport const loadFile = async (file: Blob): Promise<{ duration: number; text: string[] }> => {\n  const sidData = await parseSid(file);\n  voicesData = sidData.voices;\n  const duration = reloadVoices(0);\n  return { duration, text: sidData.text };\n};\n\nexport const reloadVoices = (startTime: number): number => {\n  Sid.reset(0);\n  // logVoices(voicesData);\n  return loadVoices(Sid.voices, voicesData, startTime);\n};\n","export type Duration = 'whl' | 'hlf' | 'qtr' | '8th' | '16th' | '32nd' | '64th' | 'utl' | 'utv';\nexport type Dotted = 'non' | 'sgl' | 'dbl';\nexport type Modifier = 'flt' | 'nat' | 'shp' | 'dbl';\nexport type Octave = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport type Note = 'c' | 'd' | 'e' | 'f' | 'g' | 'a' | 'b' | 'rst';\nexport type Waveform = 'pulse' | 'triangle' | 'sawtooth' | 'noise';\nexport type FilterMode = 'lowpass' | 'bandpass' | 'highpass';\nexport type Command =\n  | { type: 'tal' | 'end' | 'hlt' }\n  | {\n      type: 'abs' | 'note';\n      data: {\n        duration: Duration;\n        dotted: Dotted;\n        tie: boolean;\n        modifier: Modifier;\n        octave: Octave;\n        note: Note;\n      };\n    }\n  | {\n      type:\n        | 'dcy'\n        | 'rup'\n        | 'cal'\n        | 'def'\n        | 'atk'\n        | 'sus'\n        | 'lfo'\n        | 'rdn'\n        | 'rls'\n        | 'res'\n        | 'vol'\n        | 'src'\n        | 'dst'\n        | 'p-w'\n        | 'tem'\n        | 'utl'\n        | 'pnt'\n        | 'hed'\n        | 'flg'\n        | 'p-s'\n        | 'f-s'\n        | 'sca'\n        | 'vdp'\n        | 'vrt'\n        | 'aut'\n        | 'aux'\n        | 'pvd'\n        | 'pvr'\n        | 'max'\n        | 'utv'\n        | 'f-c'\n        | 'hld'\n        | 'ms#'\n        | 'jif'\n        | 'dtn'\n        | 'por'\n        | 'tps';\n      data: { value: number };\n    }\n  | { type: 'bmp'; data: { value: 'up' | 'down' } }\n  | {\n      type: 'flt' | 'rng' | 'snc' | 'f-x' | 'p&v' | '3-O';\n      data: { value: 'yes' | 'no' };\n    }\n  | { type: 'wav'; data: { value: Waveform[] } }\n  | { type: 'f-m'; data: { value: FilterMode[] } }\n  | { type: 'rtp'; data: { octaves: number; halfsteps: number } };\n\nconst getCommand = (byte1: number, byte2: number): Command | undefined => {\n  if ((byte1 & 3) === 0) {\n    // Note\n    let duration: Duration;\n    switch (byte1 & 31) {\n      case 0:\n        duration = '64th';\n        break;\n      case 28:\n        duration = '32nd';\n        break;\n      case 24:\n        duration = '16th';\n        break;\n      case 20:\n        duration = '8th';\n        break;\n      case 16:\n        duration = 'qtr';\n        break;\n      case 12:\n        duration = 'hlf';\n        break;\n      case 8:\n      default:\n        duration = 'whl';\n        break;\n    }\n    let dotted: Dotted;\n    switch (byte1 & 163) {\n      case 32:\n        dotted = 'sgl';\n        break;\n      case 160:\n        dotted = 'dbl';\n        break;\n      default:\n        dotted = 'non';\n        break;\n    }\n    const tie: boolean = (byte1 & 67) === 64;\n    if ((byte1 & 63) === 4) duration = 'utl';\n    if ((byte1 & 63) === 36) duration = 'utv';\n    if ((byte1 & 163) === 128) console.warn('triplet not implemented');\n    if ((byte1 & 191) === 160) console.warn('triplet 64th note not implemented');\n\n    let modifier: Modifier;\n    switch (byte2 & 192) {\n      case 192:\n        modifier = 'flt';\n        break;\n      case 128:\n      default:\n        modifier = 'nat';\n        break;\n      case 64:\n        modifier = 'shp';\n        break;\n      case 0:\n        modifier = 'dbl';\n        break;\n    }\n    let octave: Octave;\n    switch (byte2 & 56) {\n      case 56:\n        octave = 0;\n        break;\n      case 48:\n        octave = 1;\n        break;\n      case 40:\n        octave = 2;\n        break;\n      case 32:\n        octave = 3;\n        break;\n      case 24:\n      default:\n        octave = 4;\n        break;\n      case 16:\n        octave = 5;\n        break;\n      case 8:\n        octave = 6;\n        break;\n      case 0:\n        octave = 7;\n        break;\n    }\n    let note: Note;\n    switch (byte2 & 7) {\n      case 7:\n        note = 'b';\n        break;\n      case 6:\n        note = 'a';\n        break;\n      case 5:\n        note = 'g';\n        break;\n      case 4:\n        note = 'f';\n        break;\n      case 3:\n        note = 'e';\n        break;\n      case 2:\n        note = 'd';\n        break;\n      case 1:\n      default:\n        note = 'c';\n        break;\n      case 0:\n        note = 'rst';\n        break;\n    }\n    return {\n      type: byte1 === 0 ? 'abs' : 'note',\n      data: { duration, dotted, tie, modifier, octave, note },\n    };\n  } else if (byte1 === 1) {\n    if ((byte2 & 15) === 0) {\n      // Decay rate 0-15, default 0\n      return { type: 'dcy', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if ((byte2 & 7) === 1) {\n      return { type: 'rup', data: { value: (byte2 & 248) >>> 3 } };\n    }\n    if ((byte2 & 15) === 2) {\n      // Call phrase 0-15, not defined phrase -> UNDEFINED PHRASE CALL, nesting possible 4 times\n      // more -> STACK OVERFLOW, calling phrases from a different voice is possible\n      return { type: 'cal', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if (byte2 === 3) {\n      // Increase volume\n      return { type: 'bmp', data: { value: 'up' } };\n    }\n    if (byte2 === 19) {\n      // Filter voice\n      return { type: 'flt', data: { value: 'no' } };\n    }\n    if (byte2 === 35) {\n      // Ring modulation off\n      return { type: 'rng', data: { value: 'no' } };\n    }\n    if (byte2 === 51) {\n      // Synchronisation off\n      return { type: 'snc', data: { value: 'no' } };\n    }\n    if (byte2 === 67) {\n      // Filter external audio off\n      return { type: 'f-x', data: { value: 'no' } };\n    }\n    if (byte2 === 83) {\n      // Voice 3 on\n      return { type: '3-O', data: { value: 'no' } };\n    }\n    if ((byte2 & 143) === 131) {\n      // Define phrase 0-15, phrases can be defined inside another, phrase definition is 1\n      // nesting level, phrases can be redefined\n      return { type: 'def', data: { value: ((byte2 & 240) >>> 4) + 8 } };\n    }\n    if ((byte2 & 135) === 4) {\n      // Attack rate 0-15, default 2\n      return { type: 'atk', data: { value: (byte2 & 120) >>> 3 } };\n    }\n    if ((byte2 & 135) === 132) {\n      // Sustain level 0-15, default 15\n      return { type: 'sus', data: { value: (byte2 & 120) >>> 3 } };\n    }\n    if (byte2 === 99) {\n      return { type: 'lfo', data: { value: 0 } };\n    }\n    if (byte2 === 115) {\n      return { type: 'p&v', data: { value: 'no' } };\n    }\n    if ((byte2 & 7) === 5) {\n      return { type: 'rdn', data: { value: (byte2 & 248) >>> 3 } };\n    }\n    if ((byte2 & 15) === 6) {\n      // Define phrase 0-15\n      return { type: 'def', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if ((byte2 & 31) === 7) {\n      let value: Waveform[];\n      switch (byte2 & 224) {\n        case 0:\n          value = ['noise'];\n          break;\n        case 32:\n        default:\n          value = ['triangle'];\n          break;\n        case 64:\n          value = ['sawtooth'];\n          break;\n        case 96:\n          value = ['triangle', 'sawtooth'];\n          break;\n        case 128:\n          value = ['pulse'];\n          break;\n        case 160:\n          value = ['pulse', 'triangle'];\n          break;\n        case 192:\n          value = ['pulse', 'sawtooth'];\n          break;\n        case 224:\n          value = ['pulse', 'triangle', 'sawtooth'];\n          break;\n      }\n      // Waveform, default pulse\n      return { type: 'wav', data: { value } };\n    }\n    if ((byte2 & 31) === 23) {\n      let value: FilterMode[];\n      switch (byte2 & 224) {\n        case 0:\n        default:\n          value = [];\n          break;\n        case 32:\n          value = ['lowpass'];\n          break;\n        case 64:\n          value = ['bandpass'];\n          break;\n        case 96:\n          value = ['lowpass', 'bandpass'];\n          break;\n        case 128:\n          value = ['highpass'];\n          break;\n        case 160:\n          value = ['highpass', 'lowpass'];\n          break;\n        case 192:\n          value = ['highpass', 'bandpass'];\n          break;\n        case 224:\n          value = ['highpass', 'lowpass', 'bandpass'];\n          break;\n      }\n      // Filter mode\n      return { type: 'f-m', data: { value } };\n    }\n    if ((byte2 & 15) === 8) {\n      // Release rate 0-15, default 5\n      return { type: 'rls', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if ((byte2 & 15) === 10) {\n      // Filter resonance 0-15\n      return { type: 'res', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if (byte2 === 11) {\n      // Decrease volume\n      return { type: 'bmp', data: { value: 'down' } };\n    }\n    if (byte2 === 27) {\n      // Filter voice\n      return { type: 'flt', data: { value: 'yes' } };\n    }\n    if (byte2 === 43) {\n      // Ring modulation on\n      return { type: 'rng', data: { value: 'yes' } };\n    }\n    if (byte2 === 59) {\n      // Synchronisation on\n      return { type: 'snc', data: { value: 'yes' } };\n    }\n    if (byte2 === 75) {\n      // Filter external audio on\n      return { type: 'f-x', data: { value: 'yes' } };\n    }\n    if (byte2 === 91) {\n      // Voice 3 off\n      return { type: '3-O', data: { value: 'yes' } };\n    }\n    if (byte2 === 107) {\n      return { type: 'lfo', data: { value: 1 } };\n    }\n    if (byte2 === 123) {\n      return { type: 'p&v', data: { value: 'yes' } };\n    }\n    if ((byte2 & 143) === 139) {\n      // Call phrase 0-15\n      return { type: 'cal', data: { value: ((byte2 & 240) >>> 4) + 8 } };\n    }\n    if ((byte2 & 15) === 14) {\n      // Volume 0-15, default 8\n      return { type: 'vol', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if (byte2 === 15) {\n      // Repeat tail, tal without previous hed -> infinite loop to most recent hed/beginning\n      return { type: 'tal' };\n    }\n    if (byte2 === 47) {\n      // End phrase, end without previous def -> STACK UNDERFLOW\n      return { type: 'end' };\n    }\n    if (byte2 === 79) {\n      return { type: 'hlt' };\n    }\n    if ((byte2 & 159) === 31) {\n      return { type: 'src', data: { value: (byte2 & 96) >>> 5 } };\n    }\n    if ((byte2 & 143) === 143) {\n      let value: number;\n      switch (byte2 & 112) {\n        case 0:\n        default:\n          value = 0;\n          break;\n        case 32:\n          value = 1;\n          break;\n        case 80:\n          value = 2;\n          break;\n        case 96:\n          value = 3;\n          break;\n      }\n      return { type: 'dst', data: { value } };\n    }\n  } else {\n    if ((byte1 & 15) === 2) {\n      // Pulse width 0-4095, default 2048\n      return { type: 'p-w', data: { value: ((byte1 & 240) << 4) + byte2 } };\n    }\n    if (byte1 === 6) {\n      // Tempo 56-900, default 100\n      return {\n        type: 'tem',\n        data: { value: Math.trunc(14400 / (byte2 !== 0 ? byte2 : 256)) },\n      };\n    }\n    if (byte1 === 22) {\n      // Utility duration 1-256, default 12\n      return { type: 'utl', data: { value: byte2 !== 0 ? byte2 : 256 } };\n    }\n    if (byte1 === 38) {\n      // Release point 0-255, default 4\n      return { type: 'pnt', data: { value: byte2 } };\n    }\n    if (byte1 === 54) {\n      // Repeat head 0-255, 0 -> infinite, no nesting of hed/tal\n      return { type: 'hed', data: { value: byte2 } };\n    }\n    if (byte1 === 70) {\n      return { type: 'flg', data: { value: byte2 } };\n    }\n    if (byte1 === 86) {\n      // Pulse width sweeping -127-127\n      return { type: 'p-s', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 102) {\n      // Filter sweep -127-127\n      return { type: 'f-s', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 110) {\n      return { type: 'sca', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 118) {\n      // Vibrato depth 0-255\n      return { type: 'vdp', data: { value: byte2 } };\n    }\n    if (byte1 === 134) {\n      // Vibrato rate 1-256\n      return { type: 'vrt', data: { value: byte2 !== 0 ? byte2 : 256 } };\n    }\n    if (byte1 === 150) {\n      // Auto filter voice -127-127\n      return { type: 'aut', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 166) {\n      // Transpose -95-95\n      const sign = (byte2 & 1) === 0 ? 1 : -1;\n      const octaves = (byte2 & 1) === 0 ? 7 - ((byte2 & 14) >>> 1) : (byte2 & 14) >>> 1;\n      const halfsteps = (byte2 & 1) === 0 ? (byte2 & 240) >>> 4 : 11 - ((byte2 & 240) >>> 4);\n      return { type: 'tps', data: { value: sign * (12 * octaves + halfsteps) } };\n    }\n    if (byte1 === 182) {\n      // ignored\n      return { type: 'aux', data: { value: byte2 } };\n    }\n    if (byte1 === 198) {\n      return { type: 'pvd', data: { value: byte2 } };\n    }\n    if (byte1 === 214) {\n      return { type: 'pvr', data: { value: byte2 } };\n    }\n    if (byte1 === 230) {\n      return { type: 'max', data: { value: byte2 } };\n    }\n    if (byte1 === 246) {\n      return { type: 'utv', data: { value: byte2 } };\n    }\n    if (byte1 === 14) {\n      // Filter cutoff 0-255\n      return { type: 'f-c', data: { value: byte2 } };\n    }\n    if (byte1 === 46) {\n      return {\n        type: 'rtp',\n        data: {\n          octaves: 3 - (byte2 & 7),\n          halfsteps: ((byte2 & 248) >>> 3) - 11,\n        },\n      };\n    }\n    if (byte1 === 78) {\n      return { type: 'hld', data: { value: byte2 } };\n    }\n    if (byte1 === 30 || byte1 === 94 || byte1 === 158 || byte1 === 222) {\n      // Measure 0-999\n      return { type: 'ms#', data: { value: ((byte1 & 192) << 2) + byte2 } };\n    }\n    if (byte1 === 62 || byte1 === 126 || byte1 === 190 || byte1 === 254) {\n      let value = (byte2 << 2) + ((byte1 & 192) >>> 6);\n      if (byte2 > 192) value = (value << 22) >> 22;\n      return {\n        type: 'jif',\n        data: { value },\n      };\n    }\n    if ((byte1 & 15) === 10) {\n      // Detune -2047-2047\n      return {\n        type: 'dtn',\n        data: {\n          value: (byte1 & 16) === 0 ? ((byte1 & 224) << 3) + byte2 : ((byte1 & 224) << 3) + byte2 - 2048,\n        },\n      };\n    }\n    if ((byte1 & 3) === 3) {\n      // Portamento\n      return { type: 'por', data: { value: ((byte1 & 252) << 6) + byte2 } };\n    }\n  }\n};\n\nconst trans: { [key: number]: string } = {\n  0x3: 'stop',\n  0x5: 'wht',\n  0x8: 'shOff',\n  0x9: 'shOn',\n  0xd: '\\n',\n  0xe: 'lCase',\n  0x11: 'down',\n  0x12: 'rvsOn',\n  0x13: 'home',\n  0x14: 'del',\n  0x1c: 'red',\n  0x1d: 'right',\n  0x1e: 'grn',\n  0x1f: 'blu',\n  0x20: ' ',\n  0x21: '!',\n  0x22: '\"',\n  0x23: '#',\n  0x24: '$',\n  0x25: '%',\n  0x26: '&',\n  0x27: \"'\",\n  0x28: '(',\n  0x29: ')',\n  0x2a: '*',\n  0x2b: '+',\n  0x2c: ',',\n  0x2d: '-',\n  0x2e: '.',\n  0x2f: '/',\n  0x30: '0',\n  0x31: '1',\n  0x32: '2',\n  0x33: '3',\n  0x34: '4',\n  0x35: '5',\n  0x36: '6',\n  0x37: '7',\n  0x38: '8',\n  0x39: '9',\n  0x3a: ':',\n  0x3b: ';',\n  0x3c: '<',\n  0x3d: '=',\n  0x3e: '>',\n  0x3f: '?',\n  0x40: '@',\n  0x41: 'A',\n  0x42: 'B',\n  0x43: 'C',\n  0x44: 'D',\n  0x45: 'E',\n  0x46: 'F',\n  0x47: 'G',\n  0x48: 'H',\n  0x49: 'I',\n  0x4a: 'J',\n  0x4b: 'K',\n  0x4c: 'L',\n  0x4d: 'M',\n  0x4e: 'N',\n  0x4f: 'O',\n  0x50: 'P',\n  0x51: 'Q',\n  0x52: 'R',\n  0x53: 'S',\n  0x54: 'T',\n  0x55: 'U',\n  0x56: 'V',\n  0x57: 'W',\n  0x58: 'X',\n  0x59: 'Y',\n  0x5a: 'Z',\n  0x5b: '[',\n  0x5c: '£',\n  0x5d: ']',\n  0x5e: '↑',\n  0x5f: '←',\n  0x60: '─',\n  0x61: '♠',\n  0x62: '│',\n  0x63: '─',\n  0x64: '\\u{1fb77}',\n  0x65: '\\u{1fb76}',\n  0x66: '\\u{1fb7a}',\n  0x67: '\\u{1fb71}',\n  0x68: '\\u{1fb74}',\n  0x69: '╮',\n  0x6a: '╰',\n  0x6b: '╯',\n  0x6c: '\\u{1fb7c}',\n  0x6d: '╲',\n  0x6e: '╱',\n  0x6f: '\\u{1fb7d}',\n  0x70: '\\u{1fb7e}',\n  0x71: '•',\n  0x72: '\\u{1fb7b}',\n  0x73: '♥',\n  0x74: '\\u{1fb70}',\n  0x75: '╭',\n  0x76: '╳',\n  0x77: '○',\n  0x78: '♣',\n  0x79: '\\u{1fb75}',\n  0x7a: '♦',\n  0x7b: '┼',\n  0x7c: '\\u{1fb8c}',\n  0x7d: '│',\n  0x7e: 'π',\n  0x7f: '◥',\n  0x81: 'orng',\n  0x83: 'run',\n  0x85: 'f1',\n  0x86: 'f3',\n  0x87: 'f5',\n  0x88: 'f7',\n  0x89: 'f2',\n  0x8a: 'f4',\n  0x8b: 'f6',\n  0x8c: 'f8',\n  0x8d: 'shRtrn',\n  0x8e: 'uCase',\n  0x90: 'blk',\n  0x91: 'up',\n  0x92: 'rvsOff',\n  0x93: 'clr',\n  0x94: 'inst',\n  0x95: 'brn',\n  0x96: 'lred',\n  0x97: 'dgry',\n  0x98: 'mgry',\n  0x99: 'lgrn',\n  0x9a: 'lblu',\n  0x9b: 'lgry',\n  0x9c: 'pur',\n  0x9d: 'left',\n  0x9e: 'yel',\n  0x9f: 'cyn',\n  0xa0: ' ',\n  0xa1: '▌',\n  0xa2: '▄',\n  0xa3: '▔',\n  0xa4: '▁',\n  0xa5: '▎',\n  0xa6: '▒',\n  0xa7: '\\u{1fb87}',\n  0xa8: '\\u{1fb8f}',\n  0xa9: '◤',\n  0xaa: '\\u{1fb87}',\n  0xab: '├',\n  0xac: '▗',\n  0xad: '└',\n  0xae: '┐',\n  0xaf: '▂',\n  0xb0: '┌',\n  0xb1: '┴',\n  0xb2: '┬',\n  0xb3: '┤',\n  0xb4: '▎',\n  0xb5: '▍',\n  0xb6: '\\u{1fb88}',\n  0xb7: '\\u{1fb82}',\n  0xb8: '\\u{1fb83}',\n  0xb9: '▃',\n  0xba: '\\u{1fb7f}',\n  0xbb: '▖',\n  0xbc: '▝',\n  0xbd: '┘',\n  0xbe: '▘',\n  0xbf: '▚',\n  0xc0: '─',\n  0xc1: '♠',\n  0xc2: '│',\n  0xc3: '─',\n  0xc4: '\\u{1fb77}',\n  0xc5: '\\u{1fb76}',\n  0xc6: '\\u{1fb7a}',\n  0xc7: '\\u{1fb71}',\n  0xc8: '\\u{1fb74}',\n  0xc9: '╮',\n  0xca: '╰',\n  0xcb: '╯',\n  0xcc: '\\u{1fb7c}',\n  0xcd: '╲',\n  0xce: '╱',\n  0xcf: '\\u{1fb7d}',\n  0xd0: '\\u{1fb7e}',\n  0xd1: '•',\n  0xd2: '\\u{1fb7b}',\n  0xd3: '♥',\n  0xd4: '\\u{1fb70}',\n  0xd5: '╭',\n  0xd6: '╳',\n  0xd7: '○',\n  0xd8: '♣',\n  0xd9: '\\u{1fb75}',\n  0xda: '♦',\n  0xdb: '┼',\n  0xdc: '\\u{1fb8c}',\n  0xdd: '│',\n  0xde: 'π',\n  0xdf: '◥',\n  0xe0: ' ',\n  0xe1: '▌',\n  0xe2: '▄',\n  0xe3: '▔',\n  0xe4: '▁',\n  0xe5: '▎',\n  0xe6: '▒',\n  0xe7: '\\u{1fb87}',\n  0xe8: '\\u{1fb8f}',\n  0xe9: '◤',\n  0xea: '\\u{1fb87}',\n  0xeb: '├',\n  0xec: '▗',\n  0xed: '└',\n  0xee: '┐',\n  0xef: '▂',\n  0xf0: '┌',\n  0xf1: '┴',\n  0xf2: '┬',\n  0xf3: '┤',\n  0xf4: '▎',\n  0xf5: '▍',\n  0xf6: '\\u{1fb88}',\n  0xf7: '\\u{1fb82}',\n  0xf8: '\\u{1fb83}',\n  0xf9: '▃',\n  0xfa: '\\u{1fb7f}',\n  0xfb: '▖',\n  0xfc: '▝',\n  0xfd: '┘',\n  0xfe: '▘',\n  0xff: 'π',\n};\n\nconst readFileAsArrayBuffer = async (blob: Blob): Promise<ArrayBuffer> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(blob);\n  });\n\nexport const parseSid = async (blob: Blob): Promise<{ voices: Command[][]; text: string[] }> => {\n  const buffer = new DataView(await readFileAsArrayBuffer(blob));\n\n  let i = 0;\n  const startAddress = buffer.getUint16(i, true);\n  i += 2;\n  const voice1Length = buffer.getUint16(i, true);\n  i += 2;\n  const voice2Length = buffer.getUint16(i, true);\n  i += 2;\n  const voice3Length = buffer.getUint16(i, true);\n  i += 2;\n  const voice1Index = 8;\n  const voice2Index = voice1Index + voice1Length;\n  const voice3Index = voice2Index + voice2Length;\n  const textIndex = voice3Index + voice3Length;\n\n  const voice1: Command[] = [];\n  for (let i = voice1Index; i < voice2Index; i += 2) {\n    const byte1 = buffer.getUint8(i);\n    const byte2 = buffer.getUint8(i + 1);\n    const cmd = getCommand(byte1, byte2);\n    if (!cmd) {\n      console.error(`unknown command, voiceindex 0, index ${voice1.length}, byte1 ${byte1}, byte2 ${byte2}`);\n      break;\n    }\n    voice1.push(cmd);\n  }\n\n  const voice2: Command[] = [];\n  for (let i = voice2Index; i < voice3Index; i += 2) {\n    const byte1 = buffer.getUint8(i);\n    const byte2 = buffer.getUint8(i + 1);\n    const cmd = getCommand(byte1, byte2);\n    if (!cmd) {\n      console.error(`unknown command, voiceindex 1, index ${voice2.length}, byte1 ${byte1}, byte2 ${byte2}`);\n      break;\n    }\n    voice2.push(cmd);\n  }\n\n  const voice3: Command[] = [];\n  for (let i = voice3Index; i < textIndex; i += 2) {\n    const byte1 = buffer.getUint8(i);\n    const byte2 = buffer.getUint8(i + 1);\n    const cmd = getCommand(byte1, byte2);\n    if (!cmd) {\n      console.error(`unknown command, voiceindex 2, index ${voice3.length}, byte1 ${byte1}, byte2 ${byte2}`);\n      break;\n    }\n    voice3.push(cmd);\n  }\n\n  const text: string[] = [];\n  let line = '';\n  for (let i = textIndex; i < buffer.byteLength; i++) {\n    const byte = buffer.getUint8(i);\n    if (byte === 0xd) {\n      text.push(line);\n      line = '';\n    } else if (byte === 0x0) {\n      if (line) text.push(line);\n      break;\n    } else {\n      line += trans[byte] || '?';\n    }\n  }\n\n  return { voices: [voice1, voice2, voice3], text };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(109);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","FREQUENCY_FACTOR","nearestPowerOf2","n","Math","clz32","CustomAudioParam","_audioContext","_values","_defaultValue","constructor","audioContext","defaultValue","this","push","startTime","currentTime","value","interpolation","setValueAtTime","unshift","length","i","splice","getValueAtTime","time","endTime","startValue","endValue","exp","timeConstant","cancelScheduledValues","deleteIndex","findIndex","linearRampToValueAtTime","startEntry","pop","setTargetAtTime","CustomGenericAudioParam","triangleProcessor","phase","sawToothProcessor","pulseProcessor","pulseWidth","CommonOscillator","_gain","_frequencyParameter","_widthParameter","_syncParameter","_rngParameter","_syncOffset","_oscillator","audioProcessor","getSyncParameters","GainNode","gain","bufferSize","floor","sampleRate","syncPhase","sample","createScriptProcessor","onaudioprocess","e","values","Float32Array","phasePerSample","sync","rng","frequency","syncFrequency","offset","syncOffset","syncPhasePerSample","fill","channel","outputBuffer","numberOfChannels","output","getChannelData","connect","width","start","stop","destination","disconnect","reset","NoiseOscillator","phase2","random","SidVoice","_adsrGain","_triangleOsc","_sawtoothOsc","_pulseOsc","_noiseOsc","_activeWaveforms","_attackDurationParameter","_decayDurationParameter","_sustainLevelParameter","_releaseDurationParameter","_adsrGainParameter","triangleOscillator","sawtoothOscillator","pulseOscillator","noiseOscillator","c64Frequency","c64Waveform","waveforms","waveform","includes","slice","static","c64AttackDuration","attackDuration","timeTable","c64DecayDuration","decayDuration","c64SustainLevel","sustainLevel","c64ReleaseDuration","releaseDuration","c64PulseWidth","c64Sync","Boolean","c64Rng","cancelAndHoldAtTime","getFilterFrequency","y0","ymax","x0","mu","getLowPassFrequency","getHighPassFrequency","getBandPassFrequency","getFilterValue","log","max","min","getLowPassValue","getHighPassValue","getBandPassValue","getFilterResonance","a","b","c","m","SidFilter","_inNode","_lowPass","_highPass","_bandPass","_bandPassPeak","_outNode","_in_out","_in_low","_in_band","_in_high","_low_band","_low_high","_band_high","_low_out","_band_out","_high_out","BiquadFilterNode","type","Q","inNode","lowPassFilter","highPassFilter","bandPassFilter","bandPassPeakFilter","bandPassFrequency","c64Resonance","getHighPassResonance","getLowPassResonance","getBandPassResonance","resonance","c64FilterType","filterTypes","filterType","Sid","_mainGain","_voice1","_voice2","_voice3","_filter","_v1_gain","_v1_filter","_v1_main","_v2_gain","_v2_filter","_v2_main","_v3_gain","_v3_switch","_v3_filter","_v3_main","AudioContext","resume","voice1","voice2","voice3","voices","filter","c64FilterVoice","filterVoice","voiceIndex","c64Voice3Off","voice3Off","c64Volume","volume","keyDivs","document","getElementById","textLines","fileSelect","openFileInput","playPauseButton","currentSpan","timeSlider","durationSpan","notes","currentNotes","lastNotes","duration","audioContextStartTime","getTimeString","mins","secs","String","padStart","loadSidFile","async","file","disabled","loadedDuration","text","textContent","onchange","statePlaying","classList","remove","target","files","response","fetch","blob","clearKeyColor","index","color","style","background","colorMap","setKeyColor","voice","playPause","pause","play","add","updateKeyboardInterval","setInterval","updateKeyboard","clearInterval","undefined","suspend","move","Number","onclick","oninput","onmouseup","ontouchend","createGain","Error","console","error","display","calcFrequency","note","modifier","octave","detune","transpose","d","f","g","rst","NaN","calcDuration","dotted","tempo","utilityDuration","mod","setFrequencyPortamentoVibrato","portamento","vibrato","rate","depth","porRate","sign","startFrequency","abs","targetValue","porDuration","vibRate","upperFreq","up","setPulseWidthSweep","sweepRate","getFilterSweepValues","calc","count","step","setFilterFrequencyWidthSweep","dur","setValueCurveAtTime","bandPassValues","setAutoFilterFrequency","noteFrequency","autoFilter","filterFrequency","filterValue","initVoices","loadVoices","voicesData","globalTime","voicesVars","cmdPointer","callStack","hed","pointer","releasePoint","tie","portamentoRate","portamentoStartFrequency","pulseWidthSweepRate","vibratoRate","vibratoDepth","filterFrequencySweepRate","halt","phrases","j","cmd","data","phrase","find","phr","JSON","stringify","noteIndex","absFrequency","some","v","map","loadFile","sidData","reloadVoices","getCommand","byte1","byte2","warn","trunc","octaves","halfsteps","trans","parseSid","buffer","DataView","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","readFileAsArrayBuffer","getUint16","voice1Length","voice2Length","voice3Length","voice2Index","voice3Index","textIndex","getUint8","line","byteLength","byte","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","Symbol","queue","forEach","fn","r","body","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","x","deps","dep","then","obj","ret","wrapDeps","getResult","fnQueue","q","has","err","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}