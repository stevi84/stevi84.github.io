{"version":3,"file":"sidplayer.bundle.js","mappings":"uBAAIA,EACAC,EACAC,EACAC,E,iGCHG,MAAMC,EAAmB,kBAMzB,MAAMC,EACHC,cACAC,QAAwC,GACxCC,cAER,WAAAC,CAAYC,EAA4BC,GACtCC,KAAKN,cAAgBI,EACrBE,KAAKL,QAAQM,KAAK,CAAEC,UAAWJ,EAAaK,YAAaC,MAAOL,EAAcM,cAAe,UAC7FL,KAAKJ,cAAgBG,CACvB,CAEA,cAAAO,CAAeF,EAAeF,GAC5B,GAAIA,EAAYF,KAAKL,QAAQ,GAAGO,UAC9BF,KAAKL,QAAQY,QAAQ,CAAEL,YAAWE,QAAOC,cAAe,eACnD,GAAIH,GAAaF,KAAKL,QAAQK,KAAKL,QAAQa,OAAS,GAAGN,UAC5DF,KAAKL,QAAQM,KAAK,CAAEC,YAAWE,QAAOC,cAAe,eAErD,IAAK,IAAII,EAAI,EAAGA,EAAIT,KAAKL,QAAQa,OAAS,EAAGC,IAC3C,GAAIP,GAAaF,KAAKL,QAAQc,GAAGP,WAAaA,EAAYF,KAAKL,QAAQc,EAAI,GAAGP,UAAW,CACvFF,KAAKL,QAAQe,OAAOD,EAAI,EAAG,EAAG,CAAEP,YAAWE,QAAOC,cAAe,UACjE,KACF,CAGJ,OAAOL,IACT,CAEA,cAAAW,CAAeC,GACb,GAAIA,EAAOZ,KAAKL,QAAQ,GAAGO,UAAW,OAAOF,KAAKJ,cAElD,IAAIQ,EACJ,GAA4B,IAAxBJ,KAAKL,QAAQa,OACfJ,EAAQJ,KAAKL,QAAQ,OAChB,CACL,IAAK,IAAIc,EAAI,EAAGA,EAAIT,KAAKL,QAAQa,OAAS,EAAGC,IAC3C,GAAIG,GAAQZ,KAAKL,QAAQc,GAAGP,WAAaU,EAAOZ,KAAKL,QAAQc,EAAI,GAAGP,UAAW,CAC7EE,EAAQJ,KAAKL,QAAQc,GACrB,KACF,CAEGL,IAAOA,EAAQJ,KAAKL,QAAQK,KAAKL,QAAQa,OAAS,GACzD,CAEA,MAA4B,UAAxBJ,EAAMC,cACDD,EAAMA,MACoB,QAAxBA,EAAMC,cACXO,EAAOR,EAAMS,QAEbT,EAAMU,YACJF,EAAOR,EAAMF,YAAcE,EAAMS,QAAUT,EAAMF,YAAeE,EAAMW,SAAWX,EAAMU,YAGpFV,EAAMW,SAIbX,EAAMW,UAAYX,EAAMU,WAAaV,EAAMW,UAAYC,KAAKC,MAAML,EAAOR,EAAMF,WAAaE,EAAMc,aAGxG,CAEA,SAAId,GACF,OAAOJ,KAAKW,eAAeX,KAAKN,cAAcS,YAChD,CAEA,SAAIC,CAAMA,GACRJ,KAAKM,eAAeF,EAAOJ,KAAKN,cAAcS,YAChD,CAEA,qBAAAgB,CAAsBjB,GACpB,MAAMkB,EAAcpB,KAAKL,QAAQ0B,WAAWjB,GAAUF,EAAYE,EAAMF,YACpEkB,GAAe,GAAGpB,KAAKL,QAAQe,OAAOU,GACd,IAAxBpB,KAAKL,QAAQa,QACfR,KAAKL,QAAQM,KAAK,CAChBC,UAAWF,KAAKN,cAAcS,YAC9BC,MAAOJ,KAAKJ,cACZS,cAAe,SAErB,CAEA,uBAAAiB,CAAwBlB,EAAeS,GACrC,GAAIA,EAAUb,KAAKL,QAAQ,GAAGO,gBAEvB,GAAIW,GAAWb,KAAKL,QAAQK,KAAKL,QAAQa,OAAS,GAAGN,UAAW,CACrE,MAAMqB,EAAavB,KAAKL,QAAQ6B,MAChCxB,KAAKL,QAAQM,KAAK,CAChBC,UAAWqB,EAAWrB,UACtBY,WAAyC,UAA7BS,EAAWlB,cAA4BkB,EAAWnB,MAAQmB,EAAWT,WACjFD,UACAE,SAAUX,EACVC,cAAe,OAEnB,MACE,IAAK,IAAII,EAAI,EAAGA,EAAIT,KAAKL,QAAQa,OAAS,EAAGC,IAC3C,GAAII,GAAWb,KAAKL,QAAQc,GAAGP,WAAaW,EAAUb,KAAKL,QAAQc,EAAI,GAAGP,UAAW,CACnF,MAAMqB,EAAavB,KAAKL,QAAQe,OAAOD,EAAG,GAAG,GAC7CT,KAAKL,QAAQe,OAAOD,EAAG,EAAG,CACxBP,UAAWqB,EAAWrB,UACtBY,WAAyC,UAA7BS,EAAWlB,cAA4BkB,EAAWnB,MAAQmB,EAAWT,WACjFD,UACAE,SAAUX,EACVC,cAAe,QAEjB,KACF,CAGJ,OAAOL,IACT,CAEA,eAAAyB,CAAgBrB,EAAeF,EAAmBgB,GAChD,GAAIhB,EAAYF,KAAKL,QAAQ,GAAGO,UAC9BF,KAAKL,QAAQY,QAAQ,CACnBL,YACAY,WAAYd,KAAKJ,cACjBmB,SAAUX,EACVc,eACAb,cAAe,aAEZ,GAAIH,GAAaF,KAAKL,QAAQK,KAAKL,QAAQa,OAAS,GAAGN,UAC5DF,KAAKL,QAAQM,KAAK,CAChBC,YACAY,WAAYd,KAAKW,eAAeT,GAChCa,SAAUX,EACVc,eACAb,cAAe,aAGjB,IAAK,IAAII,EAAI,EAAGA,EAAIT,KAAKL,QAAQa,OAAS,EAAGC,IAC3C,GAAIP,GAAaF,KAAKL,QAAQc,GAAGP,WAAaA,EAAYF,KAAKL,QAAQc,EAAI,GAAGP,UAAW,CACvFF,KAAKL,QAAQe,OAAOD,EAAI,EAAG,EAAG,CAC5BP,YACAY,WAAYd,KAAKW,eAAeT,GAChCa,SAAUX,EACVc,eACAb,cAAe,QAEjB,KACF,CAGJ,OAAOL,IACT,EAyEK,MAAM0B,EACHhC,cACAiC,YAER,WAAA9B,CAAYC,GACVE,KAAKN,cAAgBI,EACrBE,KAAK2B,YAAc,IAAIC,iBAAiB9B,EAAc,kBAAmB,CACvE+B,eAAgB,EAChBC,gBAAiB,EACjBC,mBAAoB,CAAC,EAAG,EAAG,GAC3BC,iBAAkB,CAAEC,WAAYnC,EAAamC,aAEjD,CAEA,gBAAIC,GACF,MAAO,CACLC,SAAUnC,KAAK2B,YAAYS,WAAWC,IAAI,kBAC1CC,UAAWtC,KAAK2B,YAAYS,WAAWC,IAAI,mBAC3CE,MAAOvC,KAAK2B,YAAYS,WAAWC,IAAI,eACvCG,KAAMxC,KAAK2B,YAAYS,WAAWC,IAAI,cACtCI,IAAKzC,KAAK2B,YAAYS,WAAWC,IAAI,aAEzC,CAEA,gBAAIK,GACF,MAAO,CACLP,SAAUnC,KAAK2B,YAAYS,WAAWC,IAAI,kBAC1CC,UAAWtC,KAAK2B,YAAYS,WAAWC,IAAI,mBAC3CE,MAAOvC,KAAK2B,YAAYS,WAAWC,IAAI,eACvCG,KAAMxC,KAAK2B,YAAYS,WAAWC,IAAI,cACtCI,IAAKzC,KAAK2B,YAAYS,WAAWC,IAAI,aAEzC,CAEA,gBAAIM,GACF,MAAO,CACLR,SAAUnC,KAAK2B,YAAYS,WAAWC,IAAI,kBAC1CC,UAAWtC,KAAK2B,YAAYS,WAAWC,IAAI,mBAC3CE,MAAOvC,KAAK2B,YAAYS,WAAWC,IAAI,eACvCG,KAAMxC,KAAK2B,YAAYS,WAAWC,IAAI,cACtCI,IAAKzC,KAAK2B,YAAYS,WAAWC,IAAI,aAEzC,CAEA,OAAAO,CAAQC,EAAwBC,EAAgBC,GAC9C/C,KAAK2B,YAAYiB,QAAQC,EAAaC,EAAQC,EAChD,CAEA,UAAAC,GACEhD,KAAK2B,YAAYqB,YACnB,EAKK,MAAMC,EACHvD,cACAwD,UACAC,mBACAC,oBACAC,gBACAC,eACAC,cACAC,yBACAC,wBACAC,uBACAC,0BACAC,mBAER,WAAA/D,CAAYC,EAA4B+D,GACtC7D,KAAKN,cAAgBI,EACrBE,KAAKkD,UAAY,IAAIY,SAAShE,EAAc,CAAEiE,KAAM,IACpD/D,KAAKmD,mBAAqBU,EAAY1B,SACtCnC,KAAKoD,oBAAsBS,EAAYvB,UACvCtC,KAAKqD,gBAAkBQ,EAAYtB,MACnCvC,KAAKsD,eAAiBO,EAAYrB,KAClCxC,KAAKuD,cAAgBM,EAAYpB,IACjCzC,KAAKwD,yBAA2B,IAAI/D,EAAiBK,EAAc,MACnEE,KAAKyD,wBAA0B,IAAIhE,EAAiBK,EAAc,MAClEE,KAAK0D,uBAAyB,IAAIjE,EAAiBK,EAAc,GACjEE,KAAK2D,0BAA4B,IAAIlE,EAAiBK,EAAc,MACpEE,KAAK4D,mBAAqB,IAAInE,EAAiBK,EAAc,EAC/D,CAEA,UAAIkE,GACF,OAAOhE,KAAKkD,SACd,CAEA,kBAAIe,GACF,OAAOjE,KAAKoD,mBACd,CAEA,cAAIc,GACF,OAAOlE,KAAKqD,eACd,CAOA,YAAAc,CAAa/D,EAAeF,EAAoBF,KAAKN,cAAcS,aACjEH,KAAKsC,UAAUlC,EAAQZ,EAAkBU,EAC3C,CAMA,SAAAoC,CAAUlC,EAAeF,EAAoBF,KAAKN,cAAcS,aAC9DH,KAAKoD,oBAAoB9C,eAAeF,EAAOF,EACjD,CAOA,WAAAkE,CAAYhE,EAAeF,EAAoBF,KAAKN,cAAcS,aAChEH,KAAKmD,mBAAmB7C,eAAeF,EAAOF,EAChD,CACA,QAAAiC,CAAS/B,EAAmBF,EAAoBF,KAAKN,cAAcS,aACjE,MAAMkE,GACHjE,EAAMkE,SAAS,YAAc,EAAI,IACjClE,EAAMkE,SAAS,YAAc,EAAI,IACjClE,EAAMkE,SAAS,SAAW,EAAI,IAC9BlE,EAAMkE,SAAS,SAAW,EAAI,GACjCtE,KAAKoE,YAAYC,EAAWnE,EAC9B,CAEQqE,iBAA6B,CACnC,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,KAAO,IAAM,GAAK,IAAM,GAAK,GAAK,EAAG,EAAG,EAAG,GAQvF,iBAAAC,CAAkBpE,EAAeF,EAAoBF,KAAKN,cAAcS,aACtEH,KAAKyE,eAAexB,EAASyB,UAAUtE,GAAQF,EACjD,CAMA,cAAAuE,CAAerE,EAAeF,EAAoBF,KAAKN,cAAcS,aACnEH,KAAKwD,yBAAyBlD,eAAeF,EAAOF,EACtD,CAOA,gBAAAyE,CAAiBvE,EAAeF,EAAoBF,KAAKN,cAAcS,aACrEH,KAAK4E,cAA0C,EAA5B3B,EAASyB,UAAUtE,GAAYF,EACpD,CAMA,aAAA0E,CAAcxE,EAAeF,EAAoBF,KAAKN,cAAcS,aAClEH,KAAKyD,wBAAwBnD,eAAeF,EAAOF,EACrD,CAOA,eAAA2E,CAAgBzE,EAAeF,EAAoBF,KAAKN,cAAcS,aACpEH,KAAK8E,aAAa1E,EAAQ,GAAIF,EAChC,CAMA,YAAA4E,CAAa1E,EAAeF,EAAoBF,KAAKN,cAAcS,aACjEH,KAAK0D,uBAAuBpD,eAAeF,EAAOF,EACpD,CAOA,kBAAA6E,CAAmB3E,EAAeF,EAAoBF,KAAKN,cAAcS,aACvEH,KAAKgF,gBAA4C,EAA5B/B,EAASyB,UAAUtE,GAAYF,EACtD,CAMA,eAAA8E,CAAgB5E,EAAeF,EAAoBF,KAAKN,cAAcS,aACpEH,KAAK2D,0BAA0BrD,eAAeF,EAAOF,EACvD,CAOA,aAAA+E,CAAc7E,EAAeF,EAAoBF,KAAKN,cAAcS,aAClEH,KAAKkF,WAAW9E,EAAQ,KAAMF,EAChC,CAMA,UAAAgF,CAAW9E,EAAeF,EAAoBF,KAAKN,cAAcS,aAC/DH,KAAKqD,gBAAgB/C,eAAeF,EAAOF,EAC7C,CAOA,OAAAiF,CAAQ/E,EAAeF,EAAoBF,KAAKN,cAAcS,aAC5DH,KAAKsD,eAAehD,eAAeF,EAAOF,EAC5C,CAMA,IAAAsC,CAAKpC,EAAgBF,EAAoBF,KAAKN,cAAcS,aAC1DH,KAAKmF,QAAQC,OAAOhF,GAAQF,EAC9B,CAOA,MAAAmF,CAAOjF,EAAeF,EAAoBF,KAAKN,cAAcS,aAC3DH,KAAKuD,cAAcjD,eAAeF,EAAOF,EAC3C,CAMA,GAAAuC,CAAIrC,EAAgBF,EAAoBF,KAAKN,cAAcS,aACzDH,KAAKqF,OAAOD,OAAOhF,GAAQF,EAC7B,CAEA,KAAAoF,CAAMpF,EAAoBF,KAAKN,cAAcS,aAG3C,MAAMsE,EAAiBzE,KAAKwD,yBAAyBpD,MAE/Cc,EAAe,MADClB,KAAKyD,wBAAwBrD,MAE7C0E,EAAe9E,KAAK0D,uBAAuBtD,MAC3CU,EAAad,KAAK4D,mBAAmBjD,eAAeT,GAG1DF,KAAKkD,UAAUa,KAAKwB,oBAAoBrF,GACxCF,KAAKkD,UAAUa,KAAKzD,eAAeQ,EAAYZ,GAC/CF,KAAKkD,UAAUa,KAAKzC,wBAAwB,EAAGpB,EAAYuE,GAC3DzE,KAAKkD,UAAUa,KAAKtC,gBAAgBqD,EAAc5E,EAAYuE,EAAgBvD,GAC9ElB,KAAK4D,mBAAmBzC,sBAAsBjB,GAC9CF,KAAK4D,mBAAmBtD,eAAeQ,EAAYZ,GACnDF,KAAK4D,mBAAmBtC,wBAAwB,EAAGpB,EAAYuE,GAC/DzE,KAAK4D,mBAAmBnC,gBAAgBqD,EAAc5E,EAAYuE,EAAgBvD,EACpF,CAEA,IAAAsE,CAAKtF,EAAoBF,KAAKN,cAAcS,aAC1C,MACMe,EAAe,MADGlB,KAAK2D,0BAA0BvD,MAEjDU,EAAad,KAAK4D,mBAAmBjD,eAAeT,GAC1DF,KAAKkD,UAAUa,KAAKwB,oBAAoBrF,GACxCF,KAAKkD,UAAUa,KAAKzD,eAAeQ,EAAYZ,GAC/CF,KAAKkD,UAAUa,KAAKtC,gBAAgB,EAAGvB,EAAWgB,GAClDlB,KAAK4D,mBAAmBzC,sBAAsBjB,GAC9CF,KAAK4D,mBAAmBtD,eAAeQ,EAAYZ,GACnDF,KAAK4D,mBAAmBnC,gBAAgB,EAAGvB,EAAWgB,EACxD,CAEA,OAAA0B,CAAQC,GACN7C,KAAKkD,UAAUN,QAAQC,EACzB,CAEA,UAAAG,GACEhD,KAAKkD,UAAUF,YACjB,CAEA,KAAAyC,CAAMvF,EAAoBF,KAAKN,cAAcS,aAC3CH,KAAKkD,UAAUa,KAAK5C,sBAAsBjB,GAC1CF,KAAKkD,UAAUa,KAAKzD,eAAe,EAAGJ,GACtCF,KAAKmD,mBAAmBhC,sBAAsBjB,GAC9CF,KAAKmD,mBAAmB7C,eAAe,EAAGJ,GAC1CF,KAAKoD,oBAAoBjC,sBAAsBjB,GAC/CF,KAAKoD,oBAAoB9C,eAAe,EAAGJ,GAC3CF,KAAKqD,gBAAgBlC,sBAAsBjB,GAC3CF,KAAKqD,gBAAgB/C,eAAe,GAAKJ,GACzCF,KAAKsD,eAAenC,sBAAsBjB,GAC1CF,KAAKsD,eAAehD,eAAe,EAAGJ,GACtCF,KAAKuD,cAAcpC,sBAAsBjB,GACzCF,KAAKuD,cAAcjD,eAAe,EAAGJ,GACrCF,KAAKwD,yBAAyBrC,sBAAsBjB,GACpDF,KAAKwD,yBAAyBlD,eAAe,KAAOJ,GACpDF,KAAKyD,wBAAwBtC,sBAAsBjB,GACnDF,KAAKyD,wBAAwBnD,eAAe,KAAOJ,GACnDF,KAAK0D,uBAAuBvC,sBAAsBjB,GAClDF,KAAK0D,uBAAuBpD,eAAe,EAAGJ,GAC9CF,KAAK2D,0BAA0BxC,sBAAsBjB,GACrDF,KAAK2D,0BAA0BrD,eAAe,KAAOJ,GACrDF,KAAK4D,mBAAmBzC,sBAAsBjB,GAC9CF,KAAK4D,mBAAmBtD,eAAe,EAAGJ,EAC5C,EAGK,MAAMwF,EAAqB,CAACtF,EAAeuF,EAAYC,EAAcC,EAAYC,IACtFH,GAAMC,EAAOD,IAAO,EAAI3E,KAAKC,KAAK6E,GAAM1F,EAAQyF,KAErCE,EAAuB3F,GAAkBsF,EAAmBtF,EAAO,MAAO,KAAM,MAAO,QAEvF4F,EAAwB5F,GAAkBsF,EAAmBtF,EAAO,IAAK,KAAM,MAAO,OAEtF6F,EAAwB7F,GAAkBsF,EAAmBtF,EAAO,MAAO,KAAM,MAAO,QAExF8F,EAAiB,CAAC5D,EAAmBqD,EAAYC,EAAcC,EAAYC,KACtF,GAAIxD,GAAaqD,EAAI,OAAO,EAC5B,GAAIrD,GAAasD,EAAM,OAAO,KAC9B,MAAMxF,EAAQyF,EAAK7E,KAAKmF,KAAKP,EAAOtD,IAAcA,EAAYqD,IAAOG,EACrE,OAAO9E,KAAKoF,IAAIpF,KAAKqF,IAAIjG,EAAO,MAAO,EAAE,EAI9BkG,EAAmBhE,GAAsB4D,EAAe5D,EAAW,MAAO,KAAM,MAAO,QAEvFiE,EAAoBjE,GAAsB4D,EAAe5D,EAAW,IAAK,KAAM,MAAO,OAEtFkE,EAAoBlE,GAAsB4D,EAAe5D,EAAW,MAAO,KAAM,MAAO,QAExFmE,EAAqB,CAACrG,EAAesG,EAAWC,EAAWC,EAAWC,EAAWC,KAC3FJ,EAAItG,GAAS,EAAIuG,EAAIvG,EAAQwG,EAAIE,GAAKD,EAalC,MAAME,EACHrH,cACAsH,QACAC,SACAC,UACAC,UACAC,cACAC,SAEAC,QACAC,QACAC,SACAC,SACAC,UACAC,UACAC,WACAC,SACAC,UACAC,UAER,WAAAlI,CAAYC,GACVE,KAAKN,cAAgBI,EACrBE,KAAKgH,QAAU,IAAIlD,SAAShE,EAAc,CAAEiE,KAAM,IAClD/D,KAAKiH,SAAW,IAAIe,iBAAiBlI,EAAc,CAAEmI,KAAM,YAC3DjI,KAAKkH,UAAY,IAAIc,iBAAiBlI,EAAc,CAAEmI,KAAM,aAC5DjI,KAAKmH,UAAY,IAAIa,iBAAiBlI,EAAc,CAAEmI,KAAM,WAAYC,EAAG,IAC3ElI,KAAKoH,cAAgB,IAAIY,iBAAiBlI,EAAc,CAAEmI,KAAM,UAAWC,EAAG,IAC9ElI,KAAKqH,SAAW,IAAIvD,SAAShE,EAAc,CAAEiE,KAAM,IAEnD/D,KAAKsH,QAAU,IAAIxD,SAAShE,EAAc,CAAEiE,KAAM,IAClD/D,KAAKuH,QAAU,IAAIzD,SAAShE,EAAc,CAAEiE,KAAM,IAClD/D,KAAKwH,SAAW,IAAI1D,SAAShE,EAAc,CAAEiE,KAAM,IACnD/D,KAAKyH,SAAW,IAAI3D,SAAShE,EAAc,CAAEiE,KAAM,IACnD/D,KAAK0H,UAAY,IAAI5D,SAAShE,EAAc,CAAEiE,KAAM,IACpD/D,KAAK2H,UAAY,IAAI7D,SAAShE,EAAc,CAAEiE,KAAM,IACpD/D,KAAK4H,WAAa,IAAI9D,SAAShE,EAAc,CAAEiE,KAAM,IACrD/D,KAAK6H,SAAW,IAAI/D,SAAShE,EAAc,CAAEiE,KAAM,IACnD/D,KAAK8H,UAAY,IAAIhE,SAAShE,EAAc,CAAEiE,KAAM,IACpD/D,KAAK+H,UAAY,IAAIjE,SAAShE,EAAc,CAAEiE,KAAM,IAEpD/D,KAAKgH,QAAQpE,QAAQ5C,KAAKsH,SAC1BtH,KAAKsH,QAAQ1E,QAAQ5C,KAAKqH,UAC1BrH,KAAKgH,QAAQpE,QAAQ5C,KAAKuH,SAC1BvH,KAAKuH,QAAQ3E,QAAQ5C,KAAKiH,UAC1BjH,KAAKgH,QAAQpE,QAAQ5C,KAAKwH,UAC1BxH,KAAKwH,SAAS5E,QAAQ5C,KAAKmH,WAC3BnH,KAAKmH,UAAUvE,QAAQ5C,KAAKoH,eAC5BpH,KAAKgH,QAAQpE,QAAQ5C,KAAKyH,UAC1BzH,KAAKyH,SAAS7E,QAAQ5C,KAAKkH,WAC3BlH,KAAKiH,SAASrE,QAAQ5C,KAAK0H,WAC3B1H,KAAK0H,UAAU9E,QAAQ5C,KAAKmH,WAC5BnH,KAAKiH,SAASrE,QAAQ5C,KAAK2H,WAC3B3H,KAAK2H,UAAU/E,QAAQ5C,KAAKkH,WAC5BlH,KAAKoH,cAAcxE,QAAQ5C,KAAK4H,YAChC5H,KAAK4H,WAAWhF,QAAQ5C,KAAKkH,WAC7BlH,KAAKiH,SAASrE,QAAQ5C,KAAK6H,UAC3B7H,KAAK6H,SAASjF,QAAQ5C,KAAKqH,UAC3BrH,KAAKoH,cAAcxE,QAAQ5C,KAAK8H,WAChC9H,KAAK8H,UAAUlF,QAAQ5C,KAAKqH,UAC5BrH,KAAKkH,UAAUtE,QAAQ5C,KAAK+H,WAC5B/H,KAAK+H,UAAUnF,QAAQ5C,KAAKqH,SAC9B,CAEA,UAAIrD,GACF,OAAOhE,KAAKgH,OACd,CAEA,iBAAImB,GACF,OAAOnI,KAAKiH,QACd,CAEA,kBAAImB,GACF,OAAOpI,KAAKkH,SACd,CAEA,kBAAImB,GACF,OAAOrI,KAAKmH,SACd,CAEA,sBAAImB,GACF,OAAOtI,KAAKoH,aACd,CAOA,YAAAjD,CAAa/D,EAAeF,EAAoBF,KAAKN,cAAcS,aACjEH,KAAKkH,UAAU5E,UAAUhC,eAAe0F,EAAqB5F,GAAQF,GACrEF,KAAKiH,SAAS3E,UAAUhC,eAAeyF,EAAoB3F,GAAQF,GACnE,MAAMqI,EAAoBtC,EAAqB7F,GAC/CJ,KAAKmH,UAAU7E,UAAUhC,eAAeiI,EAAmBrI,GAC3DF,KAAKoH,cAAc9E,UAAUhC,eAAeiI,EAAmBrI,EACjE,CACA,SAAAoC,CAAUlC,EAAeF,EAAoBF,KAAKN,cAAcS,aAC9DH,KAAKkH,UAAU5E,UAAUhC,eAAeF,EAAOF,GAC/CF,KAAKiH,SAAS3E,UAAUhC,eAAeF,EAAOF,GAC9CF,KAAKmH,UAAU7E,UAAUhC,eAAeF,EAAOF,GAC/CF,KAAKoH,cAAc9E,UAAUhC,eAAeF,EAAOF,EACrD,CAOA,YAAAsI,CAAapI,EAAeF,EAAoBF,KAAKN,cAAcS,aACjEH,KAAKkH,UAAUgB,EAAE5H,eApHe,CAACF,GACnCqG,EAAmBrG,GAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAmHzBqI,CAAqBrI,GAAQF,GAC7DF,KAAKiH,SAASiB,EAAE5H,eAxHe,CAACF,GAClCqG,EAAmBrG,GAAQ,MAAQ,OAAS,MAAQ,QAAS,OAuH5BsI,CAAoBtI,GAAQF,GAC3DF,KAAKoH,cAAcrD,KAAKzD,eAnHQ,CAACF,GACnCqG,EAAmBrG,GAAQ,MAAQ,MAAQ,MAAQ,OAAQ,OAkHlBuI,CAAqBvI,GAAQF,EACtE,CACA,SAAA0I,CAAUxI,EAAeF,EAAoBF,KAAKN,cAAcS,aAC9DH,KAAKkH,UAAUgB,EAAE5H,eAAeF,EAAOF,GACvCF,KAAKiH,SAASiB,EAAE5H,eAAeF,EAAOF,GACtCF,KAAKoH,cAAcrD,KAAKzD,eAAeF,EAAOF,EAChD,CAOA,aAAA2I,CAAczI,EAAeF,EAAoBF,KAAKN,cAAcS,aAClE,MAAM2I,EAA4B,GACrB,EAAR1I,GACH0I,EAAY7I,KAAK,WAEN,EAARG,GACH0I,EAAY7I,KAAK,YAEN,EAARG,GACH0I,EAAY7I,KAAK,YAEnBD,KAAK+I,WAAWD,EAAa5I,EAC/B,CACA,UAAA6I,CAAW3I,EAAqBF,EAAoBF,KAAKN,cAAcS,aACjEC,EAAMkE,SAAS,YAAclE,EAAMkE,SAAS,aAAelE,EAAMkE,SAAS,aAC5EtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,IAC7BE,EAAMkE,SAAS,YAAclE,EAAMkE,SAAS,aACrDtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,IAC7BE,EAAMkE,SAAS,YAAclE,EAAMkE,SAAS,aACrDtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,IAC7BE,EAAMkE,SAAS,aAAelE,EAAMkE,SAAS,aACtDtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,IAC7BE,EAAMkE,SAAS,YACxBtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,IAC7BE,EAAMkE,SAAS,aACxBtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,IAC7BE,EAAMkE,SAAS,aACxBtE,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,KAEtCF,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,GAE1C,CAEA,OAAA0C,CAAQC,GACN7C,KAAKqH,SAASzE,QAAQC,EACxB,CAEA,UAAAG,GACEhD,KAAKqH,SAASrE,YAChB,CAEA,KAAAyC,CAAMvF,EAAoBF,KAAKN,cAAcS,aAC3CH,KAAKkH,UAAU5E,UAAUnB,sBAAsBjB,GAC/CF,KAAKkH,UAAU5E,UAAUhC,eAAe,EAAGJ,GAC3CF,KAAKkH,UAAUgB,EAAE/G,sBAAsBjB,GACvCF,KAAKkH,UAAUgB,EAAE5H,eAAe,EAAGJ,GACnCF,KAAKiH,SAAS3E,UAAUnB,sBAAsBjB,GAC9CF,KAAKiH,SAAS3E,UAAUhC,eAAe,EAAGJ,GAC1CF,KAAKiH,SAASiB,EAAE/G,sBAAsBjB,GACtCF,KAAKiH,SAASiB,EAAE5H,eAAe,EAAGJ,GAClCF,KAAKmH,UAAU7E,UAAUnB,sBAAsBjB,GAC/CF,KAAKmH,UAAU7E,UAAUhC,eAAe,EAAGJ,GAC3CF,KAAKoH,cAAc9E,UAAUnB,sBAAsBjB,GACnDF,KAAKoH,cAAc9E,UAAUhC,eAAe,EAAGJ,GAC/CF,KAAKoH,cAAcrD,KAAK5C,sBAAsBjB,GAC9CF,KAAKoH,cAAcrD,KAAKzD,eAAe,EAAGJ,GAC1CF,KAAKsH,QAAQvD,KAAK5C,sBAAsBjB,GACxCF,KAAKsH,QAAQvD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKuH,QAAQxD,KAAK5C,sBAAsBjB,GACxCF,KAAKuH,QAAQxD,KAAKzD,eAAe,EAAGJ,GACpCF,KAAKwH,SAASzD,KAAK5C,sBAAsBjB,GACzCF,KAAKwH,SAASzD,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyH,SAAS1D,KAAK5C,sBAAsBjB,GACzCF,KAAKyH,SAAS1D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK0H,UAAU3D,KAAK5C,sBAAsBjB,GAC1CF,KAAK0H,UAAU3D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK2H,UAAU5D,KAAK5C,sBAAsBjB,GAC1CF,KAAK2H,UAAU5D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK4H,WAAW7D,KAAK5C,sBAAsBjB,GAC3CF,KAAK4H,WAAW7D,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK6H,SAAS9D,KAAK5C,sBAAsBjB,GACzCF,KAAK6H,SAAS9D,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK8H,UAAU/D,KAAK5C,sBAAsBjB,GAC1CF,KAAK8H,UAAU/D,KAAKzD,eAAe,EAAGJ,GACtCF,KAAK+H,UAAUhE,KAAK5C,sBAAsBjB,GAC1CF,KAAK+H,UAAUhE,KAAKzD,eAAe,EAAGJ,EACxC,EAGK,MAAM8I,EACHtJ,cACAuJ,UACAtH,YACAuH,QACAC,QACAC,QACAC,QAEAC,SACAC,WACAC,SACAC,SACAC,WACAC,SACAC,SACAC,WACAC,WACAC,SAER,WAAAlK,CAAYC,EAA6B,IAAIkK,cAC3ChK,KAAKN,cAAgBI,EACrBE,KAAKiJ,UAAY,IAAInF,SAAShE,EAAc,CAAEiE,KAAM,IACpD/D,KAAK2B,YAAc,IAAID,EAAc5B,GACrCE,KAAKkJ,QAAU,IAAIjG,EAASnD,EAAcE,KAAK2B,YAAYO,cAC3DlC,KAAKmJ,QAAU,IAAIlG,EAASnD,EAAcE,KAAK2B,YAAYe,cAC3D1C,KAAKoJ,QAAU,IAAInG,EAASnD,EAAcE,KAAK2B,YAAYgB,cAC3D3C,KAAKqJ,QAAU,IAAItC,EAAUjH,GAE7BE,KAAKsJ,SAAW,IAAIxF,SAAShE,EAAc,CAAEiE,KAAM,EAAI,IACvD/D,KAAKuJ,WAAa,IAAIzF,SAAShE,EAAc,CAAEiE,KAAM,IACrD/D,KAAKwJ,SAAW,IAAI1F,SAAShE,EAAc,CAAEiE,KAAM,IACnD/D,KAAKyJ,SAAW,IAAI3F,SAAShE,EAAc,CAAEiE,KAAM,EAAI,IACvD/D,KAAK0J,WAAa,IAAI5F,SAAShE,EAAc,CAAEiE,KAAM,IACrD/D,KAAK2J,SAAW,IAAI7F,SAAShE,EAAc,CAAEiE,KAAM,IACnD/D,KAAK4J,SAAW,IAAI9F,SAAShE,EAAc,CAAEiE,KAAM,EAAI,IACvD/D,KAAK6J,WAAa,IAAI/F,SAAShE,EAAc,CAAEiE,KAAM,IACrD/D,KAAK8J,WAAa,IAAIhG,SAAShE,EAAc,CAAEiE,KAAM,IACrD/D,KAAK+J,SAAW,IAAIjG,SAAShE,EAAc,CAAEiE,KAAM,IAEnD/D,KAAK2B,YAAYiB,QAAQ5C,KAAKkJ,QAAQlF,OAAQ,GAC9ChE,KAAKkJ,QAAQtG,QAAQ5C,KAAKsJ,UAC1BtJ,KAAKsJ,SAAS1G,QAAQ5C,KAAKuJ,YAC3BvJ,KAAKuJ,WAAW3G,QAAQ5C,KAAKqJ,QAAQrF,QACrChE,KAAKsJ,SAAS1G,QAAQ5C,KAAKwJ,UAC3BxJ,KAAKwJ,SAAS5G,QAAQ5C,KAAKiJ,WAC3BjJ,KAAK2B,YAAYiB,QAAQ5C,KAAKmJ,QAAQnF,OAAQ,GAC9ChE,KAAKmJ,QAAQvG,QAAQ5C,KAAKyJ,UAC1BzJ,KAAKyJ,SAAS7G,QAAQ5C,KAAK0J,YAC3B1J,KAAK0J,WAAW9G,QAAQ5C,KAAKqJ,QAAQrF,QACrChE,KAAKyJ,SAAS7G,QAAQ5C,KAAK2J,UAC3B3J,KAAK2J,SAAS/G,QAAQ5C,KAAKiJ,WAC3BjJ,KAAK2B,YAAYiB,QAAQ5C,KAAKoJ,QAAQpF,OAAQ,GAC9ChE,KAAKoJ,QAAQxG,QAAQ5C,KAAK6J,YAC1B7J,KAAK6J,WAAWjH,QAAQ5C,KAAK4J,UAC7B5J,KAAK4J,SAAShH,QAAQ5C,KAAK8J,YAC3B9J,KAAK8J,WAAWlH,QAAQ5C,KAAKqJ,QAAQrF,QACrChE,KAAK4J,SAAShH,QAAQ5C,KAAK+J,UAC3B/J,KAAK+J,SAASnH,QAAQ5C,KAAKiJ,WAC3BjJ,KAAKqJ,QAAQzG,QAAQ5C,KAAKiJ,UAC5B,CAEA,KAAA3D,GACE,OAAOtF,KAAKN,cAAcuK,QAC5B,CAEA,UAAIC,GACF,OAAOlK,KAAKkJ,OACd,CAEA,UAAIiB,GACF,OAAOnK,KAAKmJ,OACd,CAEA,UAAIiB,GACF,OAAOpK,KAAKoJ,OACd,CAEA,UAAIiB,GACF,MAAO,CAACrK,KAAKkJ,QAASlJ,KAAKmJ,QAASnJ,KAAKoJ,QAC3C,CAEA,UAAIkB,GACF,OAAOtK,KAAKqJ,OACd,CAOA,cAAAkB,CAAenK,EAAeF,EAAoBF,KAAKN,cAAcS,aACnEH,KAAKwK,YAAY,EAAY,EAARpK,EAAmB,EAAI,EAAGF,GAC/CF,KAAKwK,YAAY,EAAY,EAARpK,EAAmB,EAAI,EAAGF,GAC/CF,KAAKwK,YAAY,EAAY,EAARpK,EAAmB,EAAI,EAAGF,EACjD,CACA,WAAAsK,CAAYC,EAAoBrK,EAAcF,EAAoBF,KAAKN,cAAcS,aACnF,OAAQsK,GACN,KAAK,EACHzK,KAAKuJ,WAAWxF,KAAKzD,eAAeF,EAAOF,GAC3CF,KAAKwJ,SAASzF,KAAKzD,eAAe,EAAIF,EAAOF,GAC7C,MACF,KAAK,EACHF,KAAK0J,WAAW3F,KAAKzD,eAAeF,EAAOF,GAC3CF,KAAK2J,SAAS5F,KAAKzD,eAAe,EAAIF,EAAOF,GAC7C,MACF,KAAK,EACHF,KAAK8J,WAAW/F,KAAKzD,eAAeF,EAAOF,GAC3CF,KAAK+J,SAAShG,KAAKzD,eAAe,EAAIF,EAAOF,GAGnD,CAOA,YAAAwK,CAAatK,EAAeF,EAAoBF,KAAKN,cAAcS,aACjEH,KAAK2K,UAAUC,QAAQxK,GAAQF,EACjC,CACA,SAAAyK,CAAUvK,EAAgBF,EAAoBF,KAAKN,cAAcS,aAC/DH,KAAK6J,WAAW9F,KAAKzD,eAAeF,EAAQ,EAAI,EAAGF,EACrD,CAOA,SAAA2K,CAAUzK,EAAeF,EAAoBF,KAAKN,cAAcS,aAC9DH,KAAK8K,OAAO1K,EAAQ,GAAIF,EAC1B,CACA,MAAA4K,CAAO1K,EAAeF,EAAoBF,KAAKN,cAAcS,aAC3DH,KAAKiJ,UAAUlF,KAAKzD,eAAeF,EAAOF,EAC5C,CAEA,OAAA0C,CAAQC,EAAwBC,EAAiBC,GAC/C/C,KAAKiJ,UAAUrG,QAAQC,EAAaC,EAAQC,EAC9C,CAEA,UAAAC,GACEhD,KAAKiJ,UAAUjG,YACjB,CAEA,KAAAyC,CAAMvF,EAAoBF,KAAKN,cAAcS,aAC3CH,KAAKiJ,UAAUlF,KAAK5C,sBAAsBjB,GAC1CF,KAAKiJ,UAAUlF,KAAKzD,eAAe,EAAGJ,GACtCF,KAAKkJ,QAAQzD,MAAMvF,GACnBF,KAAKmJ,QAAQ1D,MAAMvF,GACnBF,KAAKoJ,QAAQ3D,MAAMvF,GACnBF,KAAKqJ,QAAQ5D,MAAMvF,GACnBF,KAAKsJ,SAASvF,KAAK5C,sBAAsBjB,GACzCF,KAAKsJ,SAASvF,KAAKzD,eAAe,EAAI,EAAGJ,GACzCF,KAAKuJ,WAAWxF,KAAK5C,sBAAsBjB,GAC3CF,KAAKuJ,WAAWxF,KAAKzD,eAAe,EAAGJ,GACvCF,KAAKwJ,SAASzF,KAAK5C,sBAAsBjB,GACzCF,KAAKwJ,SAASzF,KAAKzD,eAAe,EAAGJ,GACrCF,KAAKyJ,SAAS1F,KAAK5C,sBAAsBjB,GACzCF,KAAKyJ,SAAS1F,KAAKzD,eAAe,EAAI,EAAGJ,GACzCF,KAAK0J,WAAW3F,KAAK5C,sBAAsBjB,GAC3CF,KAAK0J,WAAW3F,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK2J,SAAS5F,KAAK5C,sBAAsBjB,GACzCF,KAAK2J,SAAS5F,KAAKzD,eAAe,EAAGJ,GACrCF,KAAK4J,SAAS7F,KAAK5C,sBAAsBjB,GACzCF,KAAK4J,SAAS7F,KAAKzD,eAAe,EAAI,EAAGJ,GACzCF,KAAK6J,WAAW9F,KAAK5C,sBAAsBjB,GAC3CF,KAAK6J,WAAW9F,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK8J,WAAW/F,KAAK5C,sBAAsBjB,GAC3CF,KAAK8J,WAAW/F,KAAKzD,eAAe,EAAGJ,GACvCF,KAAK+J,SAAShG,KAAK5C,sBAAsBjB,GACzCF,KAAK+J,SAAShG,KAAKzD,eAAe,EAAGJ,EACvC,E,4GC3/BF,MAAM6K,EAA4B,GAClC,IAAK,IAAItK,EAAI,EAAGA,EAAI,GAAIA,IAAKsK,EAAQtK,GAAKuK,SAASC,eAAe,IAAIxK,KACtE,MAAMyK,EAAoC,GAC1C,IAAK,IAAIzK,EAAI,EAAGA,EAAI,EAAGA,IAAKyK,EAAUzK,GAAKuK,SAASC,eAAe,OAAOxK,KAC1E,MAAM0K,EAAgBH,SAASC,eAAe,iBACxCG,EAAiBJ,SAASC,eAAe,kBACzCI,EAAoBL,SAASC,eAAe,qBAC5CK,EAAoBN,SAASC,eAAe,gBAC5CM,EAAkBP,SAASC,eAAe,aAC1CO,EAAkBR,SAASC,eAAe,mBAC1CQ,EAAqBT,SAASC,eAAe,sBAC7CS,EAAqBV,SAASC,eAAe,iBAC7CU,EAAmBX,SAASC,eAAe,cAC3CW,EAAkBZ,SAASC,eAAe,aAC1CY,EAAcb,SAASC,eAAe,WACtCa,EAAad,SAASC,eAAe,cACrCc,EAAef,SAASC,eAAe,YAqBvCe,EAAuB,CAC3BC,gBAAiB,OACjBC,WAAW,EACXC,WAAW,EACXC,aAAc,EACdC,eAAgB,GAChBC,oBAAqB,GACrBC,kBAAmB,GACnBC,cAAe,EACfC,gBAAiB,GACjBC,qBAAsB,GACtBC,mBAAoB,GACpBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5BC,aAAc,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GACpCC,KAAM,GACN5M,UAAW,EACXC,YAAa,EACb4M,sBAAuB,KAAa5M,aA8CzB6M,EAAe,IAAIC,MAAMjB,EA5CD,CACnC,GAAAkB,CAAIC,EAAeC,EAAuBhN,GACxC,GAAiB,iBAAbgN,EACF,IAAK,IAAI3M,EAAI,EAAGA,EAAI,EAAGA,IACrB4M,EACEF,EAAON,aAAapM,IAAM,GAAK0M,EAAOP,MAAMnM,GAAGD,OAAS,EAAI2M,EAAOP,MAAMnM,GAAG0M,EAAON,aAAapM,IAAI6M,OAAS,GAInH,GAAiB,UAAbF,EACF,IAAK,IAAI3M,EAAI,EAAGA,EAAI,EAAGA,IACrB4M,EACEF,EAAON,aAAapM,IAAM,GAAK0M,EAAOP,MAAMnM,GAAGD,OAAS,EAAI2M,EAAOP,MAAMnM,GAAG0M,EAAON,aAAapM,IAAI6M,OAAS,GA6BnH,OAxBCH,EAAeC,GAAYhN,EAExB,CAAC,QAAS,eAAgB,eAAekE,SAAS8I,IACpDG,IAEE,CAAC,QAAQjJ,SAAS8I,IACpBI,IAGA,CACE,kBACA,sBACA,oBACA,uBACA,sBACAlJ,SAAS8I,IAEXK,IAGA,CAAC,YAAa,YAAa,eAAgB,iBAAkB,gBAAiB,eAAenJ,SAAS8I,IAEtGM,KAEK,CACT,IAIIC,EAAc,IAAc3M,KAAKoF,IAAI4G,EAAMZ,aAAcY,EAAMR,eAE/DoB,EAAiBxN,IACrB,MAAMyN,EAAO7M,KAAK8M,MAAM1N,EAAQ,IAC1B2N,EAAO/M,KAAK8M,MAAM1N,EAAQ,GAAKyN,GACrC,MAAO,GAAGG,OAAOH,GAAMI,SAAS,EAAG,QAAQD,OAAOD,GAAME,SAAS,EAAG,MAAM,EAGtEC,EAA0B,mBAC1BC,EAAiB,CAACrB,EAAcsB,EAAmBC,KACvD,MAAMC,EAAOtD,SAASuD,cAAc,QAIpC,OAHAD,EAAKE,MAAMC,MAAQJ,EAAUH,EAAkBE,EAC/CE,EAAKE,MAAMN,gBAAkBG,EAAUD,EAAYF,EACnDI,EAAKI,UAAY5B,EACVwB,CAAI,EAGPK,EAAyBC,GAAyBA,EAAKC,QAAQ,WAAY,IAE3EtB,EAAmB,KACvB,IAAK,IAAI9M,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAA8B,IAA1BuM,EAAMJ,MAAMnM,GAAGD,OAAc,CAC/B,MAAML,EAAc6M,EAAM7M,YACpB2O,EAA4B9B,EAAMH,aAAapM,IAAM,EAAIuM,EAAMJ,MAAMnM,GAAGuM,EAAMH,aAAapM,SAAMsO,EACvG,IAAKD,GAAQ3O,EAAc2O,EAAKxJ,OAASnF,GAAe2O,EAAKtJ,KAAM,CACjE6H,EAAeyB,GAAQA,EAAKxB,QAAW,GACvC,IAAIA,GAAiB,EACrB,IAAK,IAAI0B,EAAI,EAAGA,EAAIhC,EAAMJ,MAAMnM,GAAGD,OAAQwO,IACzC,GAAI7O,GAAe6M,EAAMJ,MAAMnM,GAAGuO,GAAG1J,OAASnF,EAAc6M,EAAMJ,MAAMnM,GAAGuO,GAAGxJ,KAAM,CAClF8H,EAAQ0B,EACR,KACF,CAEFhD,EAAca,aAAapM,GAAK6M,EAC5BA,EAAQ,GAAG2B,EAAYjC,EAAMJ,MAAMnM,GAAG6M,GAAOA,MAAO7M,EAC1D,CACF,CACF,EAEI+M,EAAe,KACnB,IAAK,IAAI/M,EAAI,EAAGA,EAAI,EAAGA,IAAKyK,EAAUzK,GAAGyO,YAAc,GAEvD,IAAIC,EAAgB,EAChBrC,EAAe,GACf2B,EAAgB,KAAgB,IAAEW,OAClCf,GAAmB,EAEvBgB,EAAU,IAAK,MAAMC,KAAQtC,EAAMF,KACjC,OAAQwC,GACN,KAAK,EAECxC,GAAM5B,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IAC9D,MAAMgB,EACR,KAAK,GAEHnE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDc,IACArC,EAAO,GACP,MACF,KAAK,EAEH5B,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,GAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACPuB,GAAU,EACV,MACF,KAAK,GAEHnD,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,GAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,GAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACPuB,GAAU,EACV,MACF,KAAK,IAEHnD,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAiB,KAAEW,OAC3B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,KAAK,IAEHlE,EAAUiE,GAAOI,OAAOpB,EAAerB,EAAM2B,EAAOJ,IACpDvB,EAAO,GACP2B,EAAQ,KAAgB,IAAEW,OAC1B,MACF,QACEtC,GAAQ,IAAMwC,IAAS,IAG7B,EAEI7B,EAAsB,KAC1BrC,EAAeoD,MAAMgB,QAAoC,UAA1BxC,EAAMf,gBAA8B,OAAS,SAC5Eb,EAAehL,MAAQ4M,EAAMV,oBAC7BjB,EAAkBmD,MAAMgB,QAAoC,UAA1BxC,EAAMf,gBAA8B,OAAS,SAC/EZ,EAAkB6D,YAAclC,EAAMT,kBAAoBoC,EAAsB3B,EAAMT,mBAAqB,YAC1GS,EAAMT,oBAAsBjB,EAAkBlL,MAAQ4M,EAAMT,mBAC7DhB,EAAgBiD,MAAMgB,QAAoC,UAA1BxC,EAAMf,gBAA8B,OAAS,SAC7ET,EAAgBgD,MAAMgB,QAAoC,UAA1BxC,EAAMf,gBAA8B,SAAW,OAC/ET,EAAgBpL,MAAQ4M,EAAMN,qBAC9BjB,EAAmB+C,MAAMgB,QAAoC,UAA1BxC,EAAMf,gBAA8B,SAAW,OAClFR,EAAmByD,YAAclC,EAAML,mBAAqBgC,EAAsB3B,EAAML,oBAAsB,YAC7GK,EAAML,qBAAuBjB,EAAmBtL,MAAQ4M,EAAML,oBAC/DhB,EAAiB6C,MAAMgB,QAAoC,UAA1BxC,EAAMf,gBAA8B,SAAW,MAAM,EAElFyB,EAAmB,KACvB9B,EAAgB6D,SAA2C,IAAhCzC,EAAMX,eAAe7L,QAAgBwM,EAAMd,UACtEc,EAAMb,UAAYP,EAAgB8D,UAAUC,IAAI,UAAY/D,EAAgB8D,UAAUE,OAAO,UAC7F/D,EAAYqD,YAActB,EAAcZ,EAAM7M,aAC9C2L,EAAW2D,SAA2C,IAAhCzC,EAAMX,eAAe7L,QAAgBwM,EAAMd,UACjEJ,EAAW1F,IAAM4H,OAAOL,KACxB7B,EAAW1L,MAAQ4N,OAAOhB,EAAM7M,aAChC4L,EAAamD,YAActB,EAAcD,IAAc,EAGnDkC,EAAcC,MAAOC,EAAkBC,KAC3CC,IACAjD,EAAMd,WAAY,EAClBc,EAAMb,WAAY,EAClB,MAAM,WAAE+D,EAAU,SAAEC,EAAQ,KAAErD,EAAI,MAAEF,SAAgB,QAASmD,EAASC,GACtD,UAAZD,GACF/C,EAAMR,cAAgB2D,EACtBnD,EAAMP,gBAAkByD,EACxBlD,EAAMJ,MAAQ,CAACI,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACzFI,EAAMH,aAAe,CAACG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,IAAK,GAAI,GAAI,IACpG,YAEAG,EAAMZ,aAAe+D,EACrBnD,EAAMX,eAAiB6D,EACvBlD,EAAMJ,MAAQ,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAII,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,IACzFI,EAAMH,aAAe,EAAE,GAAI,GAAI,EAAGG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,IACnGG,EAAMF,KAAOA,GAEfE,EAAM9M,UAAY,EAClB8M,EAAM7M,YAAc,EACpB6M,EAAMD,sBAAwB,KAAa5M,YAC3C6M,EAAMd,WAAY,CAAK,EAGnBkE,EAASL,IACbE,IACAjD,EAAMd,WAAY,EAClBc,EAAMb,WAAY,EACF,UAAZ4D,GACF/C,EAAMR,cAAgB,EACtBQ,EAAMP,gBAAkB,GACxBO,EAAMN,qBAAuB,GAC7BM,EAAML,mBAAqB,GAC3BK,EAAMJ,MAAQ,CAACI,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,GAAI,GAAI,GAAI,IACvEI,EAAMH,aAAe,CAACG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,IAAK,GAAI,GAAI,KAEpGG,EAAMZ,aAAe,EACrBY,EAAMX,eAAiB,GACvBW,EAAMV,oBAAsB,GAC5BU,EAAMT,kBAAoB,GAC1BS,EAAMJ,MAAQ,CAAC,GAAI,GAAI,GAAII,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,GAAII,EAAMJ,MAAM,IACvEI,EAAMH,aAAe,EAAE,GAAI,GAAI,EAAGG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,GAAIG,EAAMH,aAAa,IAEnGG,EAAMF,KAAO,CACX,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAG1GE,EAAM9M,UAAY,EAClB8M,EAAM7M,YAAc,EACpB6M,EAAMD,sBAAwB,KAAa5M,WAAW,EAGxDgL,EAAckF,SAAYC,IACxBtD,EAAMf,gBAAmBqE,EAAEnD,OAA6B/M,KAAgB,EAG1EkL,EAAkB+E,SAAYC,IAE5B,MAAMlQ,EAAgBkQ,EAAEnD,OAAO/M,MAC/B,GAAIA,EAAO,CACT4M,EAAMT,kBAAoBnM,EAC1B4M,EAAMV,oBAAsB,GAE5B,MAAM0D,EAAaM,EAAEnD,OAAOoD,MAAM,GAClCP,GAAQH,EAAY,OAAQG,EAC9B,MACEI,EAAM,OACR,EAEF1E,EAAmB2E,SAAYC,IAE7B,MAAMlQ,EAAgBkQ,EAAEnD,OAAO/M,MAC/B,GAAIA,EAAO,CACT4M,EAAML,mBAAqBvM,EAC3B4M,EAAMN,qBAAuB,GAE7B,MAAMsD,EAAaM,EAAEnD,OAAOoD,MAAM,GAClCP,GAAQH,EAAY,QAASG,EAC/B,MACEI,EAAM,QACR,EAEFhF,EAAeiF,SAAWP,MAAOQ,IAE/B,MAAMlQ,EAAgBkQ,EAAEnD,OAAO/M,MAC/B,GAAIA,EAAO,CACT4M,EAAMV,oBAAsBlM,EAC5B4M,EAAMT,kBAAoB,GAC1B,MAAMiE,QAAiBC,MAAM,QAAQrQ,aAC/B4P,QAAaQ,EAASE,OAC5Bb,EAAY,OAAQG,EACtB,MACEI,EAAM,OACR,EAEF5E,EAAgB6E,SAAWP,MAAOQ,IAEhC,MAAMlQ,EAAgBkQ,EAAEnD,OAAO/M,MAC/B,GAAIA,EAAO,CACT4M,EAAMN,qBAAuBtM,EAC7B4M,EAAML,mBAAqB,GAC3B,MAAM6D,QAAiBC,MAAM,QAAQrQ,aAC/B4P,QAAaQ,EAASE,OAC5Bb,EAAY,QAASG,EACvB,MACEI,EAAM,UACN,SACF,EAEF7E,EAAgBoF,QAAU,KACxBP,EAAM,QACNA,EAAM,QAAQ,EAEhBzE,EAAiBgF,QAAU,KACzBP,EAAM,QACNA,EAAM,UACN,SAAa,EAGf,MAAM/C,EAAiBC,IACrB,GAAIA,EAAQ,GAAKA,GAASvC,EAAQvK,OAAQ,OAC1C,MAAMiO,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAInK,SAASgJ,EAAQ,IAClD,4CACA,yCACJvC,EAAQuC,GAAOkB,MAAMoC,WAAanC,CAAK,EAEnCoC,EAAsC,CAC1C,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,aAEC5B,EAAc,CAAC3B,EAAe7C,KAClCM,EAAQuC,GAAOkB,MAAMoC,WAAaC,EAASpG,EAAW,EAGlDqG,EAAO,KAENC,IAAwBA,EAAyBC,YAAYC,EAAgB,KAClF,KAAahH,QAAQ,EAEjBgG,EAAQ,KACRc,IACFG,cAAcH,GACdA,OAAyBhC,GAE3B,KAAaoC,SAAS,EAExBvF,EAAgB+E,QAAU,KACpB3D,EAAMb,WACR8D,IACAjD,EAAMb,WAAY,IAElB2E,IACA9D,EAAMb,WAAY,EACpB,EAGF,MAAMiF,EAAkBd,IACtBtD,EAAMd,WAAY,EAElBc,EAAM9M,UAAYkF,OAAOkL,EAAEnD,OAAO/M,OAElC4M,EAAM7M,YAAciF,OAAOkL,EAAEnD,OAAO/M,OACpC4M,EAAMD,sBAAwB,KAAa5M,YAC3C6M,EAAMX,eAAe7L,OAAS,IAAK,QAAa,OAAQwM,EAAMX,eAAgBW,EAAM9M,WACpF8M,EAAMP,gBAAgBjM,OAAS,IAAK,QAAa,QAASwM,EAAMP,gBAAiBO,EAAM9M,WACvF8M,EAAMH,aAAe,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3CG,EAAMd,WAAY,CAAK,EAqBzB,IAAI6E,EAnBJjF,EAAWuF,YAAef,IACxBL,GAAO,EAETnE,EAAWwF,aAAgBhB,IACzBL,GAAO,EAETnE,EAAWyF,QAAWjB,IAEpBtD,EAAM7M,YAAciF,OAAOkL,EAAEnD,OAAO/M,MAAM,EAE5C0L,EAAW0F,UAAalB,IACtBc,EAAed,GACXtD,EAAMb,WAAW2E,GAAM,EAE7BhF,EAAW2F,WAAcnB,IACvBc,EAAed,GACXtD,EAAMb,WAAW2E,GAAM,EAI7B,MAAMG,EAAiB,KACrBjE,EAAM7M,YAAc6M,EAAM9M,UAAY,KAAaC,YAAc6M,EAAMD,sBACnEC,EAAM7M,YAAcwN,MACtBsC,IACAjD,EAAMb,WAAY,EACpB,E,wICreK,MAAMrM,EAAe,IAAIkK,mBAC1BlK,EAAa4R,aAAaC,UAAU,4BACpC7R,EAAaqR,UAGnB,IAEE,GAAiD,mBADhCrR,EAAa8R,aACV7N,KAAKwB,oBACvB,MAAM,IAAIsM,MAAM,0DACpB,CAAE,MAAOvB,GAIP,MAHAwB,QAAQC,MAAM,kCAAmCzB,GACjDtF,SAASC,eAAe,gBAAiBuD,MAAMgB,QAAU,OACzDxE,SAASC,eAAe,uBAAwBuD,MAAMgB,QAAU,QAC1Dc,CACR,CAEA,MAAM0B,EAAU,IAAI,KAASlS,GACvBmS,EAAW,IAAI,KAASnS,GACxBoS,EAAS,IAAIC,kBAAkBrS,EAAc,CAAE+B,eAAgB,IACrEmQ,EAAQpP,QAAQ9C,EAAa+C,aAEtB,MAAMuP,EAAc,KACzBJ,EAAQpP,QAAQ9C,EAAa+C,aAC7BoP,EAASjP,aACTkP,EAAOlP,YAAY,EAGRqP,EAAgB,KAC3BL,EAAQpP,QAAQsP,EAAQ,EAAG,GAC3BD,EAASrP,QAAQsP,EAAQ,EAAG,GAC5BA,EAAOtP,QAAQ9C,EAAa+C,YAAY,EAGpCyP,EAAgB,CACpBxD,EACAyD,EACAC,EACAC,EACAC,KAEA,GAAa,QAAT5D,EAAgB,MAAO,CAAExB,OAAQ,EAAGhL,UAAW,GAEnD,IAAIgL,EADuC,CAAE1G,EAAG,EAAG+L,EAAG,EAAGrC,EAAG,EAAGsC,EAAG,EAAGC,EAAG,EAAGnM,EAAG,EAAGC,EAAG,GAAImM,IAAKC,KACjEjE,GAC5B,OAAQyD,GACN,IAAK,MACHjF,IACA,MACF,IAAK,MACL,QACE,MACF,IAAK,MACHA,IACA,MACF,IAAK,MACC,CAAC,IAAK,IAAK,IAAK,KAAKhJ,SAASwK,GAChCxB,GAAS,EACA,CAAC,IAAK,IAAK,KAAKhJ,SAASwK,KAClCxB,GAAS,GAMf,OAHAA,GAAS,GAAKkF,EACdlF,GAASoF,EAEF,CAAEpF,QAAOhL,UADE,IAAM,KAAOgL,EAAQ,IAAM,IAAMmF,EAAS,KACjC,EAGvBO,EAAe,CAAC7C,EAAoB8C,EAAgBC,EAAeC,KACvE,IAAIC,EACJ,OAAQjD,GACN,IAAK,MACHiD,EAAM,EACN,MACF,IAAK,MACHA,EAAM,EACN,MACF,IAAK,MACL,QACEA,EAAM,EACN,MACF,IAAK,MACHA,EAAM,GACN,MACF,IAAK,OACHA,EAAM,EAAI,EACV,MACF,IAAK,OACHA,EAAM,EAAI,EACV,MACF,IAAK,OACHA,EAAM,EAAI,GACV,MACF,IAAK,MACH,OAAOD,EAAkB,GAE7B,OAAQF,GACN,IAAK,MACL,QACE,MACF,IAAK,MACHG,GAAO,IACP,MACF,IAAK,MACHA,GAAO,KAGX,OAAQ,GAAKF,EAASE,CAAG,EAGrBC,EAAgC,CACpCC,EACApT,EACAoC,EACA6N,EACAoD,EACAC,KAEA,GAAwB,IAApBD,EAAWE,MAAgC,IAAlBD,EAAQE,MACnCJ,EAAMhR,UAAUA,EAAWpC,QACtB,GAAwB,IAApBqT,EAAWE,KAAY,CAChC,MAAME,EAAU3S,KAAK4S,KAAKtR,EAAYiR,EAAWM,gBAAkBN,EAAWE,KAAO,GAAK,KAC1F,GAAIzS,KAAK8S,IAAIxR,EAAYiR,EAAWM,iBAAmB7S,KAAK8S,IAAIH,EAAUxD,GAAW,CACnF,MAAM4D,EAAcR,EAAWM,eAAiBF,EAAUxD,EAC1DmD,EAAMhR,UAAUiR,EAAWM,eAAgB3T,GAC3CoT,EAAMrP,eAAe3C,wBAAwByS,EAAa7T,EAAYiQ,EACxE,KAAO,CACL,MAAM6D,GAAe1R,EAAYiR,EAAWM,gBAAkBF,EAC9DL,EAAMhR,UAAUiR,EAAWM,eAAgB3T,GAC3CoT,EAAMrP,eAAe3C,wBAAwBgB,EAAWpC,EAAY8T,GAC9C,IAAlBR,EAAQE,OACVL,EACEC,EACApT,EAAY8T,EACZ1R,EACA6N,EAAW6D,EACX,IAAKT,EAAYE,KAAM,GACvBD,EAEN,CACF,KAAO,CACL,MAAMS,EAA0B,GAAhBT,EAAQE,MAAa,KAC/BQ,EAAY5R,EAAYkR,EAAQE,MAAQ,KAAmBF,EAAQC,KACzE,IAAI7S,EAAO,EACPuT,GAAK,EACTb,EAAMhR,UAAUA,EAAWpC,GAC3B,GACMU,EAAO4S,EAAQC,KAAO,GAAKtD,GAC7BvP,GAAQ4S,EAAQC,KAAO,GACnBU,GACFb,EAAMrP,eAAe3C,wBAAwB4S,EAAWhU,EAAYU,GACpE0S,EAAMhR,UAAU4R,EAAWhU,EAAYU,KAEvC0S,EAAMrP,eAAe3C,wBAAwBgB,EAAWpC,EAAYU,GACpE0S,EAAMhR,UAAUA,EAAWpC,EAAYU,MAGrCuT,GACFb,EAAMrP,eAAe3C,wBAAwBgB,EAAY2R,GAAW9D,EAAWvP,GAAOV,EAAYiQ,GAClGmD,EAAMhR,UAAUA,EAAY2R,GAAW9D,EAAWvP,GAAOV,EAAYU,KAErE0S,EAAMrP,eAAe3C,wBAAwB4S,EAAYD,GAAW9D,EAAWvP,GAAOV,EAAYiQ,GAClGmD,EAAMhR,UAAU4R,EAAYD,GAAW9D,EAAWvP,GAAOV,EAAYU,IAEvEA,EAAOuP,GAETgE,GAAMA,QACCvT,EAAOuP,EAClB,GAGIiE,EAAqB,CACzBd,EACApT,EACAY,EACAuT,EACAlE,KAEA,MAAMsD,EAAmB,GAAZY,EACb,IAAIzT,EAAO,EACPR,EAAQU,EACZwS,EAAMpP,WAAW5D,eAAeQ,EAAa,KAAMZ,GACnD,GACMuT,EAAO,GAAK7S,GAAQ,KAAOR,GAASqT,EAAOtD,GAC7CvP,IAAS,KAAOR,GAASqT,EACzBrT,EAAQ,EACRkT,EAAMpP,WAAW5C,wBAAwB,EAAGpB,EAAYU,GACxD0S,EAAMpP,WAAW5D,eAAe,EAAGJ,EAAYU,IACtC6S,EAAO,GAAK7S,EAAOR,EAAQqT,EAAOtD,GAC3CvP,GAAQR,EAAQqT,EAChBrT,EAAQ,KACRkT,EAAMpP,WAAW5C,wBAAwB,EAAGpB,EAAYU,GACxD0S,EAAMpP,WAAW5D,eAAe,EAAGJ,EAAYU,KAE/C0S,EAAMpP,WAAW5C,yBAAyBlB,EAAQqT,GAAQtD,EAAWvP,IAAS,KAAMV,EAAYiQ,GAChGvP,EAAOuP,SAEFvP,EAAOuP,GAChBmD,EAAMpP,WAAW5D,eAAeQ,EAAa,KAAMZ,EAAYiQ,EAAS,EAGpEmE,EAAuB,CAC3BxT,EACAuT,EACAlE,EACAoE,KAEA,MAAMxT,EAAWD,EAAauT,EAAYlE,EACpChB,EAAQnO,KAAKoF,IAAIpF,KAAK8M,MAAiB,GAAXqC,GAAgB,GAC5CqE,GAAQzT,EAAWD,IAAeqO,EAAQ,GAC1CsF,EAAmB,GACzB,IAAIrU,EAAQU,EACZ,IAAK,IAAIL,EAAI,EAAGA,EAAI0O,EAAO1O,IACzBgU,EAAOxU,KAAKsU,EAAKnU,IACjBA,GAASoU,EAEX,OAAOC,CAAM,EAGTC,EAA+B,CACnCpK,EACApK,EACAY,EACAuT,EACAlE,KAEA,MAAMsD,EAAmB,GAAZY,EACb,IAAIzT,EAAO,EACPR,EAAQU,EACZwJ,EAAOnG,aAAarD,EAAYZ,GAChC,GACE,GAAIuT,EAAO,GAAK7S,GAAQ,KAAOR,GAASqT,EAAOtD,EAAU,CACvD,MAAMwE,GAAO,KAAOvU,GAASqT,EAC7BnJ,EAAOnC,cAAc7F,UAAUsS,oBAC7BN,EAAqBlU,EAAOqT,EAAMkB,EAAK,MACvCzU,EAAYU,EACZ+T,GAEFrK,EAAOlC,eAAe9F,UAAUsS,oBAC9BN,EAAqBlU,EAAOqT,EAAMkB,EAAK,MACvCzU,EAAYU,EACZ+T,GAEF,MAAME,EAAiBP,EAAqBlU,EAAOqT,EAAMkB,EAAK,MAC9DrK,EAAOjC,eAAe/F,UAAUsS,oBAAoBC,EAAgB3U,EAAYU,EAAM+T,GACtFrK,EAAOhC,mBAAmBhG,UAAUsS,oBAAoBC,EAAgB3U,EAAYU,EAAM+T,GAC1F/T,GAAQ+T,EACRvU,EAAQ,CACV,MAAO,GAAIqT,EAAO,GAAK7S,EAAOR,EAAQqT,EAAOtD,EAAU,CACrD,MAAMwE,GAAOvU,EAAQqT,EACrBnJ,EAAOnC,cAAc7F,UAAUsS,oBAC7BN,EAAqBlU,EAAOqT,EAAMkB,EAAK,MACvCzU,EAAYU,EACZ+T,GAEFrK,EAAOlC,eAAe9F,UAAUsS,oBAC9BN,EAAqBlU,EAAOqT,EAAMkB,EAAK,MACvCzU,EAAYU,EACZ+T,GAEF,MAAME,EAAiBP,EAAqBlU,EAAOqT,EAAMkB,EAAK,MAC9DrK,EAAOjC,eAAe/F,UAAUsS,oBAAoBC,EAAgB3U,EAAYU,EAAM+T,GACtFrK,EAAOhC,mBAAmBhG,UAAUsS,oBAAoBC,EAAgB3U,EAAYU,EAAM+T,GAC1F/T,GAAQ+T,EACRvU,EAAQ,IACV,KAAO,CAEL,MAAMuU,EAAMxE,EAAWvP,EAAO,KAC9B0J,EAAOnC,cAAc7F,UAAUsS,oBAC7BN,EAAqBlU,EAAOqT,EAAMkB,EAAK,MACvCzU,EAAYU,EACZ+T,GAEFrK,EAAOlC,eAAe9F,UAAUsS,oBAC9BN,EAAqBlU,EAAOqT,EAAMkB,EAAK,MACvCzU,EAAYU,EACZ+T,GAEF,MAAME,EAAiBP,EAAqBlU,EAAOqT,EAAMkB,EAAK,MAC9DrK,EAAOjC,eAAe/F,UAAUsS,oBAAoBC,EAAgB3U,EAAYU,EAAM+T,GACtFrK,EAAOhC,mBAAmBhG,UAAUsS,oBAAoBC,EAAgB3U,EAAYU,EAAM+T,GAC1F/T,EAAOuP,CACT,QACOvP,EAAOuP,GAChB7F,EAAOnG,aAAarD,EAAYZ,EAAYiQ,EAAS,EAGjD2E,EAAyB,CAC7BxK,EACApK,EACA6U,EACAC,EACAC,KAGA,MAAMC,EAAkB,EAAIH,EAC5B,IAAII,EAAcF,EAAY3Q,SAAS,YACnC,QAAgB4Q,GAChBD,EAAY3Q,SAAS,aACrB,QAAiB4Q,IACjB,QAAiBA,GAGrB,OAFAC,EAAcnU,KAAKoF,IAAIpF,KAAKqF,IAAI8O,EAAcH,EAAY,MAAO,GACjE1K,EAAOnG,aAAagR,EAAajV,GAC1BiV,CAAW,EAGdC,EAAcC,IAClB,MAAMhL,EAASgL,EAAIhL,OACnB,IAAK,IAAI5J,EAAI,EAAGA,EAAI4J,EAAO7J,OAAQC,IACjC4J,EAAO5J,GAAG2D,YAAY,GACtBiG,EAAO5J,GAAG+D,kBAAkB,GAC5B6F,EAAO5J,GAAGkE,iBAAiB,GAC3B0F,EAAO5J,GAAGoE,gBAAgB,IAC1BwF,EAAO5J,GAAGsE,mBAAmB,GAC7BsF,EAAO5J,GAAGwE,cAAc,MAE1BoQ,EAAIxK,UAAU,EAAE,EAgBZyK,EAAa,CACjBD,EACAnF,EACAhQ,KAEA,MAAMmK,EAASgL,EAAIhL,OACnB+K,EAAWC,GAEX,MAAMzI,EAAqB,CAAC,GAAI,GAAI,IAE9BzM,EAAcL,EAAaK,YACjC,IAAIoV,EAAapV,EACb+S,EAAQ,IACRpI,EAAS,EACTqI,EAAkB,GAEtB,MAAMqC,EAoBD,GACL,IAAK,IAAI/U,EAAI,EAAGA,EAAI4J,EAAO7J,OAAQC,IACjC+U,EAAWvV,KAAK,CACdwV,WAAY,CAAEnC,MAAO7S,EAAG6M,MAAO,GAC/BoI,UAAW,GACXC,IAAK,CAAEC,QAAS,CAAEtC,MAAO7S,EAAG6M,MAAO,GAAK6B,MAAO,GAC/CvO,KAAMT,EACN0V,aAAc,EACdpD,OAAQ,EACRC,UAAW,EACXoD,KAAK,EACLC,eAAgB,EAChBC,yBAA0B,EAC1B9Q,WAAY,KACZ+Q,oBAAqB,EACrBC,YAAa,EACbC,aAAc,EACd7L,OAAQ,GACR4K,gBAAiB,EACjBkB,yBAA0B,EAC1BpB,WAAY,EACZqB,MAAM,IAIV,IAAI5L,EAAa,EAEjB,MAAM6L,EAA8B,GACpC,IAAK,IAAI7V,EAAI,EAAGA,EAAIyP,EAAW1P,OAAQC,IACrC,IAAK,IAAIuO,EAAI,EAAGA,EAAIkB,EAAWzP,GAAGD,OAAQwO,IAAK,CAC7C,MAAMuH,EAAMrG,EAAWzP,GAAGuO,GACT,QAAbuH,EAAItO,MAAgBqO,EAAQrW,KAAK,CAAEqN,MAAOiJ,EAAIC,KAAKpW,MAAOwV,QAAS,CAAEtC,MAAO7S,EAAG6M,MAAO0B,IAC5F,CAGF,EAAG,CACD,IAAI,WACFyG,EAAU,UACVC,EAAS,IACTC,EAAG,KACH/U,EAAI,aACJiV,EAAY,OACZpD,EAAM,UACNC,EAAS,IACToD,EAAG,eACHC,EAAc,yBACdC,EAAwB,WACxB9Q,EAAU,oBACV+Q,EAAmB,YACnBC,EAAW,aACXC,EAAY,OACZ7L,EAAM,gBACN4K,EAAe,yBACfkB,EAAwB,WACxBpB,EAAU,KACVqB,GACEb,EAAW/K,GACf,MAAQ4L,GAAQZ,EAAWnI,MAAQ4C,EAAWuF,EAAWnC,OAAO9S,QAAUI,GAAQ2U,GAAY,CAC5F,MAAMgB,EAAMrG,EAAWuF,EAAWnC,OAAOmC,EAAWnI,OAEpD,OAAQiJ,EAAItO,MACV,IAAK,MACHiL,EAAQqD,EAAIC,KAAKpW,MACjB,MACF,IAAK,MACH+S,EAAkBoD,EAAIC,KAAKpW,MAC3B,MACF,IAAK,MACH0K,EAASyL,EAAIC,KAAKpW,MAClBiV,EAAIxK,UAAUC,EAAQ9J,KAAKoF,IAAIxF,EAAOV,EAAWC,IACjD,MACF,IAAK,MACoB,OAAnBoW,EAAIC,KAAKpW,OAAkB0K,EAAS,IAAIA,IACrB,SAAnByL,EAAIC,KAAKpW,OAAoB0K,EAAS,GAAGA,IAC7CuK,EAAIxK,UAAUC,EAAQ9J,KAAKoF,IAAIxF,EAAOV,EAAWC,IACjD,MACF,IAAK,MACHwV,EAAM,CAAEC,QAAS,IAAKH,GAActG,MAAOoH,EAAIC,KAAKpW,MAAQ,GAC5D,MACF,IAAK,MACCuV,EAAIxG,MAAQ,IACdsG,EAAa,IAAKE,EAAIC,SACtBD,EAAIxG,SAEN,MACF,IAAK,MACH,MAAMsH,EAASH,EAAQI,MAAMC,GAAQA,EAAIrJ,QAAUiJ,EAAIC,KAAKpW,QAC5D,IAAKqW,EAAQ,MAAM,IAAI5E,MAAM,0BAA0B+E,KAAKC,UAAUpB,OAAgBmB,KAAKC,UAAUN,MAErG,GADAb,EAAUzV,KAAK,CAAE2V,QAAS,IAAKH,GAAcc,IAAK,QAC9Cb,EAAUlV,OAAS,IACrB,MAAM,IAAIqR,MAAM,mBAAmB+E,KAAKC,UAAUpB,OAAgBmB,KAAKC,UAAUN,MACnFd,EAAa,IAAKgB,EAAOb,SACzB,MACF,IAAK,MAEH,GADAF,EAAUzV,KAAK,CAAE2V,QAAS,IAAKH,GAAcc,IAAK,QAC9Cb,EAAUlV,OAAS,IACrB,MAAM,IAAIqR,MAAM,mBAAmB+E,KAAKC,UAAUpB,OAAgBmB,KAAKC,UAAUN,MACnF,MACF,IAAK,MACH,GAAyB,IAArBb,EAAUlV,OACZ,MAAM,IAAIqR,MAAM,oBAAoB+E,KAAKC,UAAUpB,OAAgBmB,KAAKC,UAAUN,MACpF,MAAMX,EAAUF,EAAUlU,MACN,QAAhBoU,EAAQW,MAAed,EAAa,IAAKG,EAAQA,UACrD,MACF,IAAK,MACHtL,EAASiM,EAAIC,KAAKpW,MAAM0W,QACxBzB,EAAI/K,OAAOvB,WAAWwN,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IACjE,MACF,IAAK,MACH6U,EAAauB,EAAIC,KAAKpW,MACtB,MACF,IAAK,MACHiV,EAAI/K,OAAO9B,aAAa+N,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IACnE,MACF,IAAK,MACHkV,EAAI7K,YAAYC,EAA+B,QAAnB8L,EAAIC,KAAKpW,MAAkB,EAAI,EAAGY,KAAKoF,IAAIxF,EAAOV,EAAWC,IACzF,MACF,IAAK,MACHiW,EAA2BG,EAAIC,KAAKpW,MACpC,MACF,IAAK,MACH8U,EAAmC,EAAjBqB,EAAIC,KAAKpW,MAC3BiV,EAAI/K,OAAOnG,aAAa+Q,EAAiBlU,KAAKoF,IAAIxF,EAAOV,EAAWC,IACpE,MACF,IAAK,MAiDL,IAAK,MAML,IAAK,MAML,IAAK,MAEH,MA5DF,IAAK,MACHkK,EAAOI,GAAYjG,kBAAkB+R,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IAChF,MACF,IAAK,MACHkK,EAAOI,GAAY9F,iBAAiB4R,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IAC/E,MACF,IAAK,MACHkK,EAAOI,GAAY5F,gBAAgB0R,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IAC9E,MACF,IAAK,MACHkK,EAAOI,GAAY1F,mBAAmBwR,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IACjF,MACF,IAAK,MACH0V,EAAeU,EAAIC,KAAKpW,MACxB,MACF,IAAK,MACHiK,EAAOI,GAAYtI,SAASoU,EAAIC,KAAKpW,MAAOY,KAAKoF,IAAIxF,EAAOV,EAAWC,IACvE,MACF,IAAK,MACH+E,EAAaqR,EAAIC,KAAKpW,MACtBiK,EAAOI,GAAYxF,cAAcC,EAAYlE,KAAKoF,IAAIxF,EAAOV,EAAWC,IACxE,MACF,IAAK,MACH8V,EAAsBM,EAAIC,KAAKpW,MAC/B,MACF,IAAK,MACHiK,EAAOI,GAAYjI,KAAwB,QAAnB+T,EAAIC,KAAKpW,MAAiBY,KAAKoF,IAAIxF,EAAOV,EAAWC,IAC7E,MACF,IAAK,MACHkK,EAAOI,GAAYhI,IAAuB,QAAnB8T,EAAIC,KAAKpW,MAAiBY,KAAKoF,IAAIxF,EAAOV,EAAWC,IAC5E,MACF,IAAK,MACHgW,EAAeI,EAAIC,KAAKpW,MACxB,MACF,IAAK,MACH8V,EAAcK,EAAIC,KAAKpW,MACvB,MACF,IAAK,MACH2V,EAAiBQ,EAAIC,KAAKpW,MAC1B,MACF,IAAK,MACHqS,EAAS8D,EAAIC,KAAKpW,MAClB,MACF,IAAK,MACHsS,EAAY6D,EAAIC,KAAKpW,MACrB,MAIF,IAAK,MACHiV,EAAI1K,UAA6B,QAAnB4L,EAAIC,KAAKpW,MAAiBY,KAAKoF,IAAIxF,EAAOV,EAAWC,IACnE,MAIF,IAAK,MACHkW,GAAO,EACP,MAIF,IAAK,OACH,MAAQ/I,MAAOyJ,EAAWzU,UAAWyS,GAAkBzC,EACrDiE,EAAIC,KAAK1H,KACTyH,EAAIC,KAAKjE,SACTgE,EAAIC,KAAKhE,OACTC,EACAC,GAEIvC,EAAW6C,EAAauD,EAAIC,KAAKrG,SAAUoG,EAAIC,KAAKvD,OAAQC,EAAOC,GACrEvS,GAAQT,EAAcD,GAA+B,IAAlB6U,IACrC1B,EACEhJ,EAAOI,GACP7J,EAAOV,EACP6U,EACA5E,EACA,CAAE0D,eAAgBmC,EAA0BvC,KAAMsC,GAClD,CAAErC,MAAOyC,EAAc1C,KAAMyC,IAEH,IAAxBD,GACF7B,EAAmB/J,EAAOI,GAAa7J,EAAOV,EAAWgF,EAAY+Q,EAAqB9F,GACzE,IAAf6E,IACFE,EAAkBJ,EAAuBO,EAAI/K,OAAQ1J,EAAOV,EAAW6U,EAAeC,EAAY1K,IACnE,IAA7B8L,GACF1B,EACEW,EAAI/K,OACJ1J,EAAOV,EACPgV,EACAkB,EACAjG,GAEC2F,GAAKzL,EAAOI,GAAYnF,MAAM1E,EAAOV,GAC1C4V,EAAMS,EAAIC,KAAKV,IACVA,GAAKzL,EAAOI,GAAYjF,KAAK5E,EAAOV,EAAYc,KAAKoF,IAAI+J,EAAW0F,EAAe,GAAI,IAExFkB,GAAa,GAAKA,GAAa,IACjCnK,EAAMnC,GAAYxK,KAAK,CACrBqF,MAAO1E,EAAOT,EACdqF,KAAM5E,EAAOT,EAAca,KAAKoF,IAAI+J,EAAW0F,EAAe,GAAI,GAClEvI,MAAOyJ,KAGbnW,GAAQuP,EACR6F,EAA2BjB,EAC3B,MACF,IAAK,MACH,MAAQzS,UAAW0U,GAAiB1E,EAClCiE,EAAIC,KAAK1H,KACTyH,EAAIC,KAAKjE,SACTgE,EAAIC,KAAKhE,OACTC,EACAC,GAEFsD,EAA2BgB,EAC3B,MACF,QACElF,QAAQC,MAAM,GAAGwE,EAAItO,wBAGzBwN,EAAWnI,OACb,CACAkI,EAAW/K,GAAc,CACvBgL,aACAC,YACAC,MACA/U,OACAiV,eACApD,SACAC,YACAoD,MACAC,iBACAC,2BACA9Q,aACA+Q,sBACAC,cACAC,eACA7L,SACA4K,kBACAkB,2BACApB,aACAqB,QAEEzV,EAAO2U,IAAYA,EAAa3U,GACpC6J,IACIA,GAAcJ,EAAO7J,SAAQiK,EAAa,EAChD,OAAS+K,EAAWyB,MAAMC,IAAOA,EAAEb,MAAQa,EAAEzB,WAAWnI,MAAQ4C,EAAWgH,EAAEzB,WAAWnC,OAAO9S,UAE/F,MAAO,CAAE2P,SAAUnP,KAAK8M,MAAiE,GAA3D9M,KAAKoF,OAAOoP,EAAW2B,KAAKD,GAAMA,EAAEtW,KAAOT,MAAsB,GAAIyM,QAAO,EAK/FwK,EAAWtH,MACtBC,EACAC,KAEA,MAAMqH,QAAgB,OAASrH,IACzB,SAAEG,EAAQ,MAAEvD,GAAU0K,EAAavH,EAASsH,EAAQhN,OAAQ,GAClE,MAAO,CAAE6F,WAAYmH,EAAQhN,OAAQ8F,WAAUrD,KAAMuK,EAAQvK,KAAMF,QAAO,EAG/D0K,EAAe,CAC1BvH,EACAG,EACAhQ,KAEA,MAAMmV,EAAkB,UAAZtF,EAAsBkC,EAAWD,EAG7C,OAFAqD,EAAI5P,MAAM,GAEH6P,EAAWD,EAAKnF,EAAYhQ,EAAU,E,gEC/lB/C,MAAMqX,EAAa,CAACC,EAAeC,KACjC,KAAa,EAARD,GAAkB,CAErB,IAAIrH,EAyBA8C,EAxBJ,OAAgB,GAARuE,GACN,KAAK,EACHrH,EAAW,OACX,MACF,KAAK,GACHA,EAAW,OACX,MACF,KAAK,GACHA,EAAW,OACX,MACF,KAAK,GACHA,EAAW,MACX,MACF,KAAK,GACHA,EAAW,MACX,MACF,KAAK,GACHA,EAAW,MACX,MAEF,QACEA,EAAW,MAIf,OAAgB,IAARqH,GACN,KAAK,GACHvE,EAAS,MACT,MACF,KAAK,IACHA,EAAS,MACT,MACF,QACEA,EAAS,MAGb,MAAM6C,EAAgC,KAAR,GAAR0B,GAMtB,IAAIjF,EAgBAC,EA4BA1D,EA3CJ,OANqB,IAAR,GAAR0I,KAAmBrH,EAAW,OACd,KAAR,GAARqH,KAAoBrH,EAAW,OACd,MAAT,IAARqH,IAAsB1F,QAAQ4F,KAAK,2BAClB,MAAT,IAARF,IAAsB1F,QAAQ4F,KAAK,qCAGxB,IAARD,GACN,KAAK,IACHlF,EAAW,MACX,MACF,KAAK,IACL,QACEA,EAAW,MACX,MACF,KAAK,GACHA,EAAW,MACX,MACF,KAAK,EACHA,EAAW,MAIf,OAAgB,GAARkF,GACN,KAAK,GACHjF,EAAS,EACT,MACF,KAAK,GACHA,EAAS,EACT,MACF,KAAK,GACHA,EAAS,EACT,MACF,KAAK,GACHA,EAAS,EACT,MACF,KAAK,GACL,QACEA,EAAS,EACT,MACF,KAAK,GACHA,EAAS,EACT,MACF,KAAK,EACHA,EAAS,EACT,MACF,KAAK,EACHA,EAAS,EAIb,OAAgB,EAARiF,GACN,KAAK,EACH3I,EAAO,IACP,MACF,KAAK,EACHA,EAAO,IACP,MACF,KAAK,EACHA,EAAO,IACP,MACF,KAAK,EACHA,EAAO,IACP,MACF,KAAK,EACHA,EAAO,IACP,MACF,KAAK,EACHA,EAAO,IACP,MACF,KAAK,EACL,QACEA,EAAO,IACP,MACF,KAAK,EACHA,EAAO,MAGX,MAAO,CACL7G,KAAgB,IAAVuP,EAAc,MAAQ,OAC5BhB,KAAM,CAAErG,WAAU8C,SAAQ6C,MAAKvD,WAAUC,SAAQ1D,QAErD,CAAO,GAAc,IAAV0I,EAAa,CACtB,KAAa,GAARC,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAoB,IAAP,EAARA,GACH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAqB,IAAR,GAARA,GAGH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAc,IAAVA,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAsB,MAAT,IAARqX,GAGH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAA+B,IAAd,IAARqX,KAAiB,KAE1D,GAAsB,IAAT,IAARA,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAsB,MAAT,IAARA,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAc,KAAVA,EACF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,IAEvC,GAAc,MAAVqX,EACF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,OAEvC,GAAoB,IAAP,EAARqX,GACH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAqB,IAAR,GAARA,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAqB,IAAR,GAARA,GAAmB,CACtB,IAAIrX,EACJ,OAAgB,IAARqX,GACN,KAAK,EACHrX,EAAQ,CAAC,SACT,MACF,KAAK,GACL,QACEA,EAAQ,CAAC,YACT,MACF,KAAK,GACHA,EAAQ,CAAC,YACT,MACF,KAAK,GACHA,EAAQ,CAAC,WAAY,YACrB,MACF,KAAK,IACHA,EAAQ,CAAC,SACT,MACF,KAAK,IACHA,EAAQ,CAAC,QAAS,YAClB,MACF,KAAK,IACHA,EAAQ,CAAC,QAAS,YAClB,MACF,KAAK,IACHA,EAAQ,CAAC,QAAS,WAAY,YAIlC,MAAO,CAAE6H,KAAM,MAAOuO,KAAM,CAAEpW,SAChC,CACA,GAAqB,KAAR,GAARqX,GAAoB,CACvB,IAAIrX,EACJ,OAAgB,IAARqX,GACN,KAAK,EACL,QACErX,EAAQ,GACR,MACF,KAAK,GACHA,EAAQ,CAAC,WACT,MACF,KAAK,GACHA,EAAQ,CAAC,YACT,MACF,KAAK,GACHA,EAAQ,CAAC,UAAW,YACpB,MACF,KAAK,IACHA,EAAQ,CAAC,YACT,MACF,KAAK,IACHA,EAAQ,CAAC,WAAY,WACrB,MACF,KAAK,IACHA,EAAQ,CAAC,WAAY,YACrB,MACF,KAAK,IACHA,EAAQ,CAAC,WAAY,UAAW,YAIpC,MAAO,CAAE6H,KAAM,MAAOuO,KAAM,CAAEpW,SAChC,CACA,GAAqB,IAAR,GAARqX,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAqB,KAAR,GAARA,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAc,KAAVA,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,SAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,QAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,QAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,QAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,QAEvC,GAAc,KAAVqX,EAEF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,QAEvC,GAAc,MAAVqX,EACF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,IAEvC,GAAc,MAAVqX,EACF,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAAO,QAEvC,GAAsB,MAAT,IAARqX,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,MAA+B,IAAd,IAARqX,KAAiB,KAE1D,GAAqB,KAAR,GAARA,GAEH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,IAARqX,KAAiB,IAEzD,GAAc,KAAVA,EAEF,MAAO,CAAExP,KAAM,OAEjB,GAAc,KAAVwP,EAEF,MAAO,CAAExP,KAAM,OAEjB,GAAc,KAAVwP,EACF,MAAO,CAAExP,KAAM,OAEjB,GAAsB,KAAT,IAARwP,GACH,MAAO,CAAExP,KAAM,MAAOuO,KAAM,CAAEpW,OAAgB,GAARqX,KAAgB,IAExD,KAAsB,KAAjBA,GAAsB,CACzB,IAAIrX,EACJ,OAAgB,IAARqX,GACN,KAAK,EACL,QACErX,EAAQ,EACR,MACF,KAAK,GACHA,EAAQ,EACR,MACF,KAAK,GACHA,EAAQ,EACR,MACF,KAAK,GACHA,EAAQ,EAGZ,MAAO,CAAE6H,KAAM,MAAOuO,KAAM,CAAEpW,SAChC,CACF,KAAO,CACL,GAAqB,IAAR,GAARoX,GAEH,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,QAAiB,IAARoX,IAAgB,GAAKC,IAE9D,GAAc,IAAVD,EAEF,MAAO,CACLvP,KAAM,MACNuO,KAAM,CAAEpW,MAAOY,KAAK2W,MAAM,OAAmB,IAAVF,EAAcA,EAAQ,QAG7D,GAAc,KAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAiB,IAAVqX,EAAcA,EAAQ,MAE7D,GAAc,KAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,KAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,KAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,KAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAQqX,GAAS,IAAO,KAExD,GAAc,MAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAQqX,GAAS,IAAO,KAExD,GAAc,MAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAQqX,GAAS,IAAO,KAExD,GAAc,MAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,MAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAiB,IAAVqX,EAAcA,EAAQ,MAE7D,GAAc,MAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAQqX,GAAS,IAAO,KAExD,GAAc,MAAVD,EAKF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,OAHR,EAARqX,GAAwB,EAAL,IAGY,IAFpB,EAARA,GAAuD,GAARA,KAAgB,EAA5C,IAAc,GAARA,KAAgB,KAC/B,EAARA,EAAyC,KAAe,IAARA,KAAiB,IAArC,IAARA,KAAiB,MAG1D,GAAc,MAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,MAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,MAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,MAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,MAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,KAAVD,EAEF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,KAAVD,EACF,MAAO,CACLvP,KAAM,MACNuO,KAAM,CACJoB,QAAS,GAAa,EAARH,GACdI,YAAqB,IAARJ,KAAiB,GAAK,KAIzC,GAAc,KAAVD,EACF,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,MAAOqX,IAEvC,GAAc,KAAVD,GAA0B,KAAVA,GAA0B,MAAVA,GAA2B,MAAVA,EAEnD,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,QAAiB,IAARoX,IAAgB,GAAKC,IAE9D,GAAc,KAAVD,GAA0B,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,EAAe,CACnE,IAAIpX,GAASqX,GAAS,KAAe,IAARD,KAAiB,GAE9C,OADIC,EAAQ,MAAKrX,EAASA,GAAS,IAAO,IACnC,CACL6H,KAAM,MACNuO,KAAM,CAAEpW,SAEZ,CACA,GAAqB,KAAR,GAARoX,GAEH,MAAO,CACLvP,KAAM,MACNuO,KAAM,CACJpW,MAAgB,GAARoX,IAA6D,IAARA,IAAgB,GAAKC,EAAQ,OAApD,IAARD,IAAgB,GAAKC,IAIzD,KAAoB,GAAfD,GAEH,MAAO,CAAEvP,KAAM,MAAOuO,KAAM,CAAEpW,QAAiB,IAARoX,IAAgB,GAAKC,GAEhE,GAGWK,EAAmC,CAC9C,EAAK,OACL,EAAK,MACL,EAAK,QACL,EAAK,OACL,GAAK,KACL,GAAK,QACL,GAAM,OACN,GAAM,QACN,GAAM,OACN,GAAM,MACN,GAAM,MACN,GAAM,QACN,GAAM,MACN,GAAM,MACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,OACN,IAAM,MACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,SACN,IAAM,QACN,IAAM,MACN,IAAM,KACN,IAAM,SACN,IAAM,MACN,IAAM,OACN,IAAM,MACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,OACN,IAAM,MACN,IAAM,OACN,IAAM,MACN,IAAM,MACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IACN,IAAM,KACN,IAAM,IACN,IAAM,IAC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","sources":["webpack://sid-player/webpack/runtime/async module","webpack://sid-player/./src/C64Sid.ts","webpack://sid-player/./src/SidPlayer.ts","webpack://sid-player/./src/SidLoad.ts","webpack://sid-player/./src/SidParse.ts","webpack://sid-player/./src/Color.ts","webpack://sid-player/./src/C64CharMap.ts","webpack://sid-player/webpack/bootstrap","webpack://sid-player/webpack/runtime/define property getters","webpack://sid-player/webpack/runtime/hasOwnProperty shorthand","webpack://sid-player/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","export const FREQUENCY_FACTOR = 17734472 / 18 / 16777216; // 0.0587253835466173\n\ntype CustomAudioParamValue =\n  | { startTime: number; value: number; interpolation: 'const' }\n  | { startTime: number; startValue: number; endTime: number; endValue: number; interpolation: 'lin' }\n  | { startTime: number; startValue: number; endValue: number; timeConstant: number; interpolation: 'exp' };\nexport class CustomAudioParam {\n  private _audioContext: AudioContext;\n  private _values: Array<CustomAudioParamValue> = [];\n  private _defaultValue: number;\n\n  constructor(audioContext: AudioContext, defaultValue: number) {\n    this._audioContext = audioContext;\n    this._values.push({ startTime: audioContext.currentTime, value: defaultValue, interpolation: 'const' });\n    this._defaultValue = defaultValue;\n  }\n\n  setValueAtTime(value: number, startTime: number): CustomAudioParam {\n    if (startTime < this._values[0].startTime) {\n      this._values.unshift({ startTime, value, interpolation: 'const' });\n    } else if (startTime >= this._values[this._values.length - 1].startTime) {\n      this._values.push({ startTime, value, interpolation: 'const' });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (startTime >= this._values[i].startTime && startTime < this._values[i + 1].startTime) {\n          this._values.splice(i + 1, 0, { startTime, value, interpolation: 'const' });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  getValueAtTime(time: number): number {\n    if (time < this._values[0].startTime) return this._defaultValue;\n\n    let value: CustomAudioParamValue | undefined;\n    if (this._values.length === 1) {\n      value = this._values[0];\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (time >= this._values[i].startTime && time < this._values[i + 1].startTime) {\n          value = this._values[i];\n          break;\n        }\n      }\n      if (!value) value = this._values[this._values.length - 1];\n    }\n\n    if (value.interpolation === 'const') {\n      return value.value;\n    } else if (value.interpolation === 'lin') {\n      if (time < value.endTime) {\n        return (\n          value.startValue +\n          ((time - value.startTime) / (value.endTime - value.startTime)) * (value.endValue - value.startValue)\n        );\n      } else {\n        return value.endValue;\n      }\n    } else {\n      return (\n        value.endValue + (value.startValue - value.endValue) * Math.exp(-(time - value.startTime) / value.timeConstant)\n      );\n    }\n  }\n\n  get value(): number {\n    return this.getValueAtTime(this._audioContext.currentTime);\n  }\n\n  set value(value: number) {\n    this.setValueAtTime(value, this._audioContext.currentTime);\n  }\n\n  cancelScheduledValues(startTime: number) {\n    const deleteIndex = this._values.findIndex((value) => startTime < value.startTime);\n    if (deleteIndex >= 0) this._values.splice(deleteIndex);\n    if (this._values.length === 0)\n      this._values.push({\n        startTime: this._audioContext.currentTime,\n        value: this._defaultValue,\n        interpolation: 'const',\n      });\n  }\n\n  linearRampToValueAtTime(value: number, endTime: number): CustomAudioParam {\n    if (endTime < this._values[0].startTime) {\n      // nichts tun\n    } else if (endTime >= this._values[this._values.length - 1].startTime) {\n      const startEntry = this._values.pop()!;\n      this._values.push({\n        startTime: startEntry.startTime,\n        startValue: startEntry.interpolation === 'const' ? startEntry.value : startEntry.startValue,\n        endTime,\n        endValue: value,\n        interpolation: 'lin',\n      });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (endTime >= this._values[i].startTime && endTime < this._values[i + 1].startTime) {\n          const startEntry = this._values.splice(i, 1)[0];\n          this._values.splice(i, 0, {\n            startTime: startEntry.startTime,\n            startValue: startEntry.interpolation === 'const' ? startEntry.value : startEntry.startValue,\n            endTime,\n            endValue: value,\n            interpolation: 'lin',\n          });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  setTargetAtTime(value: number, startTime: number, timeConstant: number): CustomAudioParam {\n    if (startTime < this._values[0].startTime) {\n      this._values.unshift({\n        startTime,\n        startValue: this._defaultValue,\n        endValue: value,\n        timeConstant,\n        interpolation: 'exp',\n      });\n    } else if (startTime >= this._values[this._values.length - 1].startTime) {\n      this._values.push({\n        startTime,\n        startValue: this.getValueAtTime(startTime),\n        endValue: value,\n        timeConstant,\n        interpolation: 'exp',\n      });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (startTime >= this._values[i].startTime && startTime < this._values[i + 1].startTime) {\n          this._values.splice(i + 1, 0, {\n            startTime,\n            startValue: this.getValueAtTime(startTime),\n            endValue: value,\n            timeConstant,\n            interpolation: 'exp',\n          });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n}\n\ntype CustomGenericAudioParamValue<T> = { startTime: number; value: T };\nexport class CustomGenericAudioParam<T> {\n  private _audioContext: AudioContext;\n  private _values: Array<CustomGenericAudioParamValue<T>> = [];\n  private _defaultValue: T;\n\n  constructor(audioContext: AudioContext, defaultValue: T) {\n    this._audioContext = audioContext;\n    this._values.push({ startTime: audioContext.currentTime, value: defaultValue });\n    this._defaultValue = defaultValue;\n  }\n\n  setValueAtTime(value: T, startTime: number): CustomGenericAudioParam<T> {\n    if (startTime < this._values[0].startTime) {\n      this._values.unshift({ startTime, value });\n    } else if (startTime >= this._values[this._values.length - 1].startTime) {\n      this._values.push({ startTime, value });\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (startTime >= this._values[i].startTime && startTime < this._values[i + 1].startTime) {\n          this._values.splice(i + 1, 0, { startTime, value });\n          break;\n        }\n      }\n    }\n    return this;\n  }\n\n  getValueAtTime(time: number): T {\n    if (time < this._values[0].startTime) return this._defaultValue;\n\n    let value: CustomGenericAudioParamValue<T> | undefined;\n    if (this._values.length === 1) {\n      value = this._values[0];\n    } else {\n      for (let i = 0; i < this._values.length - 1; i++) {\n        if (time >= this._values[i].startTime && time < this._values[i + 1].startTime) {\n          value = this._values[i];\n          break;\n        }\n      }\n      if (!value) value = this._values[this._values.length - 1];\n    }\n    return value.value;\n  }\n\n  get value(): T {\n    return this.getValueAtTime(this._audioContext.currentTime);\n  }\n\n  set value(value: T) {\n    this.setValueAtTime(value, this._audioContext.currentTime);\n  }\n\n  cancelScheduledValues(startTime: number) {\n    const deleteIndex = this._values.findIndex((value) => startTime < value.startTime);\n    if (deleteIndex >= 0) this._values.splice(deleteIndex);\n    if (this._values.length === 0)\n      this._values.push({ startTime: this._audioContext.currentTime, value: this._defaultValue });\n  }\n}\n\ntype VoiceParams = {\n  waveform: AudioParam;\n  frequency: AudioParam;\n  width: AudioParam;\n  sync: AudioParam;\n  rng: AudioParam;\n};\n\nexport class SidOscillator {\n  private _audioContext: AudioContext;\n  private _oscillator: AudioWorkletNode;\n\n  constructor(audioContext: AudioContext) {\n    this._audioContext = audioContext;\n    this._oscillator = new AudioWorkletNode(audioContext, 'C64SidProcessor', {\n      numberOfInputs: 1,\n      numberOfOutputs: 3,\n      outputChannelCount: [1, 1, 1],\n      processorOptions: { sampleRate: audioContext.sampleRate },\n    });\n  }\n\n  get voice1Params(): VoiceParams {\n    return {\n      waveform: this._oscillator.parameters.get('voice1Waveform')!,\n      frequency: this._oscillator.parameters.get('voice1Frequency')!,\n      width: this._oscillator.parameters.get('voice1Width')!,\n      sync: this._oscillator.parameters.get('voice1Sync')!,\n      rng: this._oscillator.parameters.get('voice1Rng')!,\n    };\n  }\n\n  get voice2Params(): VoiceParams {\n    return {\n      waveform: this._oscillator.parameters.get('voice2Waveform')!,\n      frequency: this._oscillator.parameters.get('voice2Frequency')!,\n      width: this._oscillator.parameters.get('voice2Width')!,\n      sync: this._oscillator.parameters.get('voice2Sync')!,\n      rng: this._oscillator.parameters.get('voice2Rng')!,\n    };\n  }\n\n  get voice3Params(): VoiceParams {\n    return {\n      waveform: this._oscillator.parameters.get('voice3Waveform')!,\n      frequency: this._oscillator.parameters.get('voice3Frequency')!,\n      width: this._oscillator.parameters.get('voice3Width')!,\n      sync: this._oscillator.parameters.get('voice3Sync')!,\n      rng: this._oscillator.parameters.get('voice3Rng')!,\n    };\n  }\n\n  connect(destination: AudioNode, output: number, input?: number) {\n    this._oscillator.connect(destination, output, input);\n  }\n\n  disconnect() {\n    this._oscillator.disconnect();\n  }\n}\n\nexport type Waveform = 'triangle' | 'sawtooth' | 'pulse' | 'noise';\n\nexport class SidVoice {\n  private _audioContext: AudioContext;\n  private _adsrGain: GainNode;\n  private _waveformParameter: AudioParam;\n  private _frequencyParameter: AudioParam;\n  private _widthParameter: AudioParam;\n  private _syncParameter: AudioParam;\n  private _rngParameter: AudioParam;\n  private _attackDurationParameter: CustomAudioParam;\n  private _decayDurationParameter: CustomAudioParam;\n  private _sustainLevelParameter: CustomAudioParam;\n  private _releaseDurationParameter: CustomAudioParam;\n  private _adsrGainParameter: CustomAudioParam;\n\n  constructor(audioContext: AudioContext, voiceParams: VoiceParams) {\n    this._audioContext = audioContext;\n    this._adsrGain = new GainNode(audioContext, { gain: 0 });\n    this._waveformParameter = voiceParams.waveform;\n    this._frequencyParameter = voiceParams.frequency;\n    this._widthParameter = voiceParams.width;\n    this._syncParameter = voiceParams.sync;\n    this._rngParameter = voiceParams.rng;\n    this._attackDurationParameter = new CustomAudioParam(audioContext, 0.002);\n    this._decayDurationParameter = new CustomAudioParam(audioContext, 0.006);\n    this._sustainLevelParameter = new CustomAudioParam(audioContext, 0);\n    this._releaseDurationParameter = new CustomAudioParam(audioContext, 0.006);\n    this._adsrGainParameter = new CustomAudioParam(audioContext, 0);\n  }\n\n  get inNode(): GainNode {\n    return this._adsrGain;\n  }\n\n  get frequencyParam(): AudioParam {\n    return this._frequencyParameter;\n  }\n\n  get widthParam(): AudioParam {\n    return this._widthParameter;\n  }\n\n  /**\n   *\n   * @param value 0-65535\n   * @param startTime\n   */\n  c64Frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this.frequency(value * FREQUENCY_FACTOR, startTime);\n  }\n  /**\n   *\n   * @param value [Hz]\n   * @param startTime\n   */\n  frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this._frequencyParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64Waveform(value: number, startTime: number = this._audioContext.currentTime) {\n    this._waveformParameter.setValueAtTime(value, startTime);\n  }\n  waveform(value: Waveform[], startTime: number = this._audioContext.currentTime) {\n    const waveforms: number =\n      (value.includes('triangle') ? 1 : 0) +\n      (value.includes('sawtooth') ? 2 : 0) +\n      (value.includes('pulse') ? 4 : 0) +\n      (value.includes('noise') ? 8 : 0);\n    this.c64Waveform(waveforms, startTime);\n  }\n\n  private static timeTable: number[] = [\n    0.002, 0.008, 0.016, 0.024, 0.038, 0.056, 0.068, 0.08, 0.1, 0.25, 0.5, 0.8, 1, 3, 5, 8,\n  ];\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64AttackDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this.attackDuration(SidVoice.timeTable[value], startTime);\n  }\n  /**\n   *\n   * @param value [s]\n   * @param startTime\n   */\n  attackDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this._attackDurationParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64DecayDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this.decayDuration(SidVoice.timeTable[value] * 3, startTime);\n  }\n  /**\n   *\n   * @param value [s]\n   * @param startTime\n   */\n  decayDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this._decayDurationParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64SustainLevel(value: number, startTime: number = this._audioContext.currentTime) {\n    this.sustainLevel(value / 15, startTime);\n  }\n  /**\n   *\n   * @param value [%] 0-1\n   * @param startTime\n   */\n  sustainLevel(value: number, startTime: number = this._audioContext.currentTime) {\n    this._sustainLevelParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64ReleaseDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this.releaseDuration(SidVoice.timeTable[value] * 3, startTime);\n  }\n  /**\n   *\n   * @param value [s]\n   * @param startTime\n   */\n  releaseDuration(value: number, startTime: number = this._audioContext.currentTime) {\n    this._releaseDurationParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-4095\n   * @param startTime\n   */\n  c64PulseWidth(value: number, startTime: number = this._audioContext.currentTime) {\n    this.pulseWidth(value / 4095, startTime);\n  }\n  /**\n   *\n   * @param value [%] 0-1, 0 (only low) ... 1 (only high)\n   * @param startTime\n   */\n  pulseWidth(value: number, startTime: number = this._audioContext.currentTime) {\n    this._widthParameter.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-1\n   * @param startTime\n   */\n  c64Sync(value: number, startTime: number = this._audioContext.currentTime) {\n    this._syncParameter.setValueAtTime(value, startTime);\n  }\n  /**\n   *\n   * @param value on/off\n   * @param startTime\n   */\n  sync(value: boolean, startTime: number = this._audioContext.currentTime) {\n    this.c64Sync(Number(value), startTime);\n  }\n\n  /**\n   *\n   * @param value 0-1\n   * @param startTime\n   */\n  c64Rng(value: number, startTime: number = this._audioContext.currentTime) {\n    this._rngParameter.setValueAtTime(value, startTime);\n  }\n  /**\n   *\n   * @param value on/off\n   * @param startTime\n   */\n  rng(value: boolean, startTime: number = this._audioContext.currentTime) {\n    this.c64Rng(Number(value), startTime);\n  }\n\n  start(startTime: number = this._audioContext.currentTime) {\n    // ADSR-Envelope\n    // https://www.leafwindow.com/en/digital-piano-with-web-audio-api-5-en/\n    const attackDuration = this._attackDurationParameter.value;\n    const decayDuration = this._decayDurationParameter.value;\n    const timeConstant = 0.2452 * decayDuration;\n    const sustainLevel = this._sustainLevelParameter.value;\n    const startValue = this._adsrGainParameter.getValueAtTime(startTime);\n    // cancelScheduledValues instead of cancelAndHoldAtTime during attack phase removes the whole linearRamp\n    // cancelAndHoldAtTime without setValueAtTime during decay/release phase -> linearRamp starts at 0\n    this._adsrGain.gain.cancelAndHoldAtTime(startTime);\n    this._adsrGain.gain.setValueAtTime(startValue, startTime);\n    this._adsrGain.gain.linearRampToValueAtTime(1, startTime + attackDuration);\n    this._adsrGain.gain.setTargetAtTime(sustainLevel, startTime + attackDuration, timeConstant);\n    this._adsrGainParameter.cancelScheduledValues(startTime);\n    this._adsrGainParameter.setValueAtTime(startValue, startTime);\n    this._adsrGainParameter.linearRampToValueAtTime(1, startTime + attackDuration);\n    this._adsrGainParameter.setTargetAtTime(sustainLevel, startTime + attackDuration, timeConstant);\n  }\n\n  stop(startTime: number = this._audioContext.currentTime) {\n    const releaseDuration = this._releaseDurationParameter.value;\n    const timeConstant = 0.2452 * releaseDuration;\n    const startValue = this._adsrGainParameter.getValueAtTime(startTime);\n    this._adsrGain.gain.cancelAndHoldAtTime(startTime);\n    this._adsrGain.gain.setValueAtTime(startValue, startTime);\n    this._adsrGain.gain.setTargetAtTime(0, startTime, timeConstant);\n    this._adsrGainParameter.cancelScheduledValues(startTime);\n    this._adsrGainParameter.setValueAtTime(startValue, startTime);\n    this._adsrGainParameter.setTargetAtTime(0, startTime, timeConstant);\n  }\n\n  connect(destination: AudioNode) {\n    this._adsrGain.connect(destination);\n  }\n\n  disconnect() {\n    this._adsrGain.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._adsrGain.gain.cancelScheduledValues(startTime);\n    this._adsrGain.gain.setValueAtTime(0, startTime);\n    this._waveformParameter.cancelScheduledValues(startTime);\n    this._waveformParameter.setValueAtTime(0, startTime);\n    this._frequencyParameter.cancelScheduledValues(startTime);\n    this._frequencyParameter.setValueAtTime(0, startTime);\n    this._widthParameter.cancelScheduledValues(startTime);\n    this._widthParameter.setValueAtTime(0.5, startTime);\n    this._syncParameter.cancelScheduledValues(startTime);\n    this._syncParameter.setValueAtTime(0, startTime);\n    this._rngParameter.cancelScheduledValues(startTime);\n    this._rngParameter.setValueAtTime(0, startTime);\n    this._attackDurationParameter.cancelScheduledValues(startTime);\n    this._attackDurationParameter.setValueAtTime(0.002, startTime);\n    this._decayDurationParameter.cancelScheduledValues(startTime);\n    this._decayDurationParameter.setValueAtTime(0.006, startTime);\n    this._sustainLevelParameter.cancelScheduledValues(startTime);\n    this._sustainLevelParameter.setValueAtTime(0, startTime);\n    this._releaseDurationParameter.cancelScheduledValues(startTime);\n    this._releaseDurationParameter.setValueAtTime(0.006, startTime);\n    this._adsrGainParameter.cancelScheduledValues(startTime);\n    this._adsrGainParameter.setValueAtTime(0, startTime);\n  }\n}\n\nexport const getFilterFrequency = (value: number, y0: number, ymax: number, x0: number, mu: number) =>\n  y0 + (ymax - y0) / (1 + Math.exp(-mu * (value - x0)));\n// lowpass ccs64\nexport const getLowPassFrequency = (value: number) => getFilterFrequency(value, 253.7, 1786, 776.6, 0.01395);\n// highpass ccs64\nexport const getHighPassFrequency = (value: number) => getFilterFrequency(value, 406, 6032, 979.5, 0.0108);\n// bandpass ccs64\nexport const getBandPassFrequency = (value: number) => getFilterFrequency(value, 317.2, 2447, 838.8, 0.01555);\n\nexport const getFilterValue = (frequency: number, y0: number, ymax: number, x0: number, mu: number) => {\n  if (frequency <= y0) return 0;\n  if (frequency >= ymax) return 2047;\n  const value = x0 - Math.log((ymax - frequency) / (frequency - y0)) / mu;\n  return Math.max(Math.min(value, 2047), 0);\n};\n\n// lowpass ccs64\nexport const getLowPassValue = (frequency: number) => getFilterValue(frequency, 253.7, 1786, 776.6, 0.01395);\n// highpass ccs64\nexport const getHighPassValue = (frequency: number) => getFilterValue(frequency, 406, 6032, 979.5, 0.0108);\n// bandpass ccs64\nexport const getBandPassValue = (frequency: number) => getFilterValue(frequency, 317.2, 2447, 838.8, 0.01555);\n\nexport const getFilterResonance = (value: number, a: number, b: number, c: number, m: number, n: number) =>\n  (a * value ** 2 + b * value + c - n) / m;\n// lowpass ccs64\nexport const getLowPassResonance = (value: number) =>\n  getFilterResonance(value, -0.0142, 0.6892, -0.0047, 1.0014, -0.0762);\n// highpass ccs64\nexport const getHighPassResonance = (value: number) =>\n  getFilterResonance(value, -0.0148, 0.6794, 0.1406, 0.9393, 0.0526);\n// bandpass ccs64\nexport const getBandPassResonance = (value: number) =>\n  getFilterResonance(value, -0.0125, 0.6889, 0.0649, 1.0167, 0.2444);\n\nexport type FilterMode = 'highpass' | 'lowpass' | 'bandpass';\n\nexport class SidFilter {\n  private _audioContext: AudioContext;\n  private _inNode: GainNode;\n  private _lowPass: BiquadFilterNode;\n  private _highPass: BiquadFilterNode;\n  private _bandPass: BiquadFilterNode;\n  private _bandPassPeak: BiquadFilterNode;\n  private _outNode: GainNode;\n\n  private _in_out: GainNode;\n  private _in_low: GainNode;\n  private _in_band: GainNode;\n  private _in_high: GainNode;\n  private _low_band: GainNode;\n  private _low_high: GainNode;\n  private _band_high: GainNode;\n  private _low_out: GainNode;\n  private _band_out: GainNode;\n  private _high_out: GainNode;\n\n  constructor(audioContext: AudioContext) {\n    this._audioContext = audioContext;\n    this._inNode = new GainNode(audioContext, { gain: 1 });\n    this._lowPass = new BiquadFilterNode(audioContext, { type: 'lowpass' });\n    this._highPass = new BiquadFilterNode(audioContext, { type: 'highpass' });\n    this._bandPass = new BiquadFilterNode(audioContext, { type: 'bandpass', Q: 1 });\n    this._bandPassPeak = new BiquadFilterNode(audioContext, { type: 'peaking', Q: 1 });\n    this._outNode = new GainNode(audioContext, { gain: 1 });\n\n    this._in_out = new GainNode(audioContext, { gain: 1 });\n    this._in_low = new GainNode(audioContext, { gain: 0 });\n    this._in_band = new GainNode(audioContext, { gain: 0 });\n    this._in_high = new GainNode(audioContext, { gain: 0 });\n    this._low_band = new GainNode(audioContext, { gain: 0 });\n    this._low_high = new GainNode(audioContext, { gain: 0 });\n    this._band_high = new GainNode(audioContext, { gain: 0 });\n    this._low_out = new GainNode(audioContext, { gain: 0 });\n    this._band_out = new GainNode(audioContext, { gain: 0 });\n    this._high_out = new GainNode(audioContext, { gain: 0 });\n\n    this._inNode.connect(this._in_out);\n    this._in_out.connect(this._outNode);\n    this._inNode.connect(this._in_low);\n    this._in_low.connect(this._lowPass);\n    this._inNode.connect(this._in_band);\n    this._in_band.connect(this._bandPass);\n    this._bandPass.connect(this._bandPassPeak);\n    this._inNode.connect(this._in_high);\n    this._in_high.connect(this._highPass);\n    this._lowPass.connect(this._low_band);\n    this._low_band.connect(this._bandPass);\n    this._lowPass.connect(this._low_high);\n    this._low_high.connect(this._highPass);\n    this._bandPassPeak.connect(this._band_high);\n    this._band_high.connect(this._highPass);\n    this._lowPass.connect(this._low_out);\n    this._low_out.connect(this._outNode);\n    this._bandPassPeak.connect(this._band_out);\n    this._band_out.connect(this._outNode);\n    this._highPass.connect(this._high_out);\n    this._high_out.connect(this._outNode);\n  }\n\n  get inNode(): GainNode {\n    return this._inNode;\n  }\n\n  get lowPassFilter(): BiquadFilterNode {\n    return this._lowPass;\n  }\n\n  get highPassFilter(): BiquadFilterNode {\n    return this._highPass;\n  }\n\n  get bandPassFilter(): BiquadFilterNode {\n    return this._bandPass;\n  }\n\n  get bandPassPeakFilter(): BiquadFilterNode {\n    return this._bandPassPeak;\n  }\n\n  /**\n   *\n   * @param value 0-2047\n   * @param startTime\n   */\n  c64Frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.frequency.setValueAtTime(getHighPassFrequency(value), startTime);\n    this._lowPass.frequency.setValueAtTime(getLowPassFrequency(value), startTime);\n    const bandPassFrequency = getBandPassFrequency(value);\n    this._bandPass.frequency.setValueAtTime(bandPassFrequency, startTime);\n    this._bandPassPeak.frequency.setValueAtTime(bandPassFrequency, startTime);\n  }\n  frequency(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.frequency.setValueAtTime(value, startTime);\n    this._lowPass.frequency.setValueAtTime(value, startTime);\n    this._bandPass.frequency.setValueAtTime(value, startTime);\n    this._bandPassPeak.frequency.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64Resonance(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.Q.setValueAtTime(getHighPassResonance(value), startTime);\n    this._lowPass.Q.setValueAtTime(getLowPassResonance(value), startTime);\n    this._bandPassPeak.gain.setValueAtTime(getBandPassResonance(value), startTime);\n  }\n  resonance(value: number, startTime: number = this._audioContext.currentTime) {\n    this._highPass.Q.setValueAtTime(value, startTime);\n    this._lowPass.Q.setValueAtTime(value, startTime);\n    this._bandPassPeak.gain.setValueAtTime(value, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-7\n   * @param startTime\n   */\n  c64FilterType(value: number, startTime: number = this._audioContext.currentTime) {\n    const filterTypes: FilterMode[] = [];\n    if ((value & 1) !== 0) {\n      filterTypes.push('lowpass');\n    }\n    if ((value & 2) !== 0) {\n      filterTypes.push('bandpass');\n    }\n    if ((value & 4) !== 0) {\n      filterTypes.push('highpass');\n    }\n    this.filterType(filterTypes, startTime);\n  }\n  filterType(value: FilterMode[], startTime: number = this._audioContext.currentTime) {\n    if (value.includes('lowpass') && value.includes('bandpass') && value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(1, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(1, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else if (value.includes('lowpass') && value.includes('bandpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(1, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(1, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    } else if (value.includes('lowpass') && value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(1, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else if (value.includes('bandpass') && value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(1, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(1, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else if (value.includes('lowpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(1, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(1, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    } else if (value.includes('bandpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(1, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(1, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    } else if (value.includes('highpass')) {\n      this._in_out.gain.setValueAtTime(0, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(1, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(1, startTime);\n    } else {\n      this._in_out.gain.setValueAtTime(1, startTime);\n      this._in_low.gain.setValueAtTime(0, startTime);\n      this._in_band.gain.setValueAtTime(0, startTime);\n      this._in_high.gain.setValueAtTime(0, startTime);\n      this._low_band.gain.setValueAtTime(0, startTime);\n      this._low_high.gain.setValueAtTime(0, startTime);\n      this._band_high.gain.setValueAtTime(0, startTime);\n      this._low_out.gain.setValueAtTime(0, startTime);\n      this._band_out.gain.setValueAtTime(0, startTime);\n      this._high_out.gain.setValueAtTime(0, startTime);\n    }\n  }\n\n  connect(destination: AudioNode) {\n    this._outNode.connect(destination);\n  }\n\n  disconnect() {\n    this._outNode.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._highPass.frequency.cancelScheduledValues(startTime);\n    this._highPass.frequency.setValueAtTime(0, startTime);\n    this._highPass.Q.cancelScheduledValues(startTime);\n    this._highPass.Q.setValueAtTime(1, startTime);\n    this._lowPass.frequency.cancelScheduledValues(startTime);\n    this._lowPass.frequency.setValueAtTime(0, startTime);\n    this._lowPass.Q.cancelScheduledValues(startTime);\n    this._lowPass.Q.setValueAtTime(1, startTime);\n    this._bandPass.frequency.cancelScheduledValues(startTime);\n    this._bandPass.frequency.setValueAtTime(0, startTime);\n    this._bandPassPeak.frequency.cancelScheduledValues(startTime);\n    this._bandPassPeak.frequency.setValueAtTime(0, startTime);\n    this._bandPassPeak.gain.cancelScheduledValues(startTime);\n    this._bandPassPeak.gain.setValueAtTime(1, startTime);\n    this._in_out.gain.cancelScheduledValues(startTime);\n    this._in_out.gain.setValueAtTime(1, startTime);\n    this._in_low.gain.cancelScheduledValues(startTime);\n    this._in_low.gain.setValueAtTime(0, startTime);\n    this._in_band.gain.cancelScheduledValues(startTime);\n    this._in_band.gain.setValueAtTime(0, startTime);\n    this._in_high.gain.cancelScheduledValues(startTime);\n    this._in_high.gain.setValueAtTime(0, startTime);\n    this._low_band.gain.cancelScheduledValues(startTime);\n    this._low_band.gain.setValueAtTime(0, startTime);\n    this._low_high.gain.cancelScheduledValues(startTime);\n    this._low_high.gain.setValueAtTime(0, startTime);\n    this._band_high.gain.cancelScheduledValues(startTime);\n    this._band_high.gain.setValueAtTime(0, startTime);\n    this._low_out.gain.cancelScheduledValues(startTime);\n    this._low_out.gain.setValueAtTime(0, startTime);\n    this._band_out.gain.cancelScheduledValues(startTime);\n    this._band_out.gain.setValueAtTime(0, startTime);\n    this._high_out.gain.cancelScheduledValues(startTime);\n    this._high_out.gain.setValueAtTime(0, startTime);\n  }\n}\n\nexport class Sid {\n  private _audioContext: AudioContext;\n  private _mainGain: GainNode;\n  private _oscillator: SidOscillator;\n  private _voice1: SidVoice;\n  private _voice2: SidVoice;\n  private _voice3: SidVoice;\n  private _filter: SidFilter;\n\n  private _v1_gain: GainNode;\n  private _v1_filter: GainNode;\n  private _v1_main: GainNode;\n  private _v2_gain: GainNode;\n  private _v2_filter: GainNode;\n  private _v2_main: GainNode;\n  private _v3_gain: GainNode;\n  private _v3_switch: GainNode;\n  private _v3_filter: GainNode;\n  private _v3_main: GainNode;\n\n  constructor(audioContext: AudioContext = new AudioContext()) {\n    this._audioContext = audioContext;\n    this._mainGain = new GainNode(audioContext, { gain: 1 });\n    this._oscillator = new SidOscillator(audioContext);\n    this._voice1 = new SidVoice(audioContext, this._oscillator.voice1Params);\n    this._voice2 = new SidVoice(audioContext, this._oscillator.voice2Params);\n    this._voice3 = new SidVoice(audioContext, this._oscillator.voice3Params);\n    this._filter = new SidFilter(audioContext);\n\n    this._v1_gain = new GainNode(audioContext, { gain: 1 / 3 });\n    this._v1_filter = new GainNode(audioContext, { gain: 0 });\n    this._v1_main = new GainNode(audioContext, { gain: 1 });\n    this._v2_gain = new GainNode(audioContext, { gain: 1 / 3 });\n    this._v2_filter = new GainNode(audioContext, { gain: 0 });\n    this._v2_main = new GainNode(audioContext, { gain: 1 });\n    this._v3_gain = new GainNode(audioContext, { gain: 1 / 3 });\n    this._v3_switch = new GainNode(audioContext, { gain: 1 });\n    this._v3_filter = new GainNode(audioContext, { gain: 0 });\n    this._v3_main = new GainNode(audioContext, { gain: 1 });\n\n    this._oscillator.connect(this._voice1.inNode, 0);\n    this._voice1.connect(this._v1_gain);\n    this._v1_gain.connect(this._v1_filter);\n    this._v1_filter.connect(this._filter.inNode);\n    this._v1_gain.connect(this._v1_main);\n    this._v1_main.connect(this._mainGain);\n    this._oscillator.connect(this._voice2.inNode, 1);\n    this._voice2.connect(this._v2_gain);\n    this._v2_gain.connect(this._v2_filter);\n    this._v2_filter.connect(this._filter.inNode);\n    this._v2_gain.connect(this._v2_main);\n    this._v2_main.connect(this._mainGain);\n    this._oscillator.connect(this._voice3.inNode, 2);\n    this._voice3.connect(this._v3_switch);\n    this._v3_switch.connect(this._v3_gain);\n    this._v3_gain.connect(this._v3_filter);\n    this._v3_filter.connect(this._filter.inNode);\n    this._v3_gain.connect(this._v3_main);\n    this._v3_main.connect(this._mainGain);\n    this._filter.connect(this._mainGain);\n  }\n\n  start(): Promise<void> {\n    return this._audioContext.resume();\n  }\n\n  get voice1(): SidVoice {\n    return this._voice1;\n  }\n\n  get voice2(): SidVoice {\n    return this._voice2;\n  }\n\n  get voice3(): SidVoice {\n    return this._voice3;\n  }\n\n  get voices(): SidVoice[] {\n    return [this._voice1, this._voice2, this._voice3];\n  }\n\n  get filter(): SidFilter {\n    return this._filter;\n  }\n\n  /**\n   *\n   * @param value 0-7\n   * @param startTime\n   */\n  c64FilterVoice(value: number, startTime: number = this._audioContext.currentTime) {\n    this.filterVoice(0, (value & 1) !== 0 ? 1 : 0, startTime);\n    this.filterVoice(1, (value & 2) !== 0 ? 1 : 0, startTime);\n    this.filterVoice(2, (value & 4) !== 0 ? 1 : 0, startTime);\n  }\n  filterVoice(voiceIndex: number, value: 0 | 1, startTime: number = this._audioContext.currentTime) {\n    switch (voiceIndex) {\n      case 0:\n        this._v1_filter.gain.setValueAtTime(value, startTime);\n        this._v1_main.gain.setValueAtTime(1 - value, startTime);\n        break;\n      case 1:\n        this._v2_filter.gain.setValueAtTime(value, startTime);\n        this._v2_main.gain.setValueAtTime(1 - value, startTime);\n        break;\n      case 2:\n        this._v3_filter.gain.setValueAtTime(value, startTime);\n        this._v3_main.gain.setValueAtTime(1 - value, startTime);\n        break;\n    }\n  }\n\n  /**\n   *\n   * @param value 0-1\n   * @param startTime\n   */\n  c64Voice3Off(value: number, startTime: number = this._audioContext.currentTime) {\n    this.voice3Off(Boolean(value), startTime);\n  }\n  voice3Off(value: boolean, startTime: number = this._audioContext.currentTime) {\n    this._v3_switch.gain.setValueAtTime(value ? 0 : 1, startTime);\n  }\n\n  /**\n   *\n   * @param value 0-15\n   * @param startTime\n   */\n  c64Volume(value: number, startTime: number = this._audioContext.currentTime) {\n    this.volume(value / 15, startTime);\n  }\n  volume(value: number, startTime: number = this._audioContext.currentTime) {\n    this._mainGain.gain.setValueAtTime(value, startTime);\n  }\n\n  connect(destination: AudioNode, output?: number, input?: number) {\n    this._mainGain.connect(destination, output, input);\n  }\n\n  disconnect() {\n    this._mainGain.disconnect();\n  }\n\n  reset(startTime: number = this._audioContext.currentTime) {\n    this._mainGain.gain.cancelScheduledValues(startTime);\n    this._mainGain.gain.setValueAtTime(1, startTime);\n    this._voice1.reset(startTime);\n    this._voice2.reset(startTime);\n    this._voice3.reset(startTime);\n    this._filter.reset(startTime);\n    this._v1_gain.gain.cancelScheduledValues(startTime);\n    this._v1_gain.gain.setValueAtTime(1 / 3, startTime);\n    this._v1_filter.gain.cancelScheduledValues(startTime);\n    this._v1_filter.gain.setValueAtTime(0, startTime);\n    this._v1_main.gain.cancelScheduledValues(startTime);\n    this._v1_main.gain.setValueAtTime(1, startTime);\n    this._v2_gain.gain.cancelScheduledValues(startTime);\n    this._v2_gain.gain.setValueAtTime(1 / 3, startTime);\n    this._v2_filter.gain.cancelScheduledValues(startTime);\n    this._v2_filter.gain.setValueAtTime(0, startTime);\n    this._v2_main.gain.cancelScheduledValues(startTime);\n    this._v2_main.gain.setValueAtTime(1, startTime);\n    this._v3_gain.gain.cancelScheduledValues(startTime);\n    this._v3_gain.gain.setValueAtTime(1 / 3, startTime);\n    this._v3_switch.gain.cancelScheduledValues(startTime);\n    this._v3_switch.gain.setValueAtTime(1, startTime);\n    this._v3_filter.gain.cancelScheduledValues(startTime);\n    this._v3_filter.gain.setValueAtTime(0, startTime);\n    this._v3_main.gain.cancelScheduledValues(startTime);\n    this._v3_main.gain.setValueAtTime(1, startTime);\n  }\n}\n","import { colorTable } from './C64CharMap';\nimport { audioContext, Channel, connectMono, connectStereo, loadFile, NoteViz, reloadVoices } from './SidLoad';\nimport { Command, trans } from './SidParse';\n\nconst keyDivs: HTMLDivElement[] = [];\nfor (let i = 0; i < 96; i++) keyDivs[i] = document.getElementById(`k${i}`) as HTMLDivElement;\nconst textLines: HTMLParagraphElement[] = [];\nfor (let i = 0; i < 5; i++) textLines[i] = document.getElementById(`line${i}`) as HTMLParagraphElement;\nconst channelSelect = document.getElementById('channelSelect') as HTMLSelectElement;\nconst leftFileSelect = document.getElementById('leftFileSelect') as HTMLSelectElement;\nconst leftOpenFileLabel = document.getElementById('leftOpenFileLabel') as HTMLLabelElement;\nconst leftOpenFileInput = document.getElementById('leftOpenFile') as HTMLInputElement;\nconst leftClearButton = document.getElementById('leftClear') as HTMLButtonElement;\nconst rightFileSelect = document.getElementById('rightFileSelect') as HTMLSelectElement;\nconst rightOpenFileLabel = document.getElementById('rightOpenFileLabel') as HTMLLabelElement;\nconst rightOpenFileInput = document.getElementById('rightOpenFile') as HTMLInputElement;\nconst rightClearButton = document.getElementById('rightClear') as HTMLButtonElement;\nconst playPauseButton = document.getElementById('playPause') as HTMLButtonElement;\nconst currentSpan = document.getElementById('current') as HTMLSpanElement;\nconst timeSlider = document.getElementById('timeslider') as HTMLInputElement;\nconst durationSpan = document.getElementById('duration') as HTMLSpanElement;\n\ntype State = {\n  selectedChannel: Channel;\n  isLoading: boolean;\n  isPlaying: boolean;\n  fileSelectValueLeft: string;\n  openFileValueLeft: string;\n  durationLeft: number;\n  voicesDataLeft: Command[][];\n  durationRight: number;\n  voicesDataRight: Command[][];\n  fileSelectValueRight: string;\n  openFileValueRight: string;\n  notes: NoteViz[][];\n  currentNotes: number[];\n  text: number[];\n  startTime: number;\n  currentTime: number;\n  audioContextStartTime: number;\n};\nconst internalState: State = {\n  selectedChannel: 'left',\n  isLoading: false,\n  isPlaying: false,\n  durationLeft: 0,\n  voicesDataLeft: [],\n  fileSelectValueLeft: '',\n  openFileValueLeft: '',\n  durationRight: 0,\n  voicesDataRight: [],\n  fileSelectValueRight: '',\n  openFileValueRight: '',\n  notes: [[], [], [], [], [], []],\n  currentNotes: [-1, -1, -1, -1, -1, -1],\n  text: [],\n  startTime: 0,\n  currentTime: 0,\n  audioContextStartTime: audioContext.currentTime,\n};\nconst handler: ProxyHandler<State> = {\n  set(target: State, property: keyof State, value: any) {\n    if (property === 'currentNotes') {\n      for (let i = 0; i < 6; i++) {\n        clearKeyColor(\n          target.currentNotes[i] >= 0 && target.notes[i].length > 0 ? target.notes[i][target.currentNotes[i]].index : -1\n        );\n      }\n    }\n    if (property === 'notes') {\n      for (let i = 0; i < 6; i++) {\n        clearKeyColor(\n          target.currentNotes[i] >= 0 && target.notes[i].length > 0 ? target.notes[i][target.currentNotes[i]].index : -1\n        );\n      }\n    }\n\n    (target as any)[property] = value;\n\n    if (['notes', 'currentNotes', 'currentTime'].includes(property)) {\n      updateUiKeyboard();\n    }\n    if (['text'].includes(property)) {\n      updateUiText();\n    }\n    if (\n      [\n        'selectedChannel',\n        'fileSelectValueLeft',\n        'openFileValueLeft',\n        'fileSelectValueRight',\n        'openFileValueRight',\n      ].includes(property)\n    ) {\n      updateUiFileSelects();\n    }\n    if (\n      ['isLoading', 'isPlaying', 'durationLeft', 'voicesDataLeft', 'durationRight', 'currentTime'].includes(property)\n    ) {\n      updateUiPlayArea();\n    }\n    return true;\n  },\n};\nexport const state: State = new Proxy(internalState, handler);\n\nconst getDuration = (): number => Math.max(state.durationLeft, state.durationRight);\n\nconst getTimeString = (value: number): string => {\n  const mins = Math.floor(value / 60);\n  const secs = Math.floor(value - 60 * mins);\n  return `${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n};\n\nconst backgroundColor: string = 'rgb(255,255,255)';\nconst getColoredText = (text: string, textColor: string, reverse: boolean) => {\n  const span = document.createElement('span') as HTMLSpanElement;\n  span.style.color = reverse ? backgroundColor : textColor;\n  span.style.backgroundColor = reverse ? textColor : backgroundColor;\n  span.innerText = text;\n  return span;\n};\n\nconst getFilenameFromString = (path: string): string => path.replace(/^.*[\\\\/]/, '');\n\nconst updateUiKeyboard = () => {\n  for (let i = 0; i < 6; i++) {\n    if (state.notes[i].length !== 0) {\n      const currentTime = state.currentTime;\n      const note: NoteViz | undefined = state.currentNotes[i] >= 0 ? state.notes[i][state.currentNotes[i]] : undefined;\n      if (!note || currentTime < note.start || currentTime >= note.stop) {\n        clearKeyColor((note && note.index) || -1);\n        let index: number = -1;\n        for (let j = 0; j < state.notes[i].length; j++) {\n          if (currentTime >= state.notes[i][j].start && currentTime < state.notes[i][j].stop) {\n            index = j;\n            break;\n          }\n        }\n        internalState.currentNotes[i] = index;\n        if (index > 0) setKeyColor(state.notes[i][index].index, i);\n      }\n    }\n  }\n};\nconst updateUiText = () => {\n  for (let i = 0; i < 5; i++) textLines[i].textContent = '';\n\n  let count: number = 0;\n  let text: string = '';\n  let color: string = colorTable['blk'].rgba();\n  let reverse: boolean = false;\n\n  textLoop: for (const byte of state.text) {\n    switch (byte) {\n      case 0x0:\n        // end of text\n        if (text) textLines[count].append(getColoredText(text, color, reverse));\n        break textLoop;\n      case 0xd:\n        // new line\n        textLines[count].append(getColoredText(text, color, reverse));\n        count++;\n        text = '';\n        break;\n      case 0x5:\n        // wht\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['wht'].rgba();\n        break;\n      case 0x12:\n        // rvsOn\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        reverse = true;\n        break;\n      case 0x1c:\n        // red\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['red'].rgba();\n        break;\n      case 0x1e:\n        // grn\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['grn'].rgba();\n        break;\n      case 0x1f:\n        // blu\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['blu'].rgba();\n        break;\n      case 0x81:\n        // orng\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['orng'].rgba();\n        break;\n      case 0x90:\n        // blk\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['blk'].rgba();\n        break;\n      case 0x92:\n        // rvsOff\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        reverse = false;\n        break;\n      case 0x95:\n        // brn\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['brn'].rgba();\n        break;\n      case 0x96:\n        // lred\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['lred'].rgba();\n        break;\n      case 0x97:\n        // dgry\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['dgry'].rgba();\n        break;\n      case 0x98:\n        // mgry\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['mgry'].rgba();\n        break;\n      case 0x99:\n        // lgrn\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['lgrn'].rgba();\n        break;\n      case 0x9a:\n        // lblu\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['lblu'].rgba();\n        break;\n      case 0x9b:\n        // lgry\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['lgry'].rgba();\n        break;\n      case 0x9c:\n        // pur\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['pur'].rgba();\n        break;\n      case 0x9e:\n        // yel\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['yel'].rgba();\n        break;\n      case 0x9f:\n        // cyn\n        textLines[count].append(getColoredText(text, color, reverse));\n        text = '';\n        color = colorTable['cyn'].rgba();\n        break;\n      default:\n        text += trans[byte] || '?';\n        break;\n    }\n  }\n};\nconst updateUiFileSelects = () => {\n  leftFileSelect.style.display = state.selectedChannel === 'right' ? 'none' : 'revert';\n  leftFileSelect.value = state.fileSelectValueLeft;\n  leftOpenFileLabel.style.display = state.selectedChannel === 'right' ? 'none' : 'revert';\n  leftOpenFileLabel.textContent = state.openFileValueLeft ? getFilenameFromString(state.openFileValueLeft) : '--OPEN--';\n  !state.openFileValueLeft && (leftOpenFileInput.value = state.openFileValueLeft);\n  leftClearButton.style.display = state.selectedChannel === 'right' ? 'none' : 'revert';\n  rightFileSelect.style.display = state.selectedChannel === 'right' ? 'revert' : 'none';\n  rightFileSelect.value = state.fileSelectValueRight;\n  rightOpenFileLabel.style.display = state.selectedChannel === 'right' ? 'revert' : 'none';\n  rightOpenFileLabel.textContent = state.openFileValueRight ? getFilenameFromString(state.openFileValueRight) : '--OPEN--';\n  !state.openFileValueRight && (rightOpenFileInput.value = state.openFileValueRight);\n  rightClearButton.style.display = state.selectedChannel === 'right' ? 'revert' : 'none';\n};\nconst updateUiPlayArea = () => {\n  playPauseButton.disabled = state.voicesDataLeft.length === 0 || state.isLoading;\n  state.isPlaying ? playPauseButton.classList.add('paused') : playPauseButton.classList.remove('paused');\n  currentSpan.textContent = getTimeString(state.currentTime);\n  timeSlider.disabled = state.voicesDataLeft.length === 0 || state.isLoading;\n  timeSlider.max = String(getDuration());\n  timeSlider.value = String(state.currentTime);\n  durationSpan.textContent = getTimeString(getDuration());\n};\n\nconst loadSidFile = async (channel: Channel, file: Blob) => {\n  pause();\n  state.isLoading = true;\n  state.isPlaying = false;\n  const { voicesData, duration, text, notes } = await loadFile(channel, file);\n  if (channel === 'right') {\n    state.durationRight = duration;\n    state.voicesDataRight = voicesData;\n    state.notes = [state.notes[0], state.notes[1], state.notes[2], notes[0], notes[1], notes[2]];\n    state.currentNotes = [state.currentNotes[0], state.currentNotes[1], state.currentNotes[2], -1, -1, -1];\n    connectStereo();\n  } else {\n    state.durationLeft = duration;\n    state.voicesDataLeft = voicesData;\n    state.notes = [notes[0], notes[1], notes[2], state.notes[3], state.notes[4], state.notes[5]];\n    state.currentNotes = [-1, -1, -1, state.currentNotes[3], state.currentNotes[4], state.currentNotes[5]];\n    state.text = text;\n  }\n  state.startTime = 0;\n  state.currentTime = 0;\n  state.audioContextStartTime = audioContext.currentTime;\n  state.isLoading = false;\n};\n\nconst clear = (channel: Channel) => {\n  pause();\n  state.isLoading = false;\n  state.isPlaying = false;\n  if (channel === 'right') {\n    state.durationRight = 0;\n    state.voicesDataRight = [];\n    state.fileSelectValueRight = '';\n    state.openFileValueRight = '';\n    state.notes = [state.notes[0], state.notes[1], state.notes[2], [], [], []];\n    state.currentNotes = [state.currentNotes[0], state.currentNotes[1], state.currentNotes[2], -1, -1, -1];\n  } else {\n    state.durationLeft = 0;\n    state.voicesDataLeft = [];\n    state.fileSelectValueLeft = '';\n    state.openFileValueLeft = '';\n    state.notes = [[], [], [], state.notes[3], state.notes[4], state.notes[5]];\n    state.currentNotes = [-1, -1, -1, state.currentNotes[3], state.currentNotes[4], state.currentNotes[5]];\n    // SELECT A SID FILE\n    state.text = [\n      0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x20, 0x41, 0x20, 0x53, 0x49, 0x44, 0x20, 0x46, 0x49, 0x4c, 0x45, 0x0,\n    ];\n  }\n  state.startTime = 0;\n  state.currentTime = 0;\n  state.audioContextStartTime = audioContext.currentTime;\n};\n\nchannelSelect.onchange = (e: Event) => {\n  state.selectedChannel = (e.target as HTMLSelectElement).value as Channel;\n};\n\nleftOpenFileInput.onchange = (e: Event) => {\n  // @ts-ignore\n  const value: string = e.target.value;\n  if (value) {\n    state.openFileValueLeft = value;\n    state.fileSelectValueLeft = '';\n    // @ts-ignore\n    const file: File = e.target.files[0];\n    file && loadSidFile('left', file);\n  } else {\n    clear('left');\n  }\n};\nrightOpenFileInput.onchange = (e: Event) => {\n  // @ts-ignore\n  const value: string = e.target.value;\n  if (value) {\n    state.openFileValueRight = value;\n    state.fileSelectValueRight = '';\n    // @ts-ignore\n    const file: File = e.target.files[0];\n    file && loadSidFile('right', file);\n  } else {\n    clear('right');\n  }\n};\nleftFileSelect.onchange = async (e: Event) => {\n  // @ts-ignore\n  const value: string = e.target.value;\n  if (value) {\n    state.fileSelectValueLeft = value;\n    state.openFileValueLeft = '';\n    const response = await fetch(`sids/${value}.MUS.prg`);\n    const file = await response.blob();\n    loadSidFile('left', file);\n  } else {\n    clear('left');\n  }\n};\nrightFileSelect.onchange = async (e: Event) => {\n  // @ts-ignore\n  const value: string = e.target.value;\n  if (value) {\n    state.fileSelectValueRight = value;\n    state.openFileValueRight = '';\n    const response = await fetch(`sids/${value}.MUS.prg`);\n    const file = await response.blob();\n    loadSidFile('right', file);\n  } else {\n    clear('right');\n    connectMono();\n  }\n};\nleftClearButton.onclick = () => {\n  clear('left');\n  clear('right');\n};\nrightClearButton.onclick = () => {\n  clear('left');\n  clear('right');\n  connectMono();\n};\n\nconst clearKeyColor = (index: number) => {\n  if (index < 0 || index >= keyDivs.length) return;\n  const color = [0, 2, 4, 5, 7, 9, 11].includes(index % 12)\n    ? 'linear-gradient(to bottom, #fff, #e0e0e0)'\n    : 'linear-gradient(to bottom, #222, #000)';\n  keyDivs[index].style.background = color;\n};\nconst colorMap: { [key: number]: string } = {\n  0: '#eeee77ff',\n  1: '#664400ff',\n  2: '#cc44ccff',\n  3: '#f8f8bfff',\n  4: '#ae9158ff',\n  5: '#df97dfff',\n};\nconst setKeyColor = (index: number, voiceIndex: number) => {\n  keyDivs[index].style.background = colorMap[voiceIndex];\n};\n\nconst play = () => {\n  // @ts-ignore\n  if (!updateKeyboardInterval) updateKeyboardInterval = setInterval(updateKeyboard, 20);\n  audioContext.resume();\n};\nconst pause = () => {\n  if (updateKeyboardInterval) {\n    clearInterval(updateKeyboardInterval);\n    updateKeyboardInterval = undefined;\n  }\n  audioContext.suspend();\n};\nplayPauseButton.onclick = () => {\n  if (state.isPlaying) {\n    pause();\n    state.isPlaying = false;\n  } else {\n    play();\n    state.isPlaying = true;\n  }\n};\n\nconst reloadSidFiles = (e: MouseEvent | TouchEvent) => {\n  state.isLoading = true;\n  // @ts-ignore\n  state.startTime = Number(e.target.value);\n  // @ts-ignore\n  state.currentTime = Number(e.target.value);\n  state.audioContextStartTime = audioContext.currentTime;\n  state.voicesDataLeft.length > 0 && reloadVoices('left', state.voicesDataLeft, state.startTime);\n  state.voicesDataRight.length > 0 && reloadVoices('right', state.voicesDataRight, state.startTime);\n  state.currentNotes = [-1, -1, -1, -1, -1, -1];\n  state.isLoading = false;\n};\ntimeSlider.onmousedown = (e: MouseEvent) => {\n  pause();\n};\ntimeSlider.ontouchstart = (e: TouchEvent) => {\n  pause();\n};\ntimeSlider.oninput = (e: Event) => {\n  // @ts-ignore\n  state.currentTime = Number(e.target.value);\n};\ntimeSlider.onmouseup = (e: MouseEvent) => {\n  reloadSidFiles(e);\n  if (state.isPlaying) play();\n};\ntimeSlider.ontouchend = (e: TouchEvent) => {\n  reloadSidFiles(e);\n  if (state.isPlaying) play();\n};\n\nlet updateKeyboardInterval: number | undefined;\nconst updateKeyboard = () => {\n  state.currentTime = state.startTime + audioContext.currentTime - state.audioContextStartTime;\n  if (state.currentTime > getDuration()) {\n    pause();\n    state.isPlaying = false;\n  }\n};\n","import {\n  FilterMode,\n  FREQUENCY_FACTOR,\n  getBandPassFrequency,\n  getBandPassValue,\n  getHighPassFrequency,\n  getHighPassValue,\n  getLowPassFrequency,\n  getLowPassValue,\n  Sid as SidClass,\n  SidFilter,\n  SidVoice,\n} from './C64Sid';\nimport { Command, Dotted, Duration, Modifier, Note, Octave, parseSid } from './SidParse';\n\nexport const audioContext = new AudioContext();\nawait audioContext.audioWorklet.addModule('C64SidProcessor.js');\nawait audioContext.suspend();\n\n// check for cancelAndHoldAtTime, not implemented in Mozilla Firefox\ntry {\n  const testGain = audioContext.createGain();\n  if (typeof testGain.gain.cancelAndHoldAtTime !== 'function')\n    throw new Error('Unsupported browser: cancelAndHoldAtTime not available.');\n} catch (e) {\n  console.error('Error during feature detection:', e);\n  document.getElementById('main-content')!.style.display = 'none';\n  document.getElementById('unsupported-message')!.style.display = 'block';\n  throw e;\n}\n\nconst sidLeft = new SidClass(audioContext);\nconst sidRight = new SidClass(audioContext);\nconst merger = new ChannelMergerNode(audioContext, { numberOfInputs: 2 });\nsidLeft.connect(audioContext.destination);\n\nexport const connectMono = () => {\n  sidLeft.connect(audioContext.destination);\n  sidRight.disconnect();\n  merger.disconnect();\n};\n\nexport const connectStereo = () => {\n  sidLeft.connect(merger, 0, 0);\n  sidRight.connect(merger, 0, 1);\n  merger.connect(audioContext.destination);\n};\n\nconst calcFrequency = (\n  note: Note,\n  modifier: Modifier,\n  octave: Octave,\n  detune: number,\n  transpose: number\n): { index: number; frequency: number } => {\n  if (note === 'rst') return { index: -1, frequency: 0 };\n  const noteMap: { [key in Note]: number } = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11, rst: NaN };\n  let index: number = noteMap[note];\n  switch (modifier) {\n    case 'flt':\n      index--;\n      break;\n    case 'nat':\n    default:\n      break;\n    case 'shp':\n      index++;\n      break;\n    case 'dbl':\n      if (['g', 'f', 'd', 'c'].includes(note)) {\n        index += 2;\n      } else if (['a', 'b', 'e'].includes(note)) {\n        index -= 2;\n      }\n  }\n  index += 12 * octave;\n  index += transpose;\n  const frequency = 440 * 2 ** ((index - 57) / 12) + detune * FREQUENCY_FACTOR;\n  return { index, frequency };\n};\n\nconst calcDuration = (duration: Duration, dotted: Dotted, tempo: number, utilityDuration: number): number => {\n  let mod: number;\n  switch (duration) {\n    case 'whl':\n      mod = 4;\n      break;\n    case 'hlf':\n      mod = 2;\n      break;\n    case 'qtr':\n    default:\n      mod = 1;\n      break;\n    case '8th':\n      mod = 1 / 2;\n      break;\n    case '16th':\n      mod = 1 / 4;\n      break;\n    case '32nd':\n      mod = 1 / 8;\n      break;\n    case '64th':\n      mod = 1 / 16;\n      break;\n    case 'utl':\n      return utilityDuration / 60;\n  }\n  switch (dotted) {\n    case 'non':\n    default:\n      break;\n    case 'sgl':\n      mod *= 1.5;\n      break;\n    case 'dbl':\n      mod *= 1.75;\n      break;\n  }\n  return (60 / tempo) * mod;\n};\n\nconst setFrequencyPortamentoVibrato = (\n  voice: SidVoice,\n  startTime: number,\n  frequency: number,\n  duration: number,\n  portamento: { startFrequency: number; rate: number },\n  vibrato: { depth: number; rate: number }\n) => {\n  if (portamento.rate === 0 && vibrato.depth === 0) {\n    voice.frequency(frequency, startTime);\n  } else if (portamento.rate !== 0) {\n    const porRate = Math.sign(frequency - portamento.startFrequency) * portamento.rate * 60 * FREQUENCY_FACTOR;\n    if (Math.abs(frequency - portamento.startFrequency) >= Math.abs(porRate * duration)) {\n      const targetValue = portamento.startFrequency + porRate * duration;\n      voice.frequency(portamento.startFrequency, startTime);\n      voice.frequencyParam.linearRampToValueAtTime(targetValue, startTime + duration);\n    } else {\n      const porDuration = (frequency - portamento.startFrequency) / porRate;\n      voice.frequency(portamento.startFrequency, startTime);\n      voice.frequencyParam.linearRampToValueAtTime(frequency, startTime + porDuration);\n      if (vibrato.depth !== 0)\n        setFrequencyPortamentoVibrato(\n          voice,\n          startTime + porDuration,\n          frequency,\n          duration - porDuration,\n          { ...portamento, rate: 0 },\n          vibrato\n        );\n    }\n  } else {\n    const vibRate = vibrato.depth * 60 * FREQUENCY_FACTOR;\n    const upperFreq = frequency + vibrato.depth * FREQUENCY_FACTOR * vibrato.rate;\n    let time = 0;\n    let up = true;\n    voice.frequency(frequency, startTime);\n    do {\n      if (time + vibrato.rate / 60 < duration) {\n        time += vibrato.rate / 60;\n        if (up) {\n          voice.frequencyParam.linearRampToValueAtTime(upperFreq, startTime + time);\n          voice.frequency(upperFreq, startTime + time);\n        } else {\n          voice.frequencyParam.linearRampToValueAtTime(frequency, startTime + time);\n          voice.frequency(frequency, startTime + time);\n        }\n      } else {\n        if (up) {\n          voice.frequencyParam.linearRampToValueAtTime(frequency + vibRate * (duration - time), startTime + duration);\n          voice.frequency(frequency + vibRate * (duration - time), startTime + time);\n        } else {\n          voice.frequencyParam.linearRampToValueAtTime(upperFreq - vibRate * (duration - time), startTime + duration);\n          voice.frequency(upperFreq - vibRate * (duration - time), startTime + time);\n        }\n        time = duration;\n      }\n      up = !up;\n    } while (time < duration);\n  }\n};\n\nconst setPulseWidthSweep = (\n  voice: SidVoice,\n  startTime: number,\n  startValue: number,\n  sweepRate: number,\n  duration: number\n) => {\n  const rate = sweepRate * 60;\n  let time = 0;\n  let value = startValue;\n  voice.widthParam.setValueAtTime(startValue / 4095, startTime);\n  do {\n    if (rate > 0 && time + (4095 - value) / rate < duration) {\n      time += (4095 - value) / rate;\n      value = 0;\n      voice.widthParam.linearRampToValueAtTime(1, startTime + time);\n      voice.widthParam.setValueAtTime(0, startTime + time);\n    } else if (rate < 0 && time - value / rate < duration) {\n      time -= value / rate;\n      value = 4095;\n      voice.widthParam.linearRampToValueAtTime(0, startTime + time);\n      voice.widthParam.setValueAtTime(1, startTime + time);\n    } else {\n      voice.widthParam.linearRampToValueAtTime((value + rate * (duration - time)) / 4095, startTime + duration);\n      time = duration;\n    }\n  } while (time < duration);\n  voice.widthParam.setValueAtTime(startValue / 4095, startTime + duration);\n};\n\nconst getFilterSweepValues = (\n  startValue: number,\n  sweepRate: number,\n  duration: number,\n  calc: (value: number) => number\n): number[] => {\n  const endValue = startValue + sweepRate * duration;\n  const count = Math.max(Math.floor(duration * 60), 2);\n  const step = (endValue - startValue) / (count - 1);\n  const values: number[] = [];\n  let value = startValue;\n  for (let i = 0; i < count; i++) {\n    values.push(calc(value));\n    value += step;\n  }\n  return values;\n};\n\nconst setFilterFrequencyWidthSweep = (\n  filter: SidFilter,\n  startTime: number,\n  startValue: number,\n  sweepRate: number,\n  duration: number\n) => {\n  const rate = sweepRate * 60;\n  let time = 0;\n  let value = startValue;\n  filter.c64Frequency(startValue, startTime);\n  do {\n    if (rate > 0 && time + (2047 - value) / rate < duration) {\n      const dur = (2047 - value) / rate;\n      filter.lowPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getLowPassFrequency),\n        startTime + time,\n        dur\n      );\n      filter.highPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getHighPassFrequency),\n        startTime + time,\n        dur\n      );\n      const bandPassValues = getFilterSweepValues(value, rate, dur, getBandPassFrequency);\n      filter.bandPassFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      filter.bandPassPeakFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      time += dur;\n      value = 0;\n    } else if (rate < 0 && time - value / rate < duration) {\n      const dur = -value / rate;\n      filter.lowPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getLowPassFrequency),\n        startTime + time,\n        dur\n      );\n      filter.highPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getHighPassFrequency),\n        startTime + time,\n        dur\n      );\n      const bandPassValues = getFilterSweepValues(value, rate, dur, getBandPassFrequency);\n      filter.bandPassFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      filter.bandPassPeakFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      time += dur;\n      value = 2047;\n    } else {\n      // -0.000001 otherwise Failed to execute 'setValueAtTime' on 'AudioParam': setValueAtTime(730.956, 1.8) overlaps setValueCurveAtTime(..., 1.476253236565001, 0.3237467634349995)\n      const dur = duration - time - 0.000001;\n      filter.lowPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getLowPassFrequency),\n        startTime + time,\n        dur\n      );\n      filter.highPassFilter.frequency.setValueCurveAtTime(\n        getFilterSweepValues(value, rate, dur, getHighPassFrequency),\n        startTime + time,\n        dur\n      );\n      const bandPassValues = getFilterSweepValues(value, rate, dur, getBandPassFrequency);\n      filter.bandPassFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      filter.bandPassPeakFilter.frequency.setValueCurveAtTime(bandPassValues, startTime + time, dur);\n      time = duration;\n    }\n  } while (time < duration);\n  filter.c64Frequency(startValue, startTime + duration);\n};\n\nconst setAutoFilterFrequency = (\n  filter: SidFilter,\n  startTime: number,\n  noteFrequency: number,\n  autoFilter: number,\n  filterModes: FilterMode[]\n): number => {\n  // TODO that's probably incorrect, but difficult to determine\n  const filterFrequency = 2 * noteFrequency;\n  let filterValue = filterModes.includes('lowpass')\n    ? getLowPassValue(filterFrequency)\n    : filterModes.includes('highpass')\n    ? getHighPassValue(filterFrequency)\n    : getBandPassValue(filterFrequency);\n  filterValue = Math.max(Math.min(filterValue + autoFilter, 2047), 0);\n  filter.c64Frequency(filterValue, startTime);\n  return filterValue;\n};\n\nconst initVoices = (sid: SidClass) => {\n  const voices = sid.voices;\n  for (let i = 0; i < voices.length; i++) {\n    voices[i].c64Waveform(4);\n    voices[i].c64AttackDuration(2);\n    voices[i].c64DecayDuration(0);\n    voices[i].c64SustainLevel(15);\n    voices[i].c64ReleaseDuration(5);\n    voices[i].c64PulseWidth(2048);\n  }\n  sid.c64Volume(8);\n};\n\nconst logVoices = (voicesData: Command[][]) => {\n  for (let i = 0; i < voicesData.length; i++) {\n    for (let j = 0; j < voicesData[i].length; j++) {\n      const cmd = voicesData[i][j];\n      console.log(JSON.stringify({ voice: i, index: j }), JSON.stringify(cmd));\n    }\n  }\n};\n\ntype CommandPointer = { voice: number; index: number };\ntype PhraseDefinition = { index: number; pointer: CommandPointer };\nexport type NoteViz = { start: number; stop: number; index: number };\n\nconst loadVoices = (\n  sid: SidClass,\n  voicesData: Command[][],\n  startTime: number\n): { duration: number; notes: NoteViz[][] } => {\n  const voices = sid.voices;\n  initVoices(sid);\n\n  const notes: NoteViz[][] = [[], [], []];\n\n  const currentTime = audioContext.currentTime;\n  let globalTime = currentTime;\n  let tempo = 100;\n  let volume = 8;\n  let utilityDuration = 12;\n\n  const voicesVars: Array<{\n    cmdPointer: CommandPointer;\n    callStack: { pointer: CommandPointer; cmd: 'def' | 'cal' }[];\n    hed: { pointer: CommandPointer; count: number };\n    time: number;\n    releasePoint: number;\n    detune: number;\n    transpose: number;\n    tie: boolean;\n    portamentoRate: number;\n    portamentoStartFrequency: number;\n    pulseWidth: number;\n    pulseWidthSweepRate: number;\n    vibratoRate: number;\n    vibratoDepth: number;\n    filter: FilterMode[];\n    filterFrequency: number;\n    filterFrequencySweepRate: number;\n    autoFilter: number;\n    halt: boolean;\n  }> = [];\n  for (let i = 0; i < voices.length; i++) {\n    voicesVars.push({\n      cmdPointer: { voice: i, index: 0 },\n      callStack: [],\n      hed: { pointer: { voice: i, index: 0 }, count: 1 },\n      time: currentTime,\n      releasePoint: 4,\n      detune: 0,\n      transpose: 0,\n      tie: false,\n      portamentoRate: 0,\n      portamentoStartFrequency: 0,\n      pulseWidth: 2048,\n      pulseWidthSweepRate: 0,\n      vibratoRate: 0,\n      vibratoDepth: 0,\n      filter: [],\n      filterFrequency: 0,\n      filterFrequencySweepRate: 0,\n      autoFilter: 0,\n      halt: false,\n    });\n  }\n\n  let voiceIndex = 0;\n\n  const phrases: PhraseDefinition[] = [];\n  for (let i = 0; i < voicesData.length; i++) {\n    for (let j = 0; j < voicesData[i].length; j++) {\n      const cmd = voicesData[i][j];\n      if (cmd.type === 'def') phrases.push({ index: cmd.data.value, pointer: { voice: i, index: j } });\n    }\n  }\n\n  do {\n    let {\n      cmdPointer,\n      callStack,\n      hed,\n      time,\n      releasePoint,\n      detune,\n      transpose,\n      tie,\n      portamentoRate,\n      portamentoStartFrequency,\n      pulseWidth,\n      pulseWidthSweepRate,\n      vibratoRate,\n      vibratoDepth,\n      filter,\n      filterFrequency,\n      filterFrequencySweepRate,\n      autoFilter,\n      halt,\n    } = voicesVars[voiceIndex];\n    while (!halt && cmdPointer.index < voicesData[cmdPointer.voice].length && time <= globalTime) {\n      const cmd = voicesData[cmdPointer.voice][cmdPointer.index];\n      // console.log(JSON.stringify(voiceIndex), JSON.stringify(cmdPointer), JSON.stringify(cmd));\n      switch (cmd.type) {\n        case 'tem':\n          tempo = cmd.data.value;\n          break;\n        case 'utl':\n          utilityDuration = cmd.data.value;\n          break;\n        case 'vol':\n          volume = cmd.data.value;\n          sid.c64Volume(volume, Math.max(time - startTime, currentTime));\n          break;\n        case 'bmp':\n          if (cmd.data.value === 'up' && volume < 15) volume++;\n          if (cmd.data.value === 'down' && volume > 0) volume--;\n          sid.c64Volume(volume, Math.max(time - startTime, currentTime));\n          break;\n        case 'hed':\n          hed = { pointer: { ...cmdPointer }, count: cmd.data.value - 1 };\n          break;\n        case 'tal':\n          if (hed.count > 0) {\n            cmdPointer = { ...hed.pointer };\n            hed.count--;\n          }\n          break;\n        case 'cal':\n          const phrase = phrases.find((phr) => phr.index === cmd.data.value);\n          if (!phrase) throw new Error(`UNDEFINED PHRASE CALL: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          callStack.push({ pointer: { ...cmdPointer }, cmd: 'cal' });\n          if (callStack.length > 255)\n            throw new Error(`STACK OVERFLOW: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          cmdPointer = { ...phrase.pointer };\n          break;\n        case 'def':\n          callStack.push({ pointer: { ...cmdPointer }, cmd: 'def' });\n          if (callStack.length > 255)\n            throw new Error(`STACK OVERFLOW: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          break;\n        case 'end':\n          if (callStack.length === 0)\n            throw new Error(`STACK UNDERFLOW: ${JSON.stringify(cmdPointer)}, ${JSON.stringify(cmd)}`);\n          const pointer = callStack.pop()!;\n          if (pointer.cmd === 'cal') cmdPointer = { ...pointer.pointer };\n          break;\n        case 'f-m':\n          filter = cmd.data.value.slice();\n          sid.filter.filterType(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'aut':\n          autoFilter = cmd.data.value;\n          break;\n        case 'res':\n          sid.filter.c64Resonance(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'flt':\n          sid.filterVoice(voiceIndex, cmd.data.value === 'yes' ? 1 : 0, Math.max(time - startTime, currentTime));\n          break;\n        case 'f-s':\n          filterFrequencySweepRate = cmd.data.value;\n          break;\n        case 'f-c':\n          filterFrequency = cmd.data.value * 8;\n          sid.filter.c64Frequency(filterFrequency, Math.max(time - startTime, currentTime));\n          break;\n        case 'f-x':\n          // If you want to pass the external audio signal through the filter, use the F-X command.\n          break;\n        case 'atk':\n          voices[voiceIndex].c64AttackDuration(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'dcy':\n          voices[voiceIndex].c64DecayDuration(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'sus':\n          voices[voiceIndex].c64SustainLevel(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'rls':\n          voices[voiceIndex].c64ReleaseDuration(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'pnt':\n          releasePoint = cmd.data.value;\n          break;\n        case 'wav':\n          voices[voiceIndex].waveform(cmd.data.value, Math.max(time - startTime, currentTime));\n          break;\n        case 'p-w':\n          pulseWidth = cmd.data.value;\n          voices[voiceIndex].c64PulseWidth(pulseWidth, Math.max(time - startTime, currentTime));\n          break;\n        case 'p-s':\n          pulseWidthSweepRate = cmd.data.value;\n          break;\n        case 'snc':\n          voices[voiceIndex].sync(cmd.data.value === 'yes', Math.max(time - startTime, currentTime));\n          break;\n        case 'rng':\n          voices[voiceIndex].rng(cmd.data.value === 'yes', Math.max(time - startTime, currentTime));\n          break;\n        case 'vdp':\n          vibratoDepth = cmd.data.value;\n          break;\n        case 'vrt':\n          vibratoRate = cmd.data.value;\n          break;\n        case 'por':\n          portamentoRate = cmd.data.value;\n          break;\n        case 'dtn':\n          detune = cmd.data.value;\n          break;\n        case 'tps':\n          transpose = cmd.data.value;\n          break;\n        case 'ms#':\n          // Measure markers have no effect when a voice is played and are used strictly for editing purposes.\n          break;\n        case '3-O':\n          sid.voice3Off(cmd.data.value === 'yes', Math.max(time - startTime, currentTime));\n          break;\n        case 'flg':\n          // For communication from Sidplayer to the BASIC program, the FLG command is available.\n          break;\n        case 'hlt':\n          halt = true;\n          break;\n        case 'aux':\n          // The AUX command is reserved for possible future expansion. At present, this command is ignored by Sidplayer.\n          break;\n        case 'note':\n          const { index: noteIndex, frequency: noteFrequency } = calcFrequency(\n            cmd.data.note,\n            cmd.data.modifier,\n            cmd.data.octave,\n            detune,\n            transpose\n          );\n          const duration = calcDuration(cmd.data.duration, cmd.data.dotted, tempo, utilityDuration);\n          if (time >= currentTime + startTime && noteFrequency !== 0) {\n            setFrequencyPortamentoVibrato(\n              voices[voiceIndex],\n              time - startTime,\n              noteFrequency,\n              duration,\n              { startFrequency: portamentoStartFrequency, rate: portamentoRate },\n              { depth: vibratoDepth, rate: vibratoRate }\n            );\n            if (pulseWidthSweepRate !== 0)\n              setPulseWidthSweep(voices[voiceIndex], time - startTime, pulseWidth, pulseWidthSweepRate, duration);\n            if (autoFilter !== 0)\n              filterFrequency = setAutoFilterFrequency(sid.filter, time - startTime, noteFrequency, autoFilter, filter);\n            if (filterFrequencySweepRate !== 0)\n              setFilterFrequencyWidthSweep(\n                sid.filter,\n                time - startTime,\n                filterFrequency,\n                filterFrequencySweepRate,\n                duration\n              );\n            if (!tie) voices[voiceIndex].start(time - startTime);\n            tie = cmd.data.tie;\n            if (!tie) voices[voiceIndex].stop(time - startTime + Math.max(duration - releasePoint / 60, 0));\n            // fill notes for display during playback\n            if (noteIndex >= 0 && noteIndex <= 95)\n              notes[voiceIndex].push({\n                start: time - currentTime,\n                stop: time - currentTime + Math.max(duration - releasePoint / 60, 0),\n                index: noteIndex,\n              });\n          }\n          time += duration;\n          portamentoStartFrequency = noteFrequency;\n          break;\n        case 'abs':\n          const { frequency: absFrequency } = calcFrequency(\n            cmd.data.note,\n            cmd.data.modifier,\n            cmd.data.octave,\n            detune,\n            transpose\n          );\n          portamentoStartFrequency = absFrequency;\n          break;\n        default:\n          console.error(`${cmd.type} not implemented`);\n          break;\n      }\n      cmdPointer.index++;\n    }\n    voicesVars[voiceIndex] = {\n      cmdPointer,\n      callStack,\n      hed,\n      time,\n      releasePoint,\n      detune,\n      transpose,\n      tie,\n      portamentoRate,\n      portamentoStartFrequency,\n      pulseWidth,\n      pulseWidthSweepRate,\n      vibratoRate,\n      vibratoDepth,\n      filter,\n      filterFrequency,\n      filterFrequencySweepRate,\n      autoFilter,\n      halt,\n    };\n    if (time > globalTime) globalTime = time;\n    voiceIndex++;\n    if (voiceIndex >= voices.length) voiceIndex = 0;\n  } while (voicesVars.some((v) => !v.halt && v.cmdPointer.index < voicesData[v.cmdPointer.voice].length));\n\n  return { duration: Math.floor(Math.max(...voicesVars.map((v) => v.time - currentTime)) * 10) / 10, notes };\n};\n\nexport type Channel = 'left' | 'right';\n\nexport const loadFile = async (\n  channel: Channel,\n  file: Blob\n): Promise<{ voicesData: Command[][]; duration: number; text: number[]; notes: NoteViz[][] }> => {\n  const sidData = await parseSid(file);\n  const { duration, notes } = reloadVoices(channel, sidData.voices, 0);\n  return { voicesData: sidData.voices, duration, text: sidData.text, notes };\n};\n\nexport const reloadVoices = (\n  channel: Channel,\n  voicesData: Command[][],\n  startTime: number\n): { duration: number; notes: NoteViz[][] } => {\n  const sid = channel === 'right' ? sidRight : sidLeft;\n  sid.reset(0);\n  // logVoices(voicesData);\n  return loadVoices(sid, voicesData, startTime);\n};\n","export type Duration = 'whl' | 'hlf' | 'qtr' | '8th' | '16th' | '32nd' | '64th' | 'utl' | 'utv';\nexport type Dotted = 'non' | 'sgl' | 'dbl';\nexport type Modifier = 'flt' | 'nat' | 'shp' | 'dbl';\nexport type Octave = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\nexport type Note = 'c' | 'd' | 'e' | 'f' | 'g' | 'a' | 'b' | 'rst';\nexport type Waveform = 'pulse' | 'triangle' | 'sawtooth' | 'noise';\nexport type FilterMode = 'lowpass' | 'bandpass' | 'highpass';\nexport type Command =\n  | { type: 'tal' | 'end' | 'hlt' }\n  | {\n      type: 'abs' | 'note';\n      data: {\n        duration: Duration;\n        dotted: Dotted;\n        tie: boolean;\n        modifier: Modifier;\n        octave: Octave;\n        note: Note;\n      };\n    }\n  | {\n      type:\n        | 'dcy'\n        | 'rup'\n        | 'cal'\n        | 'def'\n        | 'atk'\n        | 'sus'\n        | 'lfo'\n        | 'rdn'\n        | 'rls'\n        | 'res'\n        | 'vol'\n        | 'src'\n        | 'dst'\n        | 'p-w'\n        | 'tem'\n        | 'utl'\n        | 'pnt'\n        | 'hed'\n        | 'flg'\n        | 'p-s'\n        | 'f-s'\n        | 'sca'\n        | 'vdp'\n        | 'vrt'\n        | 'aut'\n        | 'aux'\n        | 'pvd'\n        | 'pvr'\n        | 'max'\n        | 'utv'\n        | 'f-c'\n        | 'hld'\n        | 'ms#'\n        | 'jif'\n        | 'dtn'\n        | 'por'\n        | 'tps';\n      data: { value: number };\n    }\n  | { type: 'bmp'; data: { value: 'up' | 'down' } }\n  | {\n      type: 'flt' | 'rng' | 'snc' | 'f-x' | 'p&v' | '3-O';\n      data: { value: 'yes' | 'no' };\n    }\n  | { type: 'wav'; data: { value: Waveform[] } }\n  | { type: 'f-m'; data: { value: FilterMode[] } }\n  | { type: 'rtp'; data: { octaves: number; halfsteps: number } };\n\nconst getCommand = (byte1: number, byte2: number): Command | undefined => {\n  if ((byte1 & 3) === 0) {\n    // Note\n    let duration: Duration;\n    switch (byte1 & 31) {\n      case 0:\n        duration = '64th';\n        break;\n      case 28:\n        duration = '32nd';\n        break;\n      case 24:\n        duration = '16th';\n        break;\n      case 20:\n        duration = '8th';\n        break;\n      case 16:\n        duration = 'qtr';\n        break;\n      case 12:\n        duration = 'hlf';\n        break;\n      case 8:\n      default:\n        duration = 'whl';\n        break;\n    }\n    let dotted: Dotted;\n    switch (byte1 & 163) {\n      case 32:\n        dotted = 'sgl';\n        break;\n      case 160:\n        dotted = 'dbl';\n        break;\n      default:\n        dotted = 'non';\n        break;\n    }\n    const tie: boolean = (byte1 & 67) === 64;\n    if ((byte1 & 63) === 4) duration = 'utl';\n    if ((byte1 & 63) === 36) duration = 'utv';\n    if ((byte1 & 163) === 128) console.warn('triplet not implemented');\n    if ((byte1 & 191) === 160) console.warn('triplet 64th note not implemented');\n\n    let modifier: Modifier;\n    switch (byte2 & 192) {\n      case 192:\n        modifier = 'flt';\n        break;\n      case 128:\n      default:\n        modifier = 'nat';\n        break;\n      case 64:\n        modifier = 'shp';\n        break;\n      case 0:\n        modifier = 'dbl';\n        break;\n    }\n    let octave: Octave;\n    switch (byte2 & 56) {\n      case 56:\n        octave = 0;\n        break;\n      case 48:\n        octave = 1;\n        break;\n      case 40:\n        octave = 2;\n        break;\n      case 32:\n        octave = 3;\n        break;\n      case 24:\n      default:\n        octave = 4;\n        break;\n      case 16:\n        octave = 5;\n        break;\n      case 8:\n        octave = 6;\n        break;\n      case 0:\n        octave = 7;\n        break;\n    }\n    let note: Note;\n    switch (byte2 & 7) {\n      case 7:\n        note = 'b';\n        break;\n      case 6:\n        note = 'a';\n        break;\n      case 5:\n        note = 'g';\n        break;\n      case 4:\n        note = 'f';\n        break;\n      case 3:\n        note = 'e';\n        break;\n      case 2:\n        note = 'd';\n        break;\n      case 1:\n      default:\n        note = 'c';\n        break;\n      case 0:\n        note = 'rst';\n        break;\n    }\n    return {\n      type: byte1 === 0 ? 'abs' : 'note',\n      data: { duration, dotted, tie, modifier, octave, note },\n    };\n  } else if (byte1 === 1) {\n    if ((byte2 & 15) === 0) {\n      // Decay rate 0-15, default 0\n      return { type: 'dcy', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if ((byte2 & 7) === 1) {\n      return { type: 'rup', data: { value: (byte2 & 248) >>> 3 } };\n    }\n    if ((byte2 & 15) === 2) {\n      // Call phrase 0-15, not defined phrase -> UNDEFINED PHRASE CALL, nesting possible 4 times\n      // more -> STACK OVERFLOW, calling phrases from a different voice is possible\n      return { type: 'cal', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if (byte2 === 3) {\n      // Increase volume\n      return { type: 'bmp', data: { value: 'up' } };\n    }\n    if (byte2 === 19) {\n      // Filter voice\n      return { type: 'flt', data: { value: 'no' } };\n    }\n    if (byte2 === 35) {\n      // Ring modulation off\n      return { type: 'rng', data: { value: 'no' } };\n    }\n    if (byte2 === 51) {\n      // Synchronisation off\n      return { type: 'snc', data: { value: 'no' } };\n    }\n    if (byte2 === 67) {\n      // Filter external audio off\n      return { type: 'f-x', data: { value: 'no' } };\n    }\n    if (byte2 === 83) {\n      // Voice 3 on\n      return { type: '3-O', data: { value: 'no' } };\n    }\n    if ((byte2 & 143) === 131) {\n      // Define phrase 0-15, phrases can be defined inside another, phrase definition is 1\n      // nesting level, phrases can be redefined\n      return { type: 'def', data: { value: ((byte2 & 240) >>> 4) + 8 } };\n    }\n    if ((byte2 & 135) === 4) {\n      // Attack rate 0-15, default 2\n      return { type: 'atk', data: { value: (byte2 & 120) >>> 3 } };\n    }\n    if ((byte2 & 135) === 132) {\n      // Sustain level 0-15, default 15\n      return { type: 'sus', data: { value: (byte2 & 120) >>> 3 } };\n    }\n    if (byte2 === 99) {\n      return { type: 'lfo', data: { value: 0 } };\n    }\n    if (byte2 === 115) {\n      return { type: 'p&v', data: { value: 'no' } };\n    }\n    if ((byte2 & 7) === 5) {\n      return { type: 'rdn', data: { value: (byte2 & 248) >>> 3 } };\n    }\n    if ((byte2 & 15) === 6) {\n      // Define phrase 0-15\n      return { type: 'def', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if ((byte2 & 31) === 7) {\n      let value: Waveform[];\n      switch (byte2 & 224) {\n        case 0:\n          value = ['noise'];\n          break;\n        case 32:\n        default:\n          value = ['triangle'];\n          break;\n        case 64:\n          value = ['sawtooth'];\n          break;\n        case 96:\n          value = ['triangle', 'sawtooth'];\n          break;\n        case 128:\n          value = ['pulse'];\n          break;\n        case 160:\n          value = ['pulse', 'triangle'];\n          break;\n        case 192:\n          value = ['pulse', 'sawtooth'];\n          break;\n        case 224:\n          value = ['pulse', 'triangle', 'sawtooth'];\n          break;\n      }\n      // Waveform, default pulse\n      return { type: 'wav', data: { value } };\n    }\n    if ((byte2 & 31) === 23) {\n      let value: FilterMode[];\n      switch (byte2 & 224) {\n        case 0:\n        default:\n          value = [];\n          break;\n        case 32:\n          value = ['lowpass'];\n          break;\n        case 64:\n          value = ['bandpass'];\n          break;\n        case 96:\n          value = ['lowpass', 'bandpass'];\n          break;\n        case 128:\n          value = ['highpass'];\n          break;\n        case 160:\n          value = ['highpass', 'lowpass'];\n          break;\n        case 192:\n          value = ['highpass', 'bandpass'];\n          break;\n        case 224:\n          value = ['highpass', 'lowpass', 'bandpass'];\n          break;\n      }\n      // Filter mode\n      return { type: 'f-m', data: { value } };\n    }\n    if ((byte2 & 15) === 8) {\n      // Release rate 0-15, default 5\n      return { type: 'rls', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if ((byte2 & 15) === 10) {\n      // Filter resonance 0-15\n      return { type: 'res', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if (byte2 === 11) {\n      // Decrease volume\n      return { type: 'bmp', data: { value: 'down' } };\n    }\n    if (byte2 === 27) {\n      // Filter voice\n      return { type: 'flt', data: { value: 'yes' } };\n    }\n    if (byte2 === 43) {\n      // Ring modulation on\n      return { type: 'rng', data: { value: 'yes' } };\n    }\n    if (byte2 === 59) {\n      // Synchronisation on\n      return { type: 'snc', data: { value: 'yes' } };\n    }\n    if (byte2 === 75) {\n      // Filter external audio on\n      return { type: 'f-x', data: { value: 'yes' } };\n    }\n    if (byte2 === 91) {\n      // Voice 3 off\n      return { type: '3-O', data: { value: 'yes' } };\n    }\n    if (byte2 === 107) {\n      return { type: 'lfo', data: { value: 1 } };\n    }\n    if (byte2 === 123) {\n      return { type: 'p&v', data: { value: 'yes' } };\n    }\n    if ((byte2 & 143) === 139) {\n      // Call phrase 0-15\n      return { type: 'cal', data: { value: ((byte2 & 240) >>> 4) + 8 } };\n    }\n    if ((byte2 & 15) === 14) {\n      // Volume 0-15, default 8\n      return { type: 'vol', data: { value: (byte2 & 240) >>> 4 } };\n    }\n    if (byte2 === 15) {\n      // Repeat tail, tal without previous hed -> infinite loop to most recent hed/beginning\n      return { type: 'tal' };\n    }\n    if (byte2 === 47) {\n      // End phrase, end without previous def -> STACK UNDERFLOW\n      return { type: 'end' };\n    }\n    if (byte2 === 79) {\n      return { type: 'hlt' };\n    }\n    if ((byte2 & 159) === 31) {\n      return { type: 'src', data: { value: (byte2 & 96) >>> 5 } };\n    }\n    if ((byte2 & 143) === 143) {\n      let value: number;\n      switch (byte2 & 112) {\n        case 0:\n        default:\n          value = 0;\n          break;\n        case 32:\n          value = 1;\n          break;\n        case 80:\n          value = 2;\n          break;\n        case 96:\n          value = 3;\n          break;\n      }\n      return { type: 'dst', data: { value } };\n    }\n  } else {\n    if ((byte1 & 15) === 2) {\n      // Pulse width 0-4095, default 2048\n      return { type: 'p-w', data: { value: ((byte1 & 240) << 4) + byte2 } };\n    }\n    if (byte1 === 6) {\n      // Tempo 56-900, default 100\n      return {\n        type: 'tem',\n        data: { value: Math.trunc(14400 / (byte2 !== 0 ? byte2 : 256)) },\n      };\n    }\n    if (byte1 === 22) {\n      // Utility duration 1-256, default 12\n      return { type: 'utl', data: { value: byte2 !== 0 ? byte2 : 256 } };\n    }\n    if (byte1 === 38) {\n      // Release point 0-255, default 4\n      return { type: 'pnt', data: { value: byte2 } };\n    }\n    if (byte1 === 54) {\n      // Repeat head 0-255, 0 -> infinite, no nesting of hed/tal\n      return { type: 'hed', data: { value: byte2 } };\n    }\n    if (byte1 === 70) {\n      return { type: 'flg', data: { value: byte2 } };\n    }\n    if (byte1 === 86) {\n      // Pulse width sweeping -127-127\n      return { type: 'p-s', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 102) {\n      // Filter sweep -127-127\n      return { type: 'f-s', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 110) {\n      return { type: 'sca', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 118) {\n      // Vibrato depth 0-255\n      return { type: 'vdp', data: { value: byte2 } };\n    }\n    if (byte1 === 134) {\n      // Vibrato rate 1-256\n      return { type: 'vrt', data: { value: byte2 !== 0 ? byte2 : 256 } };\n    }\n    if (byte1 === 150) {\n      // Auto filter voice -127-127\n      return { type: 'aut', data: { value: (byte2 << 24) >> 24 } };\n    }\n    if (byte1 === 166) {\n      // Transpose -95-95\n      const sign = (byte2 & 1) === 0 ? 1 : -1;\n      const octaves = (byte2 & 1) === 0 ? 7 - ((byte2 & 14) >>> 1) : (byte2 & 14) >>> 1;\n      const halfsteps = (byte2 & 1) === 0 ? (byte2 & 240) >>> 4 : 11 - ((byte2 & 240) >>> 4);\n      return { type: 'tps', data: { value: sign * (12 * octaves + halfsteps) } };\n    }\n    if (byte1 === 182) {\n      // ignored\n      return { type: 'aux', data: { value: byte2 } };\n    }\n    if (byte1 === 198) {\n      return { type: 'pvd', data: { value: byte2 } };\n    }\n    if (byte1 === 214) {\n      return { type: 'pvr', data: { value: byte2 } };\n    }\n    if (byte1 === 230) {\n      return { type: 'max', data: { value: byte2 } };\n    }\n    if (byte1 === 246) {\n      return { type: 'utv', data: { value: byte2 } };\n    }\n    if (byte1 === 14) {\n      // Filter cutoff 0-255\n      return { type: 'f-c', data: { value: byte2 } };\n    }\n    if (byte1 === 46) {\n      return {\n        type: 'rtp',\n        data: {\n          octaves: 3 - (byte2 & 7),\n          halfsteps: ((byte2 & 248) >>> 3) - 11,\n        },\n      };\n    }\n    if (byte1 === 78) {\n      return { type: 'hld', data: { value: byte2 } };\n    }\n    if (byte1 === 30 || byte1 === 94 || byte1 === 158 || byte1 === 222) {\n      // Measure 0-999\n      return { type: 'ms#', data: { value: ((byte1 & 192) << 2) + byte2 } };\n    }\n    if (byte1 === 62 || byte1 === 126 || byte1 === 190 || byte1 === 254) {\n      let value = (byte2 << 2) + ((byte1 & 192) >>> 6);\n      if (byte2 > 192) value = (value << 22) >> 22;\n      return {\n        type: 'jif',\n        data: { value },\n      };\n    }\n    if ((byte1 & 15) === 10) {\n      // Detune -2047-2047\n      return {\n        type: 'dtn',\n        data: {\n          value: (byte1 & 16) === 0 ? ((byte1 & 224) << 3) + byte2 : ((byte1 & 224) << 3) + byte2 - 2048,\n        },\n      };\n    }\n    if ((byte1 & 3) === 3) {\n      // Portamento\n      return { type: 'por', data: { value: ((byte1 & 252) << 6) + byte2 } };\n    }\n  }\n};\n\nexport const trans: { [key: number]: string } = {\n  0x3: 'stop',\n  0x5: 'wht',\n  0x8: 'shOff',\n  0x9: 'shOn',\n  0xd: '\\n',\n  0xe: 'lCase',\n  0x11: 'down',\n  0x12: 'rvsOn',\n  0x13: 'home',\n  0x14: 'del',\n  0x1c: 'red',\n  0x1d: 'right',\n  0x1e: 'grn',\n  0x1f: 'blu',\n  0x20: ' ',\n  0x21: '!',\n  0x22: '\"',\n  0x23: '#',\n  0x24: '$',\n  0x25: '%',\n  0x26: '&',\n  0x27: \"'\",\n  0x28: '(',\n  0x29: ')',\n  0x2a: '*',\n  0x2b: '+',\n  0x2c: ',',\n  0x2d: '-',\n  0x2e: '.',\n  0x2f: '/',\n  0x30: '0',\n  0x31: '1',\n  0x32: '2',\n  0x33: '3',\n  0x34: '4',\n  0x35: '5',\n  0x36: '6',\n  0x37: '7',\n  0x38: '8',\n  0x39: '9',\n  0x3a: ':',\n  0x3b: ';',\n  0x3c: '<',\n  0x3d: '=',\n  0x3e: '>',\n  0x3f: '?',\n  0x40: '@',\n  0x41: 'A',\n  0x42: 'B',\n  0x43: 'C',\n  0x44: 'D',\n  0x45: 'E',\n  0x46: 'F',\n  0x47: 'G',\n  0x48: 'H',\n  0x49: 'I',\n  0x4a: 'J',\n  0x4b: 'K',\n  0x4c: 'L',\n  0x4d: 'M',\n  0x4e: 'N',\n  0x4f: 'O',\n  0x50: 'P',\n  0x51: 'Q',\n  0x52: 'R',\n  0x53: 'S',\n  0x54: 'T',\n  0x55: 'U',\n  0x56: 'V',\n  0x57: 'W',\n  0x58: 'X',\n  0x59: 'Y',\n  0x5a: 'Z',\n  0x5b: '[',\n  0x5c: '£',\n  0x5d: ']',\n  0x5e: '↑',\n  0x5f: '←',\n  0x60: '─',\n  0x61: '♠',\n  0x62: '│',\n  0x63: '─',\n  0x64: '\\u{1fb77}',\n  0x65: '\\u{1fb76}',\n  0x66: '\\u{1fb7a}',\n  0x67: '\\u{1fb71}',\n  0x68: '\\u{1fb74}',\n  0x69: '╮',\n  0x6a: '╰',\n  0x6b: '╯',\n  0x6c: '\\u{1fb7c}',\n  0x6d: '╲',\n  0x6e: '╱',\n  0x6f: '\\u{1fb7d}',\n  0x70: '\\u{1fb7e}',\n  0x71: '•',\n  0x72: '\\u{1fb7b}',\n  0x73: '♥',\n  0x74: '\\u{1fb70}',\n  0x75: '╭',\n  0x76: '╳',\n  0x77: '○',\n  0x78: '♣',\n  0x79: '\\u{1fb75}',\n  0x7a: '♦',\n  0x7b: '┼',\n  0x7c: '\\u{1fb8c}',\n  0x7d: '│',\n  0x7e: 'π',\n  0x7f: '◥',\n  0x81: 'orng',\n  0x83: 'run',\n  0x85: 'f1',\n  0x86: 'f3',\n  0x87: 'f5',\n  0x88: 'f7',\n  0x89: 'f2',\n  0x8a: 'f4',\n  0x8b: 'f6',\n  0x8c: 'f8',\n  0x8d: 'shRtrn',\n  0x8e: 'uCase',\n  0x90: 'blk',\n  0x91: 'up',\n  0x92: 'rvsOff',\n  0x93: 'clr',\n  0x94: 'inst',\n  0x95: 'brn',\n  0x96: 'lred',\n  0x97: 'dgry',\n  0x98: 'mgry',\n  0x99: 'lgrn',\n  0x9a: 'lblu',\n  0x9b: 'lgry',\n  0x9c: 'pur',\n  0x9d: 'left',\n  0x9e: 'yel',\n  0x9f: 'cyn',\n  0xa0: ' ',\n  0xa1: '▌',\n  0xa2: '▄',\n  0xa3: '▔',\n  0xa4: '▁',\n  0xa5: '▎',\n  0xa6: '▒',\n  0xa7: '\\u{1fb87}',\n  0xa8: '\\u{1fb8f}',\n  0xa9: '◤',\n  0xaa: '\\u{1fb87}',\n  0xab: '├',\n  0xac: '▗',\n  0xad: '└',\n  0xae: '┐',\n  0xaf: '▂',\n  0xb0: '┌',\n  0xb1: '┴',\n  0xb2: '┬',\n  0xb3: '┤',\n  0xb4: '▎',\n  0xb5: '▍',\n  0xb6: '\\u{1fb88}',\n  0xb7: '\\u{1fb82}',\n  0xb8: '\\u{1fb83}',\n  0xb9: '▃',\n  0xba: '\\u{1fb7f}',\n  0xbb: '▖',\n  0xbc: '▝',\n  0xbd: '┘',\n  0xbe: '▘',\n  0xbf: '▚',\n  0xc0: '─',\n  0xc1: '♠',\n  0xc2: '│',\n  0xc3: '─',\n  0xc4: '\\u{1fb77}',\n  0xc5: '\\u{1fb76}',\n  0xc6: '\\u{1fb7a}',\n  0xc7: '\\u{1fb71}',\n  0xc8: '\\u{1fb74}',\n  0xc9: '╮',\n  0xca: '╰',\n  0xcb: '╯',\n  0xcc: '\\u{1fb7c}',\n  0xcd: '╲',\n  0xce: '╱',\n  0xcf: '\\u{1fb7d}',\n  0xd0: '\\u{1fb7e}',\n  0xd1: '•',\n  0xd2: '\\u{1fb7b}',\n  0xd3: '♥',\n  0xd4: '\\u{1fb70}',\n  0xd5: '╭',\n  0xd6: '╳',\n  0xd7: '○',\n  0xd8: '♣',\n  0xd9: '\\u{1fb75}',\n  0xda: '♦',\n  0xdb: '┼',\n  0xdc: '\\u{1fb8c}',\n  0xdd: '│',\n  0xde: 'π',\n  0xdf: '◥',\n  0xe0: ' ',\n  0xe1: '▌',\n  0xe2: '▄',\n  0xe3: '▔',\n  0xe4: '▁',\n  0xe5: '▎',\n  0xe6: '▒',\n  0xe7: '\\u{1fb87}',\n  0xe8: '\\u{1fb8f}',\n  0xe9: '◤',\n  0xea: '\\u{1fb87}',\n  0xeb: '├',\n  0xec: '▗',\n  0xed: '└',\n  0xee: '┐',\n  0xef: '▂',\n  0xf0: '┌',\n  0xf1: '┴',\n  0xf2: '┬',\n  0xf3: '┤',\n  0xf4: '▎',\n  0xf5: '▍',\n  0xf6: '\\u{1fb88}',\n  0xf7: '\\u{1fb82}',\n  0xf8: '\\u{1fb83}',\n  0xf9: '▃',\n  0xfa: '\\u{1fb7f}',\n  0xfb: '▖',\n  0xfc: '▝',\n  0xfd: '┘',\n  0xfe: '▘',\n  0xff: 'π',\n};\n\nconst readFileAsArrayBuffer = async (blob: Blob): Promise<ArrayBuffer> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(blob);\n  });\n\nexport const parseSid = async (blob: Blob): Promise<{ voices: Command[][]; text: number[] }> => {\n  const buffer = new DataView(await readFileAsArrayBuffer(blob));\n\n  let i = 0;\n  const startAddress = buffer.getUint16(i, true);\n  i += 2;\n  const voice1Length = buffer.getUint16(i, true);\n  i += 2;\n  const voice2Length = buffer.getUint16(i, true);\n  i += 2;\n  const voice3Length = buffer.getUint16(i, true);\n  i += 2;\n  const voice1Index = 8;\n  const voice2Index = voice1Index + voice1Length;\n  const voice3Index = voice2Index + voice2Length;\n  const textIndex = voice3Index + voice3Length;\n\n  const voice1: Command[] = [];\n  for (let i = voice1Index; i < voice2Index; i += 2) {\n    const byte1 = buffer.getUint8(i);\n    const byte2 = buffer.getUint8(i + 1);\n    const cmd = getCommand(byte1, byte2);\n    if (!cmd) {\n      console.error(`unknown command, voiceindex 0, index ${voice1.length}, byte1 ${byte1}, byte2 ${byte2}`);\n      break;\n    }\n    voice1.push(cmd);\n  }\n\n  const voice2: Command[] = [];\n  for (let i = voice2Index; i < voice3Index; i += 2) {\n    const byte1 = buffer.getUint8(i);\n    const byte2 = buffer.getUint8(i + 1);\n    const cmd = getCommand(byte1, byte2);\n    if (!cmd) {\n      console.error(`unknown command, voiceindex 1, index ${voice2.length}, byte1 ${byte1}, byte2 ${byte2}`);\n      break;\n    }\n    voice2.push(cmd);\n  }\n\n  const voice3: Command[] = [];\n  for (let i = voice3Index; i < textIndex; i += 2) {\n    const byte1 = buffer.getUint8(i);\n    const byte2 = buffer.getUint8(i + 1);\n    const cmd = getCommand(byte1, byte2);\n    if (!cmd) {\n      console.error(`unknown command, voiceindex 2, index ${voice3.length}, byte1 ${byte1}, byte2 ${byte2}`);\n      break;\n    }\n    voice3.push(cmd);\n  }\n\n  const text: number[] = [];\n  for (let i = textIndex; i < buffer.byteLength; i++) {\n    const byte = buffer.getUint8(i);\n    text.push(byte);\n  }\n\n  return { voices: [voice1, voice2, voice3], text };\n};\n","export class Color {\n  r: number = 0;\n  g: number = 0;\n  b: number = 0;\n  a: number = 0;\n\n  init(color: Color): Color {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    this.a = color.a;\n    return this;\n  }\n\n  initRgba(r: number, g: number, b: number, a: number = 255): Color {\n    this.r = Math.max(Math.min(Math.round(r), 255), 0);\n    this.g = Math.max(Math.min(Math.round(g), 255), 0);\n    this.b = Math.max(Math.min(Math.round(b), 255), 0);\n    this.a = Math.max(Math.min(Math.round(a), 255), 0);\n    return this;\n  }\n\n  static color(r: number, g: number, b: number, a: number = 255): Color {\n    return new Color().initRgba(r, g, b, a);\n  }\n\n  static greyScaleColor(c: number, a: number = 255): Color {\n    return new Color().initRgba(c, c, c, a);\n  }\n\n  static color1(r: number, g: number, b: number, a: number = 1): Color {\n    return new Color().initRgba(255 * r, 255 * g, 255 * b, 255 * a);\n  }\n\n  static greyScaleColor1(c: number, a: number = 1): Color {\n    return new Color().initRgba(255 * c, 255 * c, 255 * c, 255 * a);\n  }\n\n  static fromUint32(color: number): Color {\n    return new Color().initRgba(color & 255, (color >>> 8) & 255, (color >>> 16) & 255, color >>> 24);\n  }\n\n  static black = new Color().initRgba(0, 0, 0);\n  static white = new Color().initRgba(255, 255, 255);\n  static red = new Color().initRgba(255, 0, 0);\n  static green = new Color().initRgba(0, 255, 0);\n  static blue = new Color().initRgba(0, 0, 255);\n  static transparentBlack = new Color().initRgba(0, 0, 0, 0);\n\n  uint32(): number {\n    return ((this.a << 24) | (this.b << 16) | (this.g << 8) | this.r);\n  }\n\n  rgba(): string {\n    return `rgba(${this.r},${this.g},${this.b},${this.a / 255})`;\n  }\n\n  mix(color: Color, f: number): Color {\n    return new Color().initRgba((1 - f) * this.r + f * color.r, (1 - f) * this.g + f * color.g, (1 - f) * this.b + f * color.b);\n  }\n  \n  shadow(sh: number): Color {\n    const addShadow = (c: number, sh: number): number => {\n      const result: number = c + sh;\n      return result > 255 ? 255 : result < 0 ? 0 : result;\n    };\n    return new Color().initRgba(addShadow(this.r, sh), addShadow(this.g, sh), addShadow(this.b, sh));\n  }\n}\n","import { Color } from './Color';\n\nexport type C64CharMap = { [key: number]: number };\nexport type C64PokeMap = { [key: number]: string };\nexport type C64Color = 'blk' | 'wht' | 'red' | 'cyn' | 'pur' | 'grn' | 'blu' | 'yel' | 'orng' | 'brn' | 'lred' | 'dgry' | 'mgry' | 'lgrn' | 'lblu' | 'lgry';\nexport type C64Fn = 'stop' | 'shOff' | 'shOn' | 'rtrn' | 'lCase' | 'down' | 'rvsOn' | 'home' | 'del' | 'right' | 'run' | 'f1' | 'f3' | 'f5' | 'f7' | 'f2' | 'f4' | 'f6' | 'f8' | 'shRtrn' | 'uCase' | 'up' | 'rvsOff' | 'clr' | 'inst' | 'left' | C64Color;\nexport type C64StringFn = { type: 'tab' | 'spc', value: number };\nexport type C64String = string | number | C64StringFn | Array<string | number | C64StringFn>;\n\nexport const pokeMap: C64PokeMap = {\n  0x0: '@',\n  0x1: 'A',\n  0x2: 'B',\n  0x3: 'C',\n  0x4: 'D',\n  0x5: 'E',\n  0x6: 'F',\n  0x7: 'G',\n  0x8: 'H',\n  0x9: 'I',\n  0xa: 'J',\n  0xb: 'K',\n  0xc: 'L',\n  0xd: 'M',\n  0xe: 'N',\n  0xf: 'O',\n  0x10: 'P',\n  0x11: 'Q',\n  0x12: 'R',\n  0x13: 'S',\n  0x14: 'T',\n  0x15: 'U',\n  0x16: 'V',\n  0x17: 'W',\n  0x18: 'X',\n  0x19: 'Y',\n  0x1a: 'Z',\n  0x1b: '[',\n  0x1c: '£',\n  0x1d: ']',\n  0x1e: '↑',\n  0x1f: '←',\n  0x20: ' ',\n  0x21: '!',\n  0x22: '\"',\n  0x23: '#',\n  0x24: '$',\n  0x25: '%',\n  0x26: '&',\n  0x27: '\\'',\n  0x28: '(',\n  0x29: ')',\n  0x2a: '*',\n  0x2b: '+',\n  0x2c: ',',\n  0x2d: '-',\n  0x2e: '.',\n  0x2f: '/',\n  0x30: '0',\n  0x31: '1',\n  0x32: '2',\n  0x33: '3',\n  0x34: '4',\n  0x35: '5',\n  0x36: '6',\n  0x37: '7',\n  0x38: '8',\n  0x39: '9',\n  0x3a: ':',\n  0x3b: ';',\n  0x3c: '<',\n  0x3d: '=',\n  0x3e: '>',\n  0x3f: '?',\n  0x40: '─',\n  0x41: '♠',\n  0x42: '│',\n  0x43: '─',\n  0x44: '\\u{1fb77}',\n  0x45: '\\u{1fb76}',\n  0x46: '\\u{1fb7a}',\n  0x47: '\\u{1fb71}',\n  0x48: '\\u{1fb74}',\n  0x49: '╮',\n  0x4a: '╰',\n  0x4b: '╯',\n  0x4c: '\\u{1fb7c}',\n  0x4d: '╲',\n  0x4e: '╱',\n  0x4f: '\\u{1fb7d}',\n  0x50: '\\u{1fb7e}',\n  0x51: '•',\n  0x52: '\\u{1fb7b}',\n  0x53: '♥',\n  0x54: '\\u{1fb70}',\n  0x55: '╭',\n  0x56: '╳',\n  0x57: '○',\n  0x58: '♣',\n  0x59: '\\u{1fb75}',\n  0x5a: '♦',\n  0x5b: '┼',\n  0x5c: '\\u{1fb8c}',\n  0x5d: '│',\n  0x5e: 'π',\n  0x5f: '◥',\n  0x60: ' ',\n  0x61: '▌',\n  0x62: '▄',\n  0x63: '▔',\n  0x64: '▁',\n  0x65: '▎',\n  0x66: '▒',\n  0x67: '\\u{1fb87}',\n  0x68: '\\u{1fb8f}',\n  0x69: '◤',\n  0x6a: '\\u{1fb87}',\n  0x6b: '├',\n  0x6c: '▗',\n  0x6d: '└',\n  0x6e: '┐',\n  0x6f: '▂',\n  0x70: '┌',\n  0x71: '┴',\n  0x72: '┬',\n  0x73: '┤',\n  0x74: '▎',\n  0x75: '▍',\n  0x76: '\\u{1fb88}',\n  0x77: '\\u{1fb82}',\n  0x78: '\\u{1fb83}',\n  0x79: '▃',\n  0x7a: '\\u{1fb7f}',\n  0x7b: '▖',\n  0x7c: '▝',\n  0x7d: '┘',\n  0x7e: '▘',\n  0x7f: '▚',\n};\n\nexport const pokeMapLowerCase: C64PokeMap = {\n  0x0: '@',\n  0x1: 'a',\n  0x2: 'b',\n  0x3: 'c',\n  0x4: 'd',\n  0x5: 'e',\n  0x6: 'f',\n  0x7: 'g',\n  0x8: 'h',\n  0x9: 'i',\n  0xa: 'j',\n  0xb: 'k',\n  0xc: 'l',\n  0xd: 'm',\n  0xe: 'n',\n  0xf: 'o',\n  0x10: 'p',\n  0x11: 'q',\n  0x12: 'r',\n  0x13: 's',\n  0x14: 't',\n  0x15: 'u',\n  0x16: 'v',\n  0x17: 'w',\n  0x18: 'x',\n  0x19: 'y',\n  0x1a: 'z',\n  0x1b: '[',\n  0x1c: '£',\n  0x1d: ']',\n  0x1e: '↑',\n  0x1f: '←',\n  0x20: ' ',\n  0x21: '!',\n  0x22: '\"',\n  0x23: '#',\n  0x24: '$',\n  0x25: '%',\n  0x26: '&',\n  0x27: '\\'',\n  0x28: '(',\n  0x29: ')',\n  0x2a: '*',\n  0x2b: '+',\n  0x2c: ',',\n  0x2d: '-',\n  0x2e: '.',\n  0x2f: '/',\n  0x30: '0',\n  0x31: '1',\n  0x32: '2',\n  0x33: '3',\n  0x34: '4',\n  0x35: '5',\n  0x36: '6',\n  0x37: '7',\n  0x38: '8',\n  0x39: '9',\n  0x3a: ':',\n  0x3b: ';',\n  0x3c: '<',\n  0x3d: '=',\n  0x3e: '>',\n  0x3f: '?',\n  0x40: '─',\n  0x41: 'A',\n  0x42: 'B',\n  0x43: 'C',\n  0x44: 'D',\n  0x45: 'E',\n  0x46: 'F',\n  0x47: 'G',\n  0x48: 'H',\n  0x49: 'I',\n  0x4a: 'J',\n  0x4b: 'K',\n  0x4c: 'L',\n  0x4d: 'M',\n  0x4e: 'N',\n  0x4f: 'O',\n  0x50: 'P',\n  0x51: 'Q',\n  0x52: 'R',\n  0x53: 'S',\n  0x54: 'T',\n  0x55: 'U',\n  0x56: 'V',\n  0x57: 'W',\n  0x58: 'X',\n  0x59: 'Y',\n  0x5a: 'Z',\n  0x5b: '┼',\n  0x5c: '\\u{1fb8c}',\n  0x5d: '│',\n  0x5e: '\\u{1fb90}',\n  0x5f: '\\u{1fb98}',\n  0x60: ' ',\n  0x61: '▌',\n  0x62: '▄',\n  0x63: '▔',\n  0x64: '▁',\n  0x65: '▎',\n  0x66: '▒',\n  0x67: '\\u{1fb87}',\n  0x68: '\\u{1fb8f}',\n  0x69: '\\u{1fb99}',\n  0x6a: '\\u{1fb87}',\n  0x6b: '├',\n  0x6c: '▗',\n  0x6d: '└',\n  0x6e: '┐',\n  0x6f: '▂',\n  0x70: '┌',\n  0x71: '┴',\n  0x72: '┬',\n  0x73: '┤',\n  0x74: '▎',\n  0x75: '▍',\n  0x76: '\\u{1fb88}',\n  0x77: '\\u{1fb82}',\n  0x78: '\\u{1fb83}',\n  0x79: '▃',\n  0x7a: '✓',\n  0x7b: '▖',\n  0x7c: '▝',\n  0x7d: '┘',\n  0x7e: '▘',\n  0x7f: '▚',\n};\n\nexport const charMap: C64CharMap = {\n  0x3: 0x83,\n  0x5: 0x85,\n  0x8: 0x88,\n  0x9: 0x89,\n  0xd: 0x8d,\n  0xe: 0x8e,\n  0x11: 0x91,\n  0x12: 0x92,\n  0x13: 0x93,\n  0x14: 0x94,\n  0x1c: 0x9c,\n  0x1d: 0x9d,\n  0x1e: 0x9e,\n  0x1f: 0x9f,\n  0x20: 0x20,\n  0x21: 0x21,\n  0x22: 0x22,\n  0x23: 0x23,\n  0x24: 0x24,\n  0x25: 0x25,\n  0x26: 0x26,\n  0x27: 0x27,\n  0x28: 0x28,\n  0x29: 0x29,\n  0x2a: 0x2a,\n  0x2b: 0x2b,\n  0x2c: 0x2c,\n  0x2d: 0x2d,\n  0x2e: 0x2e,\n  0x2f: 0x2f,\n  0x30: 0x30,\n  0x31: 0x31,\n  0x32: 0x32,\n  0x33: 0x33,\n  0x34: 0x34,\n  0x35: 0x35,\n  0x36: 0x36,\n  0x37: 0x37,\n  0x38: 0x38,\n  0x39: 0x39,\n  0x3a: 0x3a,\n  0x3b: 0x3b,\n  0x3c: 0x3c,\n  0x3d: 0x3d,\n  0x3e: 0x3e,\n  0x3f: 0x3f,\n  0x40: 0x0,\n  0x41: 0x1,\n  0x42: 0x2,\n  0x43: 0x3,\n  0x44: 0x4,\n  0x45: 0x5,\n  0x46: 0x6,\n  0x47: 0x7,\n  0x48: 0x8,\n  0x49: 0x9,\n  0x4a: 0xa,\n  0x4b: 0xb,\n  0x4c: 0xc,\n  0x4d: 0xd,\n  0x4e: 0xe,\n  0x4f: 0xf,\n  0x50: 0x10,\n  0x51: 0x11,\n  0x52: 0x12,\n  0x53: 0x13,\n  0x54: 0x14,\n  0x55: 0x15,\n  0x56: 0x16,\n  0x57: 0x17,\n  0x58: 0x18,\n  0x59: 0x19,\n  0x5a: 0x1a,\n  0x5b: 0x1b,\n  0x5c: 0x1c,\n  0x5d: 0x1d,\n  0x5e: 0x1e,\n  0x5f: 0x1f,\n  0x60: 0x40,\n  0x61: 0x41,\n  0x62: 0x42,\n  0x63: 0x43,\n  0x64: 0x44,\n  0x65: 0x45,\n  0x66: 0x46,\n  0x67: 0x47,\n  0x68: 0x48,\n  0x69: 0x49,\n  0x6a: 0x4a,\n  0x6b: 0x4b,\n  0x6c: 0x4c,\n  0x6d: 0x4d,\n  0x6e: 0x4e,\n  0x6f: 0x4f,\n  0x70: 0x50,\n  0x71: 0x51,\n  0x72: 0x52,\n  0x73: 0x53,\n  0x74: 0x54,\n  0x75: 0x55,\n  0x76: 0x56,\n  0x77: 0x57,\n  0x78: 0x58,\n  0x79: 0x59,\n  0x7a: 0x5a,\n  0x7b: 0x5b,\n  0x7c: 0x5c,\n  0x7d: 0x5d,\n  0x7e: 0x5e,\n  0x7f: 0x5f,\n  0x81: 0xc1,\n  0x83: 0xc3,\n  0x85: 0xc5,\n  0x86: 0xc6,\n  0x87: 0xc7,\n  0x88: 0xc8,\n  0x89: 0xc9,\n  0x8a: 0xca,\n  0x8b: 0xcb,\n  0x8c: 0xcc,\n  0x8d: 0xcd,\n  0x8e: 0xce,\n  0x90: 0xd0,\n  0x91: 0xd1,\n  0x92: 0xd2,\n  0x93: 0xd3,\n  0x94: 0xd4,\n  0x95: 0xd5,\n  0x96: 0xd6,\n  0x97: 0xd7,\n  0x98: 0xd8,\n  0x99: 0xd9,\n  0x9a: 0xda,\n  0x9b: 0xdb,\n  0x9c: 0xdc,\n  0x9d: 0xdd,\n  0x9e: 0xde,\n  0x9f: 0xdf,\n  0xa0: 0x60,\n  0xa1: 0x61,\n  0xa2: 0x62,\n  0xa3: 0x63,\n  0xa4: 0x64,\n  0xa5: 0x65,\n  0xa6: 0x66,\n  0xa7: 0x67,\n  0xa8: 0x68,\n  0xa9: 0x69,\n  0xaa: 0x6a,\n  0xab: 0x6b,\n  0xac: 0x6c,\n  0xad: 0x6d,\n  0xae: 0x6e,\n  0xaf: 0x6f,\n  0xb0: 0x70,\n  0xb1: 0x71,\n  0xb2: 0x72,\n  0xb3: 0x73,\n  0xb4: 0x74,\n  0xb5: 0x75,\n  0xb6: 0x76,\n  0xb7: 0x77,\n  0xb8: 0x78,\n  0xb9: 0x79,\n  0xba: 0x7a,\n  0xbb: 0x7b,\n  0xbc: 0x7c,\n  0xbd: 0x7d,\n  0xbe: 0x7e,\n  0xbf: 0x7f,\n  0xc0: 0x40,\n  0xc1: 0x41,\n  0xc2: 0x42,\n  0xc3: 0x43,\n  0xc4: 0x44,\n  0xc5: 0x45,\n  0xc6: 0x46,\n  0xc7: 0x47,\n  0xc8: 0x48,\n  0xc9: 0x49,\n  0xca: 0x4a,\n  0xcb: 0x4b,\n  0xcc: 0x4c,\n  0xcd: 0x4d,\n  0xce: 0x4e,\n  0xcf: 0x4f,\n  0xd0: 0x50,\n  0xd1: 0x51,\n  0xd2: 0x52,\n  0xd3: 0x53,\n  0xd4: 0x54,\n  0xd5: 0x55,\n  0xd6: 0x56,\n  0xd7: 0x57,\n  0xd8: 0x58,\n  0xd9: 0x59,\n  0xda: 0x5a,\n  0xdb: 0x5b,\n  0xdc: 0x5c,\n  0xdd: 0x5d,\n  0xde: 0x5e,\n  0xdf: 0x5f,\n  0xe0: 0x60,\n  0xe1: 0x61,\n  0xe2: 0x62,\n  0xe3: 0x63,\n  0xe4: 0x64,\n  0xe5: 0x65,\n  0xe6: 0x66,\n  0xe7: 0x67,\n  0xe8: 0x68,\n  0xe9: 0x69,\n  0xea: 0x6a,\n  0xeb: 0x6b,\n  0xec: 0x6c,\n  0xed: 0x6d,\n  0xee: 0x6e,\n  0xef: 0x6f,\n  0xf0: 0x70,\n  0xf1: 0x71,\n  0xf2: 0x72,\n  0xf3: 0x73,\n  0xf4: 0x74,\n  0xf5: 0x75,\n  0xf6: 0x76,\n  0xf7: 0x77,\n  0xf8: 0x78,\n  0xf9: 0x79,\n  0xfa: 0x7a,\n  0xfb: 0x7b,\n  0xfc: 0x7c,\n  0xfd: 0x7d,\n  0xfe: 0x7e,\n  0xff: 0x5e,\n};\n\n// control Characters\n// https://www.c64-wiki.de/wiki/Steuerzeichen\nexport const stp: number = 0x83; // C\nexport const wht: number = 0x85; // E\nexport const shOff: number = 0x88; // H\nexport const shOn: number = 0x89; // I\nexport const rtrn: number = 0x8d; // eigentlich kein sichtbares Zeichen?\nexport const lCase: number = 0x8e; // N\nexport const down: number = 0x91; // Q\nexport const rvsOn: number = 0x92; // R\nexport const home: number = 0x93; // S\nexport const del: number = 0x94; // T\nexport const red: number = 0x9c; // £\nexport const right: number = 0x9d; // ]\nexport const grn: number = 0x9e; // ↑\nexport const blu: number = 0x9f; // ←\nexport const orng: number = 0xc1; // ♠\nexport const run: number = 0xc3; // eigentlich kein Steuerzeichen?\nexport const f1: number = 0xc5; // \\u{1fb76}\nexport const f3: number = 0xc6; // \\u{1fb7a}\nexport const f5: number = 0xc7; // \\u{1fb71}\nexport const f7: number = 0xc8; // \\u{1fb74}\nexport const f2: number = 0xc9; // ╮\nexport const f4: number = 0xca; // ╰\nexport const f6: number = 0xcb; // ╯\nexport const f8: number = 0xcc; // \\u{1fb7c}\nexport const shRtrn: number = 0xcd; // ╲\nexport const uCase: number = 0xce; // ╱\nexport const blk: number = 0xd0; // \\u{1fb7e}\nexport const up: number = 0xd1; // •\nexport const rvsOff: number = 0xd2; // \\u{1fb7b}\nexport const clr: number = 0xd3; // ♥\nexport const inst: number = 0xd4; // \\u{1fb70}\nexport const brn: number = 0xd5; // ╭\nexport const lred: number = 0xd6; // ╳\nexport const dgry: number = 0xd7; // ○\nexport const mgry: number = 0xd8; // ♣\nexport const lgrn: number = 0xd9; // \\u{1fb75}\nexport const lblu: number = 0xda; // ♦\nexport const lgry: number = 0xdb; // ┼\nexport const pur: number = 0xdc; // \\u{1fb8c}\nexport const left: number = 0xdd; // │\nexport const yel: number = 0xde; // π\nexport const cyn: number = 0xdf; // ◥\n\n// keine C64 Character!\nexport const bcksp: number = 0x100; // Backspace\n\nexport const findPokeIndex = (pokeMap: C64PokeMap, char: string): number => {\n  const index: string | undefined = Object.getOwnPropertyNames(pokeMap).find(index => pokeMap[parseInt(index)] === char);\n  return index !== undefined && parseInt(index) || 0x3f;\n};\n\nexport const stringToNumberArray = (pokeMap: C64PokeMap, s: string): number[] => [...s].map(char => findPokeIndex(pokeMap, char));\n\nexport const flattenMixedArray = (pokeMap: C64PokeMap, a: Array<string | number | C64StringFn>): Array<number | C64StringFn> => {\n  const result: Array<number | C64StringFn> = [];\n  a.forEach(elem => typeof(elem) === 'string' ? result.push(...stringToNumberArray(pokeMap, elem)) : result.push(elem));\n  return result;\n};\n\nexport const c64StringToNumberArray = (pokeMap: C64PokeMap, text: C64String): Array<number | C64StringFn> => {\n  return typeof(text) === 'string' ? stringToNumberArray(pokeMap, text) : typeof(text) === 'number' || (typeof(text) === 'object' && !Array.isArray(text)) ? [text] : flattenMixedArray(pokeMap, text);\n};\n\nexport const colorTable: { [key in C64Color]: Color } = {\n  blk: Color.black,\n  wht: Color.white,\n  red: Color.color(136, 0, 0),\n  cyn: Color.color(170, 255, 238),\n  pur: Color.color(204, 68, 204),\n  grn: Color.color(0, 204, 85),\n  blu: Color.color(0, 0, 170),\n  yel: Color.color(238, 238, 119),\n  orng: Color.color(221, 136, 85),\n  brn: Color.color(102, 68, 0),\n  lred: Color.color(255, 119, 119),\n  dgry: Color.color(51, 51, 51),\n  mgry: Color.color(119, 119, 119),\n  lgrn: Color.color(170, 255, 102),\n  lblu: Color.color(0, 136, 255),\n  lgry: Color.color(187, 187, 187)\n};\n\nexport const colorMap: { [key: number]: C64Color } = {\n  0: 'blk',\n  1: 'wht',\n  2: 'red',\n  3: 'cyn',\n  4: 'pur',\n  5: 'grn',\n  6: 'blu',\n  7: 'yel',\n  8: 'orng',\n  9: 'brn',\n  10: 'lred',\n  11: 'dgry',\n  12: 'mgry',\n  13: 'lgrn',\n  14: 'lblu',\n  15: 'lgry',\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(109);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","FREQUENCY_FACTOR","CustomAudioParam","_audioContext","_values","_defaultValue","constructor","audioContext","defaultValue","this","push","startTime","currentTime","value","interpolation","setValueAtTime","unshift","length","i","splice","getValueAtTime","time","endTime","startValue","endValue","Math","exp","timeConstant","cancelScheduledValues","deleteIndex","findIndex","linearRampToValueAtTime","startEntry","pop","setTargetAtTime","SidOscillator","_oscillator","AudioWorkletNode","numberOfInputs","numberOfOutputs","outputChannelCount","processorOptions","sampleRate","voice1Params","waveform","parameters","get","frequency","width","sync","rng","voice2Params","voice3Params","connect","destination","output","input","disconnect","SidVoice","_adsrGain","_waveformParameter","_frequencyParameter","_widthParameter","_syncParameter","_rngParameter","_attackDurationParameter","_decayDurationParameter","_sustainLevelParameter","_releaseDurationParameter","_adsrGainParameter","voiceParams","GainNode","gain","inNode","frequencyParam","widthParam","c64Frequency","c64Waveform","waveforms","includes","static","c64AttackDuration","attackDuration","timeTable","c64DecayDuration","decayDuration","c64SustainLevel","sustainLevel","c64ReleaseDuration","releaseDuration","c64PulseWidth","pulseWidth","c64Sync","Number","c64Rng","start","cancelAndHoldAtTime","stop","reset","getFilterFrequency","y0","ymax","x0","mu","getLowPassFrequency","getHighPassFrequency","getBandPassFrequency","getFilterValue","log","max","min","getLowPassValue","getHighPassValue","getBandPassValue","getFilterResonance","a","b","c","m","n","SidFilter","_inNode","_lowPass","_highPass","_bandPass","_bandPassPeak","_outNode","_in_out","_in_low","_in_band","_in_high","_low_band","_low_high","_band_high","_low_out","_band_out","_high_out","BiquadFilterNode","type","Q","lowPassFilter","highPassFilter","bandPassFilter","bandPassPeakFilter","bandPassFrequency","c64Resonance","getHighPassResonance","getLowPassResonance","getBandPassResonance","resonance","c64FilterType","filterTypes","filterType","Sid","_mainGain","_voice1","_voice2","_voice3","_filter","_v1_gain","_v1_filter","_v1_main","_v2_gain","_v2_filter","_v2_main","_v3_gain","_v3_switch","_v3_filter","_v3_main","AudioContext","resume","voice1","voice2","voice3","voices","filter","c64FilterVoice","filterVoice","voiceIndex","c64Voice3Off","voice3Off","Boolean","c64Volume","volume","keyDivs","document","getElementById","textLines","channelSelect","leftFileSelect","leftOpenFileLabel","leftOpenFileInput","leftClearButton","rightFileSelect","rightOpenFileLabel","rightOpenFileInput","rightClearButton","playPauseButton","currentSpan","timeSlider","durationSpan","internalState","selectedChannel","isLoading","isPlaying","durationLeft","voicesDataLeft","fileSelectValueLeft","openFileValueLeft","durationRight","voicesDataRight","fileSelectValueRight","openFileValueRight","notes","currentNotes","text","audioContextStartTime","state","Proxy","set","target","property","clearKeyColor","index","updateUiKeyboard","updateUiText","updateUiFileSelects","updateUiPlayArea","getDuration","getTimeString","mins","floor","secs","String","padStart","backgroundColor","getColoredText","textColor","reverse","span","createElement","style","color","innerText","getFilenameFromString","path","replace","note","undefined","j","setKeyColor","textContent","count","rgba","textLoop","byte","append","display","disabled","classList","add","remove","loadSidFile","async","channel","file","pause","voicesData","duration","clear","onchange","e","files","response","fetch","blob","onclick","background","colorMap","play","updateKeyboardInterval","setInterval","updateKeyboard","clearInterval","suspend","reloadSidFiles","onmousedown","ontouchstart","oninput","onmouseup","ontouchend","audioWorklet","addModule","createGain","Error","console","error","sidLeft","sidRight","merger","ChannelMergerNode","connectMono","connectStereo","calcFrequency","modifier","octave","detune","transpose","d","f","g","rst","NaN","calcDuration","dotted","tempo","utilityDuration","mod","setFrequencyPortamentoVibrato","voice","portamento","vibrato","rate","depth","porRate","sign","startFrequency","abs","targetValue","porDuration","vibRate","upperFreq","up","setPulseWidthSweep","sweepRate","getFilterSweepValues","calc","step","values","setFilterFrequencyWidthSweep","dur","setValueCurveAtTime","bandPassValues","setAutoFilterFrequency","noteFrequency","autoFilter","filterModes","filterFrequency","filterValue","initVoices","sid","loadVoices","globalTime","voicesVars","cmdPointer","callStack","hed","pointer","releasePoint","tie","portamentoRate","portamentoStartFrequency","pulseWidthSweepRate","vibratoRate","vibratoDepth","filterFrequencySweepRate","halt","phrases","cmd","data","phrase","find","phr","JSON","stringify","slice","noteIndex","absFrequency","some","v","map","loadFile","sidData","reloadVoices","getCommand","byte1","byte2","warn","trunc","octaves","halfsteps","trans","parseSid","buffer","DataView","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsArrayBuffer","readFileAsArrayBuffer","getUint16","voice1Length","voice2Length","voice3Length","voice2Index","voice3Index","textIndex","getUint8","byteLength","Color","r","init","initRgba","round","greyScaleColor","color1","greyScaleColor1","fromUint32","uint32","mix","shadow","sh","addShadow","colorTable","blk","black","wht","white","red","cyn","pur","grn","blu","yel","orng","brn","lred","dgry","mgry","lgrn","lblu","lgry","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","Symbol","queue","forEach","fn","body","hasAwait","currentDeps","outerResolve","depQueues","Set","promise","rej","x","deps","dep","then","obj","ret","wrapDeps","getResult","fnQueue","q","has","err","definition","key","o","Object","defineProperty","enumerable","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}